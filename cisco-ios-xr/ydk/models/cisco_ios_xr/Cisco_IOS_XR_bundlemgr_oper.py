""" Cisco_IOS_XR_bundlemgr_oper 

This module contains a collection of YANG definitions
for Cisco IOS\-XR bundlemgr package operational data.

This module contains definitions
for the following management objects\:
  lacp\-bundles\: LACP bundle data
  bundle\-information\: bundle information
  lacp\-data\: lacp data
  bundles\: bundles
  lacp\-bundle\-members\: lacp bundle members
  bundles\-adjacency\: bundles adjacency

Copyright (c) 2013\-2016 by Cisco Systems, Inc.
All rights reserved.

"""


import re
import collections

from enum import Enum

from ydk.types import Empty, YList, YLeafList, DELETE, Decimal64, FixedBitsDict

from ydk.errors import YPYError, YPYModelError



class BmAfIdEnum(Enum):
    """
    BmAfIdEnum

    Bm af id

    .. data:: bm_af_id_ipv4 = 1136568623

    	IPv4 AFI

    .. data:: bm_af_id_ipv6 = 1136568624

    	IPv6 AFI

    """

    bm_af_id_ipv4 = 1136568623

    bm_af_id_ipv6 = 1136568624


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmAfIdEnum']


class BmBdlMacSourceEnum(Enum):
    """
    BmBdlMacSourceEnum

    Bm bdl mac source

    .. data:: bm_bdl_mac_source_unknown = 0

    	The MAC is currently unknown

    .. data:: bm_bdl_mac_source_chassis = 1

    	The MAC was allocated from the chassis pool

    .. data:: bm_bdl_mac_source_configured = 2

    	The MAC was configured by the user

    .. data:: bm_bdl_mac_source_member = 3

    	The MAC belongs to a member

    .. data:: bm_bdl_mac_source_peer = 4

    	The MAC has come from the peer device

    """

    bm_bdl_mac_source_unknown = 0

    bm_bdl_mac_source_chassis = 1

    bm_bdl_mac_source_configured = 2

    bm_bdl_mac_source_member = 3

    bm_bdl_mac_source_peer = 4


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmBdlMacSourceEnum']


class BmBdlStateEnum(Enum):
    """
    BmBdlStateEnum

    Bm bdl state

    .. data:: bm_bdl_state_admin_down = 0

    	The bundle has been configured Down

    .. data:: bm_bdl_state_down = 1

    	The bundle is Down

    .. data:: bm_bdl_state_client_down = 2

    	The bundle is controlled by CLIENT Down

    .. data:: bm_bdl_state_ptnr_down = 3

    	The bundle is Down on the partner device

    .. data:: bm_bdl_state_bundle_shutdown = 4

    	Bundle shutdown has been configured

    .. data:: bm_bdl_state_pe_isolated = 5

    	The bundle cannot contact the core

    .. data:: bm_bdl_state_nak = 6

    	The state is disputed by a peer device

    .. data:: bm_bdl_state_up_active = 7

    	The bundle is Up

    .. data:: bm_bdl_state_mlacp_hot_standby = 8

    	The bundle is Up, but is mLACP standby

    .. data:: bm_bdl_state_mlacp_cold_standby = 9

    	The bundle is mLACP standby, but will not

    	eliminate traffic loss

    .. data:: bm_bdl_state_unknown = 10

    	The bundle state has not been determined

    .. data:: bm_bdl_state_cold_standby = 11

    	The bundle is standby, but will not eliminate

    	traffic loss

    .. data:: bm_bdl_state_error_disabled = 12

    	The bundle has been error-disabled

    .. data:: bm_bdl_state_efd_disabled = 13

    	The bundle has been disabled by EFD

    """

    bm_bdl_state_admin_down = 0

    bm_bdl_state_down = 1

    bm_bdl_state_client_down = 2

    bm_bdl_state_ptnr_down = 3

    bm_bdl_state_bundle_shutdown = 4

    bm_bdl_state_pe_isolated = 5

    bm_bdl_state_nak = 6

    bm_bdl_state_up_active = 7

    bm_bdl_state_mlacp_hot_standby = 8

    bm_bdl_state_mlacp_cold_standby = 9

    bm_bdl_state_unknown = 10

    bm_bdl_state_cold_standby = 11

    bm_bdl_state_error_disabled = 12

    bm_bdl_state_efd_disabled = 13


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmBdlStateEnum']


class BmFeatureStatusEnum(Enum):
    """
    BmFeatureStatusEnum

    Bm feature status

    .. data:: bm_feature_not_configured = 0

    	No configuration is applied for a feature

    .. data:: bm_feature_not_operational = 1

    	The feature is currently not operational

    .. data:: bm_feature_operational = 2

    	The feature is currently operational

    """

    bm_feature_not_configured = 0

    bm_feature_not_operational = 1

    bm_feature_operational = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmFeatureStatusEnum']


class BmMbrStateReasonEnum(Enum):
    """
    BmMbrStateReasonEnum

    Bm mbr state reason

    .. data:: bm_mbr_state_reason_unknown = 0

    	Reason unavailable (diagnostics error)

    .. data:: bm_mbr_state_reason_unselectable_unknown = 1

    	Link cannot be used (unknown reason)

    .. data:: bm_mbr_state_reason_link_down = 2

    	Link is down

    .. data:: bm_mbr_state_reason_link_deleting = 3

    	Link is being removed from the bundle

    .. data:: bm_mbr_state_reason_creating = 4

    	Link is in the process of being created

    .. data:: bm_mbr_state_reason_bundle_creating = 5

    	Bundle is in the process of being created

    .. data:: bm_mbr_state_reason_bundle_deleting = 6

    	Bundle is in the process of being deleted

    .. data:: bm_mbr_state_reason_bundle_admin_down = 7

    	Bundle has been shut down

    .. data:: bm_mbr_state_reason_replicating = 8

    	Bundle is in the process of being replicated to

    	this location

    .. data:: bm_mbr_state_reason_bandwidth = 9

    	Incompatible with other links in the bundle

    	(bandwidth out of range)

    .. data:: bm_mbr_state_reason_loop_back = 10

    	Loopback: Actor and Partner have the same

    	System ID and Key

    .. data:: bm_mbr_state_reason_activity_type = 11

    	Incompatible with other links in the bundle

    	(LACP vs non-LACP)

    .. data:: bm_mbr_state_reason_bundle_shutdown = 12

    	Bundle shutdown is configured for the bundle

    .. data:: bm_mbr_state_reason_min_selected = 13

    	Not enough links available to meet

    	minimum-active threshold

    .. data:: bm_mbr_state_reason_max_selected = 14

    	Link is Standby due to maximum-active links

    	configuration

    .. data:: bm_mbr_state_reason_link_limit = 15

    	Bundle has too many member links configured

    .. data:: bm_mbr_state_reason_active_limit = 16

    	Bundle has reached maximum supported number of

    	active links

    .. data:: bm_mbr_state_reason_standby_unknown = 17

    	Link is Standby (unknown reason)

    .. data:: bm_mbr_state_reason_expired = 18

    	Link is Expired; LACPDUs are not being received

    	from the partner

    .. data:: bm_mbr_state_reason_defaulted = 19

    	Link is Defaulted; LACPDUs are not being

    	received from the partner

    .. data:: bm_mbr_state_reason_act_or_not_agg = 20

    	Link is Not Aggregatable (unknown reason)

    .. data:: bm_mbr_state_reason_partner_not_agg = 21

    	Partner has marked the link as Not Aggregatable

    .. data:: bm_mbr_state_reason_lagid = 22

    	Partner System ID/Key do not match that of the

    	Selected links

    .. data:: bm_mbr_state_reason_bundle_not_cfgd = 23

    	Bundle interface is not present in

    	configuration

    .. data:: bm_mbr_state_reason_bundle_not_ready = 24

    	Wait-while timer is running

    .. data:: bm_mbr_state_reason_partner_ood = 25

    	Partner has not echoed the correct parameters

    	for this link

    .. data:: bm_mbr_state_reason_partner_not_in_sync = 26

    	Partner is not Synchronized (Waiting, Standby,

    	or LAG ID mismatch)

    .. data:: bm_mbr_state_reason_foreign_partner_oos = 27

    	Partner is not Synchronized (Waiting, not

    	Selected, or out-of-date)

    .. data:: bm_mbr_state_reason_attach_unknown = 28

    	Link is Attached and has not gone Collecting

    	(unknown reason)

    .. data:: bm_mbr_state_reason_partner_not_collecting = 29

    	Partner has not advertized that it is

    	Collecting

    .. data:: bm_mbr_state_reason_collect_unknown = 30

    	Link is Collecting and has not gone

    	Distributing (unknown reason)

    .. data:: bm_mbr_state_reason_standby_foreign = 31

    	Link is marked as Standby by mLACP peer

    .. data:: bm_mbr_state_reason_bfd_starting = 32

    	Link is waiting for BFD session to start

    .. data:: bm_mbr_state_reason_bfd_down = 33

    	BFD state of this link is Down

    .. data:: bm_mbr_state_reason_bfd_nbr_unconfig = 34

    	BFD session is unconfigured on the remote end

    .. data:: bm_mbr_state_reason_mlacp = 35

    	Link is not operational as a result of mLACP

    	negotiations

    .. data:: bm_mbr_state_reason_pe_isolated = 36

    	ICCP group is isolated from the core network

    .. data:: bm_mbr_state_reason_forced_switchover = 37

    	Forced switchover to the mLACP peer

    .. data:: bm_mbr_state_reason_errdis_unknown = 38

    	Link is error disabled (unknown reason)

    .. data:: bm_mbr_state_reason_mlacp_no_mbr_state_info = 39

    	Waiting for member state information from mLACP

    	peer

    .. data:: bm_mbr_state_reason_active = 40

    	Link is Active

    .. data:: bm_mbr_state_reason_mlacp_no_bdl_state_info = 41

    	Waiting for bundle state information from mLACP

    	peer

    .. data:: bm_mbr_state_reason_mlacp_no_bdl_config_info = 42

    	Waiting for bundle configuration information

    	from mLACP peer

    .. data:: bm_mbr_state_reason_mlacp_no_bdl_sync = 43

    	Waiting for bundle to complete initial

    	synchronization with mLACP peer

    .. data:: bm_mbr_state_reason_mlacp_bdl_has_no_peer = 44

    	mLACP bundle does not have a peer device

    .. data:: bm_mbr_state_reason_mlacp_nak = 45

    	Link is being ignored due to an inconsistency

    	with mLACP peer

    .. data:: bm_mbr_state_reason_mlacp_transport_unavailable = 46

    	ICCP transport is unavailable

    .. data:: bm_mbr_state_reason_mlacp_not_configured = 47

    	ICCP Group is not fully configured

    .. data:: bm_mbr_state_reason_recovery_timer = 48

    	mLACP recovery delay timer is running

    .. data:: bm_mbr_state_reason_mlacp_standby = 49

    	mLACP peer is active

    .. data:: bm_mbr_state_reason_maximized_out = 50

    	mLACP peer has more links/bandwidth available

    .. data:: bm_mbr_state_reason_mlacp_peer_selected = 51

    	mLACP peer has one or more links Selected

    .. data:: bm_mbr_state_reason_mlacp_connect_timer_running = 52

    	mLACP bundle does not have a peer device

    	(connect timer running)

    .. data:: bm_mbr_state_reason_bundle_not_mlacp = 53

    	Bundle is not configured to run mLACP

    .. data:: bm_mbr_state_reason_no_lon = 54

    	Bundle has too many working links configured

    	(more than the maximum-active limit)

    .. data:: bm_mbr_state_reason_cumul_rel_bw_limit = 55

    	Additional bandwidth from link would exceed

    	load balancing capabilities

    .. data:: bm_mbr_state_reason_no_mac = 56

    	No MAC address available for the bundle

    .. data:: bm_mbr_state_reason_no_system_id = 57

    	No system ID available for use by this bundle

    .. data:: bm_mbr_state_reason_link_shutdown = 58

    	Link is shutdown

    .. data:: bm_mbr_state_reason_activity_mlacp = 59

    	Non-LACP link in mLACP bundle

    .. data:: bm_mbr_state_reason_activity_iccp = 60

    	LACP link in inter-chassis bundle

    .. data:: bm_mbr_state_reason_bundle_icpe_mlacp = 61

    	Parent bundle is both inter-chassis and

    	configured for mLACP

    .. data:: bm_mbr_state_reason_no_link_num = 62

    	Too many bundle members in system; no link

    	number available

    .. data:: bm_mbr_state_reason_standby_peer_higher_prio = 63

    	mLACP peer has a higher priority link

    .. data:: bm_mbr_state_reason_red_state_standby = 64

    	Link is in standby redundancy state

    .. data:: bm_mbr_state_reason_other_red_state_standby = 65

    	One or more links in the bundle are in standby

    	redundancy state

    .. data:: bm_mbr_state_reason_hold_ing = 66

    	Holding down temporary to avoid churn after

    	restart

    .. data:: bm_mbr_state_reason_bundle_error_disabled = 67

    	Bundle has been error-disabled

    .. data:: bm_mbr_state_reason_bundle_efd_disabled = 68

    	Bundle has been disabled by EFD

    .. data:: bm_mbr_state_reason_singleton_pe_isolated = 69

    	Singleton ICCP group is isolated from the core

    	network

    .. data:: bm_mbr_state_reason_bfd_ipv6_starting = 70

    	Link is waiting for BFDv6 session to start

    .. data:: bm_mbr_state_reason_bfd_ipv6_down = 71

    	BFDv6 state of this link is Down

    .. data:: bm_mbr_state_reason_bfd_ipv6_nbr_unconfig = 72

    	BFDv6 session is unconfigured on the remote end

    .. data:: bm_mbr_state_reason_timer_running = 73

    	LACP delay timer is running

    .. data:: bm_mbr_state_reason_client_bundle_ctrl = 74

    	Client has configured the bundle state Down

    .. data:: bm_mbr_state_reason_count = 75

    	Enumeration maximum value

    """

    bm_mbr_state_reason_unknown = 0

    bm_mbr_state_reason_unselectable_unknown = 1

    bm_mbr_state_reason_link_down = 2

    bm_mbr_state_reason_link_deleting = 3

    bm_mbr_state_reason_creating = 4

    bm_mbr_state_reason_bundle_creating = 5

    bm_mbr_state_reason_bundle_deleting = 6

    bm_mbr_state_reason_bundle_admin_down = 7

    bm_mbr_state_reason_replicating = 8

    bm_mbr_state_reason_bandwidth = 9

    bm_mbr_state_reason_loop_back = 10

    bm_mbr_state_reason_activity_type = 11

    bm_mbr_state_reason_bundle_shutdown = 12

    bm_mbr_state_reason_min_selected = 13

    bm_mbr_state_reason_max_selected = 14

    bm_mbr_state_reason_link_limit = 15

    bm_mbr_state_reason_active_limit = 16

    bm_mbr_state_reason_standby_unknown = 17

    bm_mbr_state_reason_expired = 18

    bm_mbr_state_reason_defaulted = 19

    bm_mbr_state_reason_act_or_not_agg = 20

    bm_mbr_state_reason_partner_not_agg = 21

    bm_mbr_state_reason_lagid = 22

    bm_mbr_state_reason_bundle_not_cfgd = 23

    bm_mbr_state_reason_bundle_not_ready = 24

    bm_mbr_state_reason_partner_ood = 25

    bm_mbr_state_reason_partner_not_in_sync = 26

    bm_mbr_state_reason_foreign_partner_oos = 27

    bm_mbr_state_reason_attach_unknown = 28

    bm_mbr_state_reason_partner_not_collecting = 29

    bm_mbr_state_reason_collect_unknown = 30

    bm_mbr_state_reason_standby_foreign = 31

    bm_mbr_state_reason_bfd_starting = 32

    bm_mbr_state_reason_bfd_down = 33

    bm_mbr_state_reason_bfd_nbr_unconfig = 34

    bm_mbr_state_reason_mlacp = 35

    bm_mbr_state_reason_pe_isolated = 36

    bm_mbr_state_reason_forced_switchover = 37

    bm_mbr_state_reason_errdis_unknown = 38

    bm_mbr_state_reason_mlacp_no_mbr_state_info = 39

    bm_mbr_state_reason_active = 40

    bm_mbr_state_reason_mlacp_no_bdl_state_info = 41

    bm_mbr_state_reason_mlacp_no_bdl_config_info = 42

    bm_mbr_state_reason_mlacp_no_bdl_sync = 43

    bm_mbr_state_reason_mlacp_bdl_has_no_peer = 44

    bm_mbr_state_reason_mlacp_nak = 45

    bm_mbr_state_reason_mlacp_transport_unavailable = 46

    bm_mbr_state_reason_mlacp_not_configured = 47

    bm_mbr_state_reason_recovery_timer = 48

    bm_mbr_state_reason_mlacp_standby = 49

    bm_mbr_state_reason_maximized_out = 50

    bm_mbr_state_reason_mlacp_peer_selected = 51

    bm_mbr_state_reason_mlacp_connect_timer_running = 52

    bm_mbr_state_reason_bundle_not_mlacp = 53

    bm_mbr_state_reason_no_lon = 54

    bm_mbr_state_reason_cumul_rel_bw_limit = 55

    bm_mbr_state_reason_no_mac = 56

    bm_mbr_state_reason_no_system_id = 57

    bm_mbr_state_reason_link_shutdown = 58

    bm_mbr_state_reason_activity_mlacp = 59

    bm_mbr_state_reason_activity_iccp = 60

    bm_mbr_state_reason_bundle_icpe_mlacp = 61

    bm_mbr_state_reason_no_link_num = 62

    bm_mbr_state_reason_standby_peer_higher_prio = 63

    bm_mbr_state_reason_red_state_standby = 64

    bm_mbr_state_reason_other_red_state_standby = 65

    bm_mbr_state_reason_hold_ing = 66

    bm_mbr_state_reason_bundle_error_disabled = 67

    bm_mbr_state_reason_bundle_efd_disabled = 68

    bm_mbr_state_reason_singleton_pe_isolated = 69

    bm_mbr_state_reason_bfd_ipv6_starting = 70

    bm_mbr_state_reason_bfd_ipv6_down = 71

    bm_mbr_state_reason_bfd_ipv6_nbr_unconfig = 72

    bm_mbr_state_reason_timer_running = 73

    bm_mbr_state_reason_client_bundle_ctrl = 74

    bm_mbr_state_reason_count = 75


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmMbrStateReasonEnum']


class BmMuxreasonEnum(Enum):
    """
    BmMuxreasonEnum

    Bm muxreason

    .. data:: bm_mux_reason_no_reason = 0

    	Selection logic has not yet been run for the

    	bundle this link is a member of

    .. data:: bm_mux_reason_link_down = 1

    	Link is down

    .. data:: bm_mux_reason_link_deleted = 2

    	Link is being removed from the bundle

    .. data:: bm_mux_reason_duplex = 3

    	Link has wrong duplexity

    .. data:: bm_mux_reason_bandwidth = 4

    	Link has wrong bandwidth

    .. data:: bm_mux_reason_loop_back = 5

    	Link is a loopback interface

    .. data:: bm_mux_reason_activity_type = 6

    	Link has wrong activity type

    .. data:: bm_mux_reason_link_limit = 7

    	Link's bundle already has maximum number of

    	members allowed

    .. data:: bm_mux_reason_shared = 8

    	Link is attached to a shared medium

    .. data:: bm_mux_reason_lagid = 9

    	Link has wrong LAG ID

    .. data:: bm_mux_reason_no_bundle = 10

    	Link's bundle does not exist

    .. data:: bm_mux_reason_no_primary = 11

    	Link's bundle has no primary link

    .. data:: bm_mux_reason_bundle_down = 12

    	Link's bundle is shut down

    .. data:: bm_mux_reason_individual = 13

    	Link is marked individual by partner

    .. data:: bm_mux_reason_defaulted = 14

    	Link is Defaulted, suggesting it is not

    	receiving LACPDUs from the peer

    .. data:: bm_mux_reason_in_sync = 15

    	Link is in InSync state

    .. data:: bm_mux_reason_collecting = 16

    	Link is in Collecting state

    .. data:: bm_mux_reason_active_link_limit = 17

    	Link exceeds maximum active limit

    .. data:: bm_mux_reason_distributing = 18

    	Link is in Distributing state

    .. data:: bm_mux_reason_count = 19

    	Enumeration maximum value

    """

    bm_mux_reason_no_reason = 0

    bm_mux_reason_link_down = 1

    bm_mux_reason_link_deleted = 2

    bm_mux_reason_duplex = 3

    bm_mux_reason_bandwidth = 4

    bm_mux_reason_loop_back = 5

    bm_mux_reason_activity_type = 6

    bm_mux_reason_link_limit = 7

    bm_mux_reason_shared = 8

    bm_mux_reason_lagid = 9

    bm_mux_reason_no_bundle = 10

    bm_mux_reason_no_primary = 11

    bm_mux_reason_bundle_down = 12

    bm_mux_reason_individual = 13

    bm_mux_reason_defaulted = 14

    bm_mux_reason_in_sync = 15

    bm_mux_reason_collecting = 16

    bm_mux_reason_active_link_limit = 17

    bm_mux_reason_distributing = 18

    bm_mux_reason_count = 19


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmMuxreasonEnum']


class BmMuxstateEnum(Enum):
    """
    BmMuxstateEnum

    Bm muxstate

    .. data:: detached = 1

    	Port is not attached to a bundle

    .. data:: waiting = 2

    	Port has chosen bundle and is waiting to join

    .. data:: attached = 3

    	Port is attached to the bundle but not active

    .. data:: collecting = 4

    	Port is ready to receive data

    .. data:: distributing = 5

    	Port is distributing data

    .. data:: collecting_distributing = 6

    	Port is active and can send and receive data

    """

    detached = 1

    waiting = 2

    attached = 3

    collecting = 4

    distributing = 5

    collecting_distributing = 6


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmMuxstateEnum']


class BmSeverityEnum(Enum):
    """
    BmSeverityEnum

    Severity of the member state reason

    .. data:: ok = 0

    	OK

    .. data:: information = 1

    	Information

    .. data:: misconfiguration = 2

    	Misconfiguration

    .. data:: warning = 3

    	Warning

    .. data:: error = 5

    	Error

    """

    ok = 0

    information = 1

    misconfiguration = 2

    warning = 3

    error = 5


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmSeverityEnum']


class BmStateReasonTargetEnum(Enum):
    """
    BmStateReasonTargetEnum

    Scope of the state reason

    .. data:: member_reason = 0

    	Member applicable reason

    .. data:: bundle_reason = 1

    	Bundle applicable reason

    """

    member_reason = 0

    bundle_reason = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmStateReasonTargetEnum']


class BmWhichSystemEnum(Enum):
    """
    BmWhichSystemEnum

    Bm which system

    .. data:: bm_which_system_actr = 0

    	Actor

    .. data:: bm_which_system_ptnr = 1

    	Partner

    """

    bm_which_system_actr = 0

    bm_which_system_ptnr = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmWhichSystemEnum']


class BmdBagEventBdlItemEnum(Enum):
    """
    BmdBagEventBdlItemEnum

    Description of an event for a bundle

    .. data:: bmd_event_bdl_idb_create = 0

    	Bundle structure created

    .. data:: bmd_event_bdl_configured = 1

    	Bundle configured by user

    .. data:: bmd_event_bdl_im_state = 2

    	Bundle's IM state changed

    .. data:: bmd_event_bdl_mbr_added = 3

    	Member added to the bundle

    .. data:: bmd_event_bdl_mbr_deleted = 4

    	Member removed from the bundle

    .. data:: bmd_event_bdl_mac_addr = 5

    	Bundle's MAC address changed

    .. data:: bmd_event_bdl_first_retry = 6

    	First retry

    .. data:: bmd_event_bdl_user_config = 7

    	User changed the configuration

    .. data:: bmd_event_bdl_error = 8

    	Last error

    .. data:: bmd_event_bdl_mlacp_tlv = 9

    	mLACP TLV received

    .. data:: bmd_event_bdl_redundancy_role = 10

    	redundancy role change

    .. data:: bdl_bfd_state_change = 11

    	BFD state change

    .. data:: bmd_event_bdl_icl = 12

    	Inter-chassis link mode changed

    .. data:: bmd_event_bdl_count = 13

    	Number of bundle events

    """

    bmd_event_bdl_idb_create = 0

    bmd_event_bdl_configured = 1

    bmd_event_bdl_im_state = 2

    bmd_event_bdl_mbr_added = 3

    bmd_event_bdl_mbr_deleted = 4

    bmd_event_bdl_mac_addr = 5

    bmd_event_bdl_first_retry = 6

    bmd_event_bdl_user_config = 7

    bmd_event_bdl_error = 8

    bmd_event_bdl_mlacp_tlv = 9

    bmd_event_bdl_redundancy_role = 10

    bdl_bfd_state_change = 11

    bmd_event_bdl_icl = 12

    bmd_event_bdl_count = 13


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdBagEventBdlItemEnum']


class BmdBagEventDataEnum(Enum):
    """
    BmdBagEventDataEnum

    Type of additional info for an event

    .. data:: bmd_bag_evt_data_none = 0

    	No additional data

    .. data:: bmd_bag_evt_data_error = 1

    	Additional data is an error code

    .. data:: bmd_bag_evt_data_string = 2

    	Additional data is a string

    """

    bmd_bag_evt_data_none = 0

    bmd_bag_evt_data_error = 1

    bmd_bag_evt_data_string = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdBagEventDataEnum']


class BmdBagEventMbrItemEnum(Enum):
    """
    BmdBagEventMbrItemEnum

    Description of an event for a member

    .. data:: bmd_event_mbr_idb_create = 0

    	Member structure created

    .. data:: bmd_event_mbr_bdl_add = 1

    	Added to bundle

    .. data:: bmd_event_mbr_im_state = 2

    	Member's IM state changed

    .. data:: bmd_event_mbr_sel_logic = 3

    	Sel logic state changed

    .. data:: bmd_event_mbr_mux = 4

    	Mux state changed

    .. data:: bmd_event_mbr_bfd = 5

    	BFD state changed

    .. data:: bmd_event_mbr_expired = 6

    	Expired

    .. data:: bmd_event_mbr_defaulted = 7

    	Defaulted

    .. data:: bmd_event_mbr_first_retry = 8

    	First retry

    .. data:: bmd_event_mbr_msg = 9

    	Message from BML

    .. data:: bmd_event_mbr_error = 10

    	Last error

    .. data:: bmd_event_mbr_mlacp_tlv = 11

    	mLACP TLV received

    .. data:: bmd_event_mbr_redundancy_role = 12

    	redundancy role change

    .. data:: bmd_event_mbr_count = 13

    	Number of member events

    """

    bmd_event_mbr_idb_create = 0

    bmd_event_mbr_bdl_add = 1

    bmd_event_mbr_im_state = 2

    bmd_event_mbr_sel_logic = 3

    bmd_event_mbr_mux = 4

    bmd_event_mbr_bfd = 5

    bmd_event_mbr_expired = 6

    bmd_event_mbr_defaulted = 7

    bmd_event_mbr_first_retry = 8

    bmd_event_mbr_msg = 9

    bmd_event_mbr_error = 10

    bmd_event_mbr_mlacp_tlv = 11

    bmd_event_mbr_redundancy_role = 12

    bmd_event_mbr_count = 13


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdBagEventMbrItemEnum']


class BmdBagEventRgItemEnum(Enum):
    """
    BmdBagEventRgItemEnum

    Description of an event for a RG

    .. data:: bmd_event_rg_idb_create = 0

    	RG structure created

    .. data:: bmd_event_rg_configured = 1

    	RG configured by user

    .. data:: bmd_event_rg_user_config = 2

    	User changed the configuration

    .. data:: bmd_event_rg_connect_ion = 3

    	Connection to peer

    .. data:: bmd_event_rg_data = 4

    	Data received

    .. data:: bmd_event_rg_sync = 5

    	Sync performed

    .. data:: bmd_event_rg_first_retry = 6

    	First retry

    .. data:: bmd_event_rg_error = 7

    	Last error

    .. data:: bmd_event_rg_mlacp_tlv = 8

    	mLACP TLV received

    .. data:: bmd_event_rg_iccp_event = 9

    	ICCP event received

    .. data:: bmd_event_rg_count = 10

    	Number of RG events

    """

    bmd_event_rg_idb_create = 0

    bmd_event_rg_configured = 1

    bmd_event_rg_user_config = 2

    bmd_event_rg_connect_ion = 3

    bmd_event_rg_data = 4

    bmd_event_rg_sync = 5

    bmd_event_rg_first_retry = 6

    bmd_event_rg_error = 7

    bmd_event_rg_mlacp_tlv = 8

    bmd_event_rg_iccp_event = 9

    bmd_event_rg_count = 10


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdBagEventRgItemEnum']


class BmdBagMlacpSchActionItemEnum(Enum):
    """
    BmdBagMlacpSchActionItemEnum

    Description of scheduled actions for a bundle

    .. data:: switchover = 0

    	mLACP Switchover scheduled

    .. data:: switchback = 1

    	mLACP Switchback scheduled

    """

    switchover = 0

    switchback = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdBagMlacpSchActionItemEnum']


class BmdBagTargetEnum(Enum):
    """
    BmdBagTargetEnum

    Scope of information

    .. data:: bm_bag_target_mbr = 0

    	Information for a member

    .. data:: bm_bag_target_bdl = 1

    	Information for a bundle

    .. data:: bm_bag_target_node = 2

    	Information for a node

    .. data:: bm_bag_target_rg = 3

    	Information for an RG

    """

    bm_bag_target_mbr = 0

    bm_bag_target_bdl = 1

    bm_bag_target_node = 2

    bm_bag_target_rg = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdBagTargetEnum']


class BmdBfdBdlStateEnum(Enum):
    """
    BmdBfdBdlStateEnum

    Bmd bfd bdl state

    .. data:: bmd_bfd_bdl_down = 0

    	BFD is down on the bundle

    .. data:: bmd_bfd_bdl_unknown = 1

    	BFD has just started on a bundle, and the state

    	has not been determined

    .. data:: bmd_bfd_bdl_up = 2

    	BFD is up on the bundle

    .. data:: bmd_bfd_bdl_count = 3

    	Number of BFD states on a bundle

    """

    bmd_bfd_bdl_down = 0

    bmd_bfd_bdl_unknown = 1

    bmd_bfd_bdl_up = 2

    bmd_bfd_bdl_count = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdBfdBdlStateEnum']


class BmdMemberStateEnum(Enum):
    """
    BmdMemberStateEnum

    Bmd member state

    .. data:: bmd_mbr_state_configured = 1

    	Member is configured

    .. data:: bmd_mbr_state_standby = 2

    	Member is standby

    .. data:: bmd_mbr_state_hot_standby = 3

    	Member is hot standby

    .. data:: bmd_mbr_state_negotiating = 4

    	Member is negotiating

    .. data:: bmd_mbr_state_bfd_running = 5

    	Member has a BFD session running

    .. data:: bmd_mbr_state_active = 6

    	Member is active

    """

    bmd_mbr_state_configured = 1

    bmd_mbr_state_standby = 2

    bmd_mbr_state_hot_standby = 3

    bmd_mbr_state_negotiating = 4

    bmd_mbr_state_bfd_running = 5

    bmd_mbr_state_active = 6


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdMemberStateEnum']


class BmdMemberTypeEnumEnum(Enum):
    """
    BmdMemberTypeEnumEnum

    Bmd member type enum

    .. data:: bmd_mbr_local = 0

    	Member has been configured on the local device

    .. data:: bmd_mbr_foreign = 1

    	Member has been configured on an mLACP peer

    	device

    .. data:: bmd_mbr_unknown = 2

    	Member's type is unknown

    """

    bmd_mbr_local = 0

    bmd_mbr_foreign = 1

    bmd_mbr_unknown = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdMemberTypeEnumEnum']


class BmdMlacpBdlStateEnumEnum(Enum):
    """
    BmdMlacpBdlStateEnumEnum

    State of an mLACP device

    .. data:: bdl_state_nak = 0

    	Bundle info NAK'd

    .. data:: bdl_state_unknown = 1

    	No bundle state TLV received

    .. data:: bdl_state_no_sync = 2

    	No bundle config TLV with sync bit set received

    .. data:: bdl_state_rec_delay = 3

    	Revertive delay timer running

    .. data:: bdl_state_up = 4

    	Bundle is up

    .. data:: bdl_state_down = 5

    	Bundle is down

    .. data:: bdl_state_admin_down = 6

    	Bundle is admin down

    .. data:: bdl_state_test = 7

    	Bundle state TLV reported test

    .. data:: bdl_state_error = 8

    	Bundle state TLV reported error

    """

    bdl_state_nak = 0

    bdl_state_unknown = 1

    bdl_state_no_sync = 2

    bdl_state_rec_delay = 3

    bdl_state_up = 4

    bdl_state_down = 5

    bdl_state_admin_down = 6

    bdl_state_test = 7

    bdl_state_error = 8


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdMlacpBdlStateEnumEnum']


class BmdMlacpMbrStateEnumEnum(Enum):
    """
    BmdMlacpMbrStateEnumEnum

    State of an mLACP device

    .. data:: mbr_state_nak = 0

    	Member info NAK'd

    .. data:: mbr_state_unknown = 1

    	No member state TLV received

    .. data:: mbr_state_up = 2

    	Member is up

    .. data:: mbr_state_down = 3

    	Member is down

    .. data:: mbr_state_admin_down = 4

    	Member is admin down

    .. data:: mbr_state_test = 5

    	Member state TLV reported test

    .. data:: mbr_state_error = 6

    	Member state TLV reported error

    """

    mbr_state_nak = 0

    mbr_state_unknown = 1

    mbr_state_up = 2

    mbr_state_down = 3

    mbr_state_admin_down = 4

    mbr_state_test = 5

    mbr_state_error = 6


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdMlacpMbrStateEnumEnum']


class BmdMlacpNodeStateEnumEnum(Enum):
    """
    BmdMlacpNodeStateEnumEnum

    State of an mLACP device

    .. data:: node_state_incomplete = 0

    	Missing some mLACP IG config

    .. data:: node_state_conn_rejected = 1

    	Connection rejected by peer

    .. data:: node_state_connect_sent = 2

    	Connect timer running

    .. data:: node_state_unconfigured = 3

    	Missing some ICCP IG config

    .. data:: node_state_unreachable = 4

    	ICCP declared peer node unreachable

    .. data:: node_state_iccp_down = 5

    	ICCP declared peer node down

    .. data:: node_state_nak = 6

    	System info NAK'd

    .. data:: node_state_unknown = 7

    	No system state TLV received

    .. data:: node_state_mlacp_down = 8

    	System state TLV reported down

    .. data:: node_state_admin_down = 9

    	System state TLV reported admin down

    .. data:: node_state_pe_isolated = 10

    	System is isolated from core network

    .. data:: node_state_error = 11

    	System state TLV reported error

    .. data:: node_state_test = 12

    	System state TLV reported test

    .. data:: node_state_up = 13

    	System is up

    """

    node_state_incomplete = 0

    node_state_conn_rejected = 1

    node_state_connect_sent = 2

    node_state_unconfigured = 3

    node_state_unreachable = 4

    node_state_iccp_down = 5

    node_state_nak = 6

    node_state_unknown = 7

    node_state_mlacp_down = 8

    node_state_admin_down = 9

    node_state_pe_isolated = 10

    node_state_error = 11

    node_state_test = 12

    node_state_up = 13


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdMlacpNodeStateEnumEnum']


class BmdMlacpNodeSyncEnumEnum(Enum):
    """
    BmdMlacpNodeSyncEnumEnum

    Synchronization states of an mLACP device

    .. data:: node_sync_req = 0

    	Sync requested of device

    .. data:: node_sync_done = 1

    	Sync performed by device

    .. data:: node_sync_start = 2

    	Sync in progress from device

    .. data:: node_sync_init = 3

    	Initial sync pending from device

    .. data:: node_sync_singleton = 4

    	Sync not required for singleton groups

    """

    node_sync_req = 0

    node_sync_done = 1

    node_sync_start = 2

    node_sync_init = 3

    node_sync_singleton = 4


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdMlacpNodeSyncEnumEnum']


class BmdMlacpSwitchoverEnum(Enum):
    """
    BmdMlacpSwitchoverEnum

    Bmd mlacp switchover

    .. data:: bmd_mlacp_switchover_nonrevertive = 0

    	Non-revertive switchover type

    .. data:: bmd_mlacp_switchover_brute_force = 1

    	Brute force switchover type

    .. data:: bmd_mlacp_switchover_revertive = 2

    	Revertive switchover type

    .. data:: bmd_mlacp_switchover_count = 3

    	Number of switchover types

    """

    bmd_mlacp_switchover_nonrevertive = 0

    bmd_mlacp_switchover_brute_force = 1

    bmd_mlacp_switchover_revertive = 2

    bmd_mlacp_switchover_count = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdMlacpSwitchoverEnum']


class BmdSwitchReasonEnum(Enum):
    """
    BmdSwitchReasonEnum

    Bmd switch reason

    .. data:: bm_switch_reason_none = 0

    	Switch is permitted

    .. data:: bm_switch_reason_noop = 1

    	Switch has no effect

    .. data:: bm_switch_reason_not_mlacp = 2

    	mLACP not configured

    .. data:: bm_switch_reason_revertive = 3

    	Brute-force or revertive switchover is in

    	effect

    .. data:: bm_switch_reason_bdl_down = 4

    	Would-be active bundle is not ready

    .. data:: bm_switch_reason_recovery = 5

    	Recovery delay in effect, applications may not

    	be fully synced

    .. data:: bm_switch_reason_preceding_error = 6

    	Preceding switch action not viable

    .. data:: bm_switch_reason_wrong_order = 7

    	Switch actions are scheduled incorrectly

    .. data:: bm_switch_reason_singleton = 8

    	The ICCP group is operating in singleton mode

    """

    bm_switch_reason_none = 0

    bm_switch_reason_noop = 1

    bm_switch_reason_not_mlacp = 2

    bm_switch_reason_revertive = 3

    bm_switch_reason_bdl_down = 4

    bm_switch_reason_recovery = 5

    bm_switch_reason_preceding_error = 6

    bm_switch_reason_wrong_order = 7

    bm_switch_reason_singleton = 8


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BmdSwitchReasonEnum']


class BundleMedia1Enum(Enum):
    """
    BundleMedia1Enum

    Bundle media1

    .. data:: ethernet = 0

    	Ethernet

    .. data:: pos = 1

    	POS

    """

    ethernet = 0

    pos = 1


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BundleMedia1Enum']


class BundleMediaEnum(Enum):
    """
    BundleMediaEnum

    Bundle media

    .. data:: bundle_media_ethernet = 0

    	bundle media ethernet

    .. data:: bundle_media_pos = 1

    	bundle media pos

    .. data:: bundle_media_count = 2

    	bundle media count

    """

    bundle_media_ethernet = 0

    bundle_media_pos = 1

    bundle_media_count = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BundleMediaEnum']


class BundleMlacpModeEnum(Enum):
    """
    BundleMlacpModeEnum

    Bundle mlacp mode

    .. data:: bundle_mlacp_mode_standby = 0

    	bundle mlacp mode standby

    .. data:: bundle_mlacp_mode_active = 1

    	bundle mlacp mode active

    .. data:: bundle_mlacp_mode_count = 2

    	bundle mlacp mode count

    """

    bundle_mlacp_mode_standby = 0

    bundle_mlacp_mode_active = 1

    bundle_mlacp_mode_count = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BundleMlacpModeEnum']


class LacpChurnstatesEnum(Enum):
    """
    LacpChurnstatesEnum

    Lacp churnstates

    .. data:: no_churn = 1

    	The port is synchronized correctly

    .. data:: churn = 2

    	The port is OutOfSync and the churn timer has

    	expired

    .. data:: churn_monitor = 3

    	The port is OutOfSync but the churn timer has

    	not expired

    """

    no_churn = 1

    churn = 2

    churn_monitor = 3


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['LacpChurnstatesEnum']


class LacpPeriodStateEnum(Enum):
    """
    LacpPeriodStateEnum

    Lacp period state

    .. data:: period_s_low = 0

    	Packets are being sent using a long period

    .. data:: period_fast = 1

    	Packets are being sent using a short period

    .. data:: period_none = 2

    	Packets are not being sent

    """

    period_s_low = 0

    period_fast = 1

    period_none = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['LacpPeriodStateEnum']


class LacpSelStateEnum(Enum):
    """
    LacpSelStateEnum

    Lacp sel state

    .. data:: unselected = 0

    	The link is Unselected

    .. data:: standby = 1

    	The link is Standby

    .. data:: selected = 2

    	The link is Selected

    """

    unselected = 0

    standby = 1

    selected = 2


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['LacpSelStateEnum']


class LoadBalanceEnum(Enum):
    """
    LoadBalanceEnum

    Load balance

    .. data:: default = 0

    	Default

    .. data:: auto = 1

    	Auto

    .. data:: value = 2

    	Value

    .. data:: source_ip = 3

    	Source IP

    .. data:: destination_ip = 4

    	Destination IP

    .. data:: unknown = 5

    	Unknown

    """

    default = 0

    auto = 1

    value = 2

    source_ip = 3

    destination_ip = 4

    unknown = 5


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['LoadBalanceEnum']


class RxstatesEnum(Enum):
    """
    RxstatesEnum

    Rxstates

    .. data:: current_rx = 1

    	current rx

    .. data:: expired = 2

    	expired

    .. data:: defaulted = 3

    	defaulted

    .. data:: initialize = 4

    	initialize

    .. data:: lacp_disabled = 5

    	lacp disabled

    .. data:: port_disabled = 6

    	port disabled

    """

    current_rx = 1

    expired = 2

    defaulted = 3

    initialize = 4

    lacp_disabled = 5

    port_disabled = 6


    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['RxstatesEnum']



class LacpBundles(object):
    """
    LACP bundle data
    
    .. attribute:: bundles
    
    	LACP bundle data
    	**type**\:   :py:class:`Bundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles>`
    
    

    """

    _prefix = 'bundlemgr-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.bundles = LacpBundles.Bundles()
        self.bundles.parent = self


    class Bundles(object):
        """
        LACP bundle data
        
        .. attribute:: bundle
        
        	LACP Bundle interface
        	**type**\: list of    :py:class:`Bundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.bundle = YList()
            self.bundle.parent = self
            self.bundle.name = 'bundle'


        class Bundle(object):
            """
            LACP Bundle interface
            
            .. attribute:: bundle_interface  <key>
            
            	LACP Bundle interface
            	**type**\:  str
            
            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
            
            .. attribute:: data
            
            	Data for each Bundle
            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Data>`
            
            .. attribute:: members
            
            	LACP Member interface
            	**type**\:   :py:class:`Members <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Members>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bundle_interface = None
                self.data = LacpBundles.Bundles.Bundle.Data()
                self.data.parent = self
                self.members = LacpBundles.Bundles.Bundle.Members()
                self.members.parent = self


            class Data(object):
                """
                Data for each Bundle
                
                .. attribute:: actor_bundle_data
                
                	Basic bundle information
                	**type**\:   :py:class:`ActorBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Data.ActorBundleData>`
                
                .. attribute:: actor_operational_key
                
                	Operational key of the interface
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: bundle_system_id
                
                	System ID for the bundle
                	**type**\:   :py:class:`BundleSystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Data.BundleSystemId>`
                
                .. attribute:: partner_operational_key
                
                	Operational key of the partner
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: partner_system_mac_address
                
                	MAC Address used to identify the partner system
                	**type**\:  str
                
                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                
                .. attribute:: partner_system_priority
                
                	Priority of the partner system
                	**type**\:  int
                
                	**range:** 0..65535
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.actor_bundle_data = LacpBundles.Bundles.Bundle.Data.ActorBundleData()
                    self.actor_bundle_data.parent = self
                    self.actor_operational_key = None
                    self.bundle_system_id = LacpBundles.Bundles.Bundle.Data.BundleSystemId()
                    self.bundle_system_id.parent = self
                    self.partner_operational_key = None
                    self.partner_system_mac_address = None
                    self.partner_system_priority = None


                class ActorBundleData(object):
                    """
                    Basic bundle information
                    
                    .. attribute:: active_foreign_member_count
                    
                    	The number of active foreign members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: active_member_count
                    
                    	The number of active local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: available_bandwidth
                    
                    	Bandwidth available to the bundle interface (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: bfd_config
                    
                    	Configuration values for BFD on bundle members
                    	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Data.ActorBundleData.BfdConfig>`
                    
                    .. attribute:: bundle_interface_name
                    
                    	Bundle interface name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: bundle_status
                    
                    	The state of the bundle
                    	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                    
                    .. attribute:: cisco_extensions
                    
                    	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                    	**type**\:  bool
                    
                    .. attribute:: collector_max_delay
                    
                    	Collector Max Delay
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: configured_bandwidth
                    
                    	Bandwidth configured on the bundle interface (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: configured_foreign_member_count
                    
                    	The number of configured local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: configured_member_count
                    
                    	The number of configured local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: effective_bandwidth
                    
                    	Effective bandwidth on the bundle interface (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: iccp_group_id
                    
                    	ICCP Group that the bundle is configured to
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: inter_chassis
                    
                    	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                    	**type**\:  bool
                    
                    .. attribute:: ipv4bfd_status
                    
                    	The status of the BFD (IPv4) feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: ipv6bfd_status
                    
                    	The status of the BFD (IPv6) feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: is_active
                    
                    	Indicates the active/standby redundancy state of the device for the bundle
                    	**type**\:  bool
                    
                    .. attribute:: lacp_nonrevertive
                    
                    	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                    	**type**\:  bool
                    
                    .. attribute:: lacp_status
                    
                    	The status of the LACP feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: link_order_status
                    
                    	The status of the link order signaling feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: load_balance_hash_type
                    
                    	The type of hash to use for load balancing
                    	**type**\:  str
                    
                    .. attribute:: load_balance_locality_threshold
                    
                    	The number of links required per rack for localized load balancing
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: mac_address
                    
                    	MAC address of this member
                    	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Data.ActorBundleData.MacAddress>`
                    
                    .. attribute:: mac_source
                    
                    	The source of the MAC Address
                    	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                    
                    .. attribute:: mac_source_member
                    
                    	The name of the member that supplied the MAC address
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: maximize_threshold_value_band_width
                    
                    	Attempt to maximize the bundle if bandwidth is below this value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: maximize_threshold_value_links
                    
                    	Attempt to maximize the bundle if links are below this value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: maximum_active_links
                    
                    	Maximum number of active links in the bundle
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: maximum_active_links_source
                    
                    	Source of maximum active links value
                    	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                    
                    .. attribute:: minimum_active_links
                    
                    	Minimum number of active links for bundle to go up
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: minimum_bandwidth
                    
                    	Minimum bundle bandwidth for bundle to go up (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: mlacp_mode
                    
                    	Indicates the mode of the device for the bundle
                    	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                    
                    .. attribute:: mlacp_status
                    
                    	The status of the mLACP feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: primary_member
                    
                    	Primary bundle member (no longer applicable)
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: recovery_delay
                    
                    	Number of seconds to wait before becoming active after recovering from a failure
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: singleton
                    
                    	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                    	**type**\:  bool
                    
                    .. attribute:: standby_member_count
                    
                    	The number of standby local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: suppression_timer
                    
                    	Timer for suppressing bundle state flaps
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: switchover_type
                    
                    	How a switchover of the bundle from this device will occur
                    	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                    
                    .. attribute:: wait_while_timer
                    
                    	The wait while time used for member ports
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.active_foreign_member_count = None
                        self.active_member_count = None
                        self.available_bandwidth = None
                        self.bfd_config = YList()
                        self.bfd_config.parent = self
                        self.bfd_config.name = 'bfd_config'
                        self.bundle_interface_name = None
                        self.bundle_status = None
                        self.cisco_extensions = None
                        self.collector_max_delay = None
                        self.configured_bandwidth = None
                        self.configured_foreign_member_count = None
                        self.configured_member_count = None
                        self.effective_bandwidth = None
                        self.iccp_group_id = None
                        self.inter_chassis = None
                        self.ipv4bfd_status = None
                        self.ipv6bfd_status = None
                        self.is_active = None
                        self.lacp_nonrevertive = None
                        self.lacp_status = None
                        self.link_order_status = None
                        self.load_balance_hash_type = None
                        self.load_balance_locality_threshold = None
                        self.mac_address = LacpBundles.Bundles.Bundle.Data.ActorBundleData.MacAddress()
                        self.mac_address.parent = self
                        self.mac_source = None
                        self.mac_source_member = None
                        self.maximize_threshold_value_band_width = None
                        self.maximize_threshold_value_links = None
                        self.maximum_active_links = None
                        self.maximum_active_links_source = None
                        self.minimum_active_links = None
                        self.minimum_bandwidth = None
                        self.mlacp_mode = None
                        self.mlacp_status = None
                        self.primary_member = None
                        self.recovery_delay = None
                        self.singleton = None
                        self.standby_member_count = None
                        self.suppression_timer = None
                        self.switchover_type = None
                        self.wait_while_timer = None


                    class MacAddress(object):
                        """
                        MAC address of this member
                        
                        .. attribute:: address
                        
                        	MAC address
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['LacpBundles.Bundles.Bundle.Data.ActorBundleData.MacAddress']['meta_info']


                    class BfdConfig(object):
                        """
                        Configuration values for BFD on bundle members
                        
                        .. attribute:: bundle_status
                        
                        	Status of BFD on the bundle
                        	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                        
                        .. attribute:: destination_address
                        
                        	Configured destination address for BFD session
                        	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Data.ActorBundleData.BfdConfig.DestinationAddress>`
                        
                        .. attribute:: fast_detect
                        
                        	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: mode_info
                        
                        	Standard used for per\-member BFD
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: nbr_unconfig_timer
                        
                        	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pref_echo_min_interval
                        
                        	Preferred echo minimum interval for the BFD session (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pref_min_interval
                        
                        	Preferred minimum interval for the BFD session (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pref_multiplier
                        
                        	Preferred multiplier for the BFD session
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: start_timer
                        
                        	Time to wait on session start before declaring DOWN
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_status = None
                            self.destination_address = LacpBundles.Bundles.Bundle.Data.ActorBundleData.BfdConfig.DestinationAddress()
                            self.destination_address.parent = self
                            self.fast_detect = None
                            self.mode_info = None
                            self.nbr_unconfig_timer = None
                            self.pref_echo_min_interval = None
                            self.pref_min_interval = None
                            self.pref_multiplier = None
                            self.start_timer = None


                        class DestinationAddress(object):
                            """
                            Configured destination address for BFD session
                            
                            .. attribute:: af
                            
                            	AF
                            	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                            
                            .. attribute:: ipv4
                            
                            	IPv4 address type
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6
                            
                            	IPv6 address type
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af = None
                                self.ipv4 = None
                                self.ipv6 = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.af is not None:
                                    return True

                                if self.ipv4 is not None:
                                    return True

                                if self.ipv6 is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['LacpBundles.Bundles.Bundle.Data.ActorBundleData.BfdConfig.DestinationAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_status is not None:
                                return True

                            if self.destination_address is not None and self.destination_address._has_data():
                                return True

                            if self.fast_detect is not None:
                                return True

                            if self.mode_info is not None:
                                return True

                            if self.nbr_unconfig_timer is not None:
                                return True

                            if self.pref_echo_min_interval is not None:
                                return True

                            if self.pref_min_interval is not None:
                                return True

                            if self.pref_multiplier is not None:
                                return True

                            if self.start_timer is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['LacpBundles.Bundles.Bundle.Data.ActorBundleData.BfdConfig']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-bundle-data'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.active_foreign_member_count is not None:
                            return True

                        if self.active_member_count is not None:
                            return True

                        if self.available_bandwidth is not None:
                            return True

                        if self.bfd_config is not None:
                            for child_ref in self.bfd_config:
                                if child_ref._has_data():
                                    return True

                        if self.bundle_interface_name is not None:
                            return True

                        if self.bundle_status is not None:
                            return True

                        if self.cisco_extensions is not None:
                            return True

                        if self.collector_max_delay is not None:
                            return True

                        if self.configured_bandwidth is not None:
                            return True

                        if self.configured_foreign_member_count is not None:
                            return True

                        if self.configured_member_count is not None:
                            return True

                        if self.effective_bandwidth is not None:
                            return True

                        if self.iccp_group_id is not None:
                            return True

                        if self.inter_chassis is not None:
                            return True

                        if self.ipv4bfd_status is not None:
                            return True

                        if self.ipv6bfd_status is not None:
                            return True

                        if self.is_active is not None:
                            return True

                        if self.lacp_nonrevertive is not None:
                            return True

                        if self.lacp_status is not None:
                            return True

                        if self.link_order_status is not None:
                            return True

                        if self.load_balance_hash_type is not None:
                            return True

                        if self.load_balance_locality_threshold is not None:
                            return True

                        if self.mac_address is not None and self.mac_address._has_data():
                            return True

                        if self.mac_source is not None:
                            return True

                        if self.mac_source_member is not None:
                            return True

                        if self.maximize_threshold_value_band_width is not None:
                            return True

                        if self.maximize_threshold_value_links is not None:
                            return True

                        if self.maximum_active_links is not None:
                            return True

                        if self.maximum_active_links_source is not None:
                            return True

                        if self.minimum_active_links is not None:
                            return True

                        if self.minimum_bandwidth is not None:
                            return True

                        if self.mlacp_mode is not None:
                            return True

                        if self.mlacp_status is not None:
                            return True

                        if self.primary_member is not None:
                            return True

                        if self.recovery_delay is not None:
                            return True

                        if self.singleton is not None:
                            return True

                        if self.standby_member_count is not None:
                            return True

                        if self.suppression_timer is not None:
                            return True

                        if self.switchover_type is not None:
                            return True

                        if self.wait_while_timer is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['LacpBundles.Bundles.Bundle.Data.ActorBundleData']['meta_info']


                class BundleSystemId(object):
                    """
                    System ID for the bundle
                    
                    .. attribute:: system_mac_addr
                    
                    	MAC Address used to identify the system
                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Data.BundleSystemId.SystemMacAddr>`
                    
                    .. attribute:: system_prio
                    
                    	Priority of the system
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.system_mac_addr = LacpBundles.Bundles.Bundle.Data.BundleSystemId.SystemMacAddr()
                        self.system_mac_addr.parent = self
                        self.system_prio = None


                    class SystemMacAddr(object):
                        """
                        MAC Address used to identify the system
                        
                        .. attribute:: macaddr
                        
                        	macaddr
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.macaddr = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.macaddr is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['LacpBundles.Bundles.Bundle.Data.BundleSystemId.SystemMacAddr']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-system-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                            return True

                        if self.system_prio is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['LacpBundles.Bundles.Bundle.Data.BundleSystemId']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.actor_bundle_data is not None and self.actor_bundle_data._has_data():
                        return True

                    if self.actor_operational_key is not None:
                        return True

                    if self.bundle_system_id is not None and self.bundle_system_id._has_data():
                        return True

                    if self.partner_operational_key is not None:
                        return True

                    if self.partner_system_mac_address is not None:
                        return True

                    if self.partner_system_priority is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['LacpBundles.Bundles.Bundle.Data']['meta_info']


            class Members(object):
                """
                LACP Member interface
                
                .. attribute:: member
                
                	Member information
                	**type**\: list of    :py:class:`Member <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Members.Member>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member = YList()
                    self.member.parent = self
                    self.member.name = 'member'


                class Member(object):
                    """
                    Member information
                    
                    .. attribute:: member_interface  <key>
                    
                    	Member interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: bandwidth
                    
                    	Bandwidth of this member (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: counters
                    
                    	Counters data about member link
                    	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Members.Member.Counters>`
                    
                    .. attribute:: iccp_node
                    
                    	Location of member
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Member's interface name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: link_data
                    
                    	Lacp data about member link
                    	**type**\:   :py:class:`LinkData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Members.Member.LinkData>`
                    
                    .. attribute:: link_order_number
                    
                    	Member's link order number
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: mac_address
                    
                    	MAC address of this member (deprecated)
                    	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Members.Member.MacAddress>`
                    
                    .. attribute:: member_mux_data
                    
                    	Mux state machine data
                    	**type**\:   :py:class:`MemberMuxData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Members.Member.MemberMuxData>`
                    
                    .. attribute:: member_name
                    
                    	Member's (short form) name
                    	**type**\:  str
                    
                    .. attribute:: member_type
                    
                    	Member's type (local/foreign)
                    	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                    
                    .. attribute:: port_number
                    
                    	Member's link number
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: port_priority
                    
                    	The priority of this member
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: underlying_link_id
                    
                    	Member's underlying link ID
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.member_interface = None
                        self.bandwidth = None
                        self.counters = LacpBundles.Bundles.Bundle.Members.Member.Counters()
                        self.counters.parent = self
                        self.iccp_node = None
                        self.interface_name = None
                        self.link_data = LacpBundles.Bundles.Bundle.Members.Member.LinkData()
                        self.link_data.parent = self
                        self.link_order_number = None
                        self.mac_address = LacpBundles.Bundles.Bundle.Members.Member.MacAddress()
                        self.mac_address.parent = self
                        self.member_mux_data = LacpBundles.Bundles.Bundle.Members.Member.MemberMuxData()
                        self.member_mux_data.parent = self
                        self.member_name = None
                        self.member_type = None
                        self.port_number = None
                        self.port_priority = None
                        self.underlying_link_id = None


                    class Counters(object):
                        """
                        Counters data about member link
                        
                        .. attribute:: defaulted
                        
                        	State flag set to Defaulted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: excess_lacpd_us_received
                        
                        	LACPDUs received that exceed the rate limit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: excess_marker_packets_received
                        
                        	Marker packets received that exceed the rate limit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: expired
                        
                        	State flag set to Expired
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: illegal_packets_received
                        
                        	Illegal and unknown packets received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lacpd_us_received
                        
                        	LACPDUs received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lacpd_us_transmitted
                        
                        	LACPDUs transmitted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_cleared_nsec
                        
                        	Last time counters cleared (nsec) (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_cleared_sec
                        
                        	Last time counters cleared (s) (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: marker_packets_received
                        
                        	Marker packets received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: marker_responses_transmitted
                        
                        	Marker response packets transmitted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.defaulted = None
                            self.excess_lacpd_us_received = None
                            self.excess_marker_packets_received = None
                            self.expired = None
                            self.illegal_packets_received = None
                            self.lacpd_us_received = None
                            self.lacpd_us_transmitted = None
                            self.last_cleared_nsec = None
                            self.last_cleared_sec = None
                            self.marker_packets_received = None
                            self.marker_responses_transmitted = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.defaulted is not None:
                                return True

                            if self.excess_lacpd_us_received is not None:
                                return True

                            if self.excess_marker_packets_received is not None:
                                return True

                            if self.expired is not None:
                                return True

                            if self.illegal_packets_received is not None:
                                return True

                            if self.lacpd_us_received is not None:
                                return True

                            if self.lacpd_us_transmitted is not None:
                                return True

                            if self.last_cleared_nsec is not None:
                                return True

                            if self.last_cleared_sec is not None:
                                return True

                            if self.marker_packets_received is not None:
                                return True

                            if self.marker_responses_transmitted is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['LacpBundles.Bundles.Bundle.Members.Member.Counters']['meta_info']


                    class LinkData(object):
                        """
                        Lacp data about member link
                        
                        .. attribute:: actor_operational_key
                        
                        	Operational key for this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_id
                        
                        	Port number of this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_priority
                        
                        	Priority of this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_state
                        
                        	LACP state of this port
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: actor_system_mac_address
                        
                        	MAC Address of the actor system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: actor_system_priority
                        
                        	System priority of actor system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: attached_aggregator_id
                        
                        	MIB ifindex of attached bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_handle
                        
                        	Member's interface handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: partner_operational_key
                        
                        	Operational key for partner port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_id
                        
                        	Port number of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_priority
                        
                        	Priority of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_state
                        
                        	LACP state of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: partner_system_mac_address
                        
                        	MAC Address used to identify the partner system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: partner_system_priority
                        
                        	System priority of partner system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: selected_aggregator_id
                        
                        	MIB ifindex of selected bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.actor_operational_key = None
                            self.actor_port_id = None
                            self.actor_port_priority = None
                            self.actor_port_state = None
                            self.actor_system_mac_address = None
                            self.actor_system_priority = None
                            self.attached_aggregator_id = None
                            self.interface_handle = None
                            self.partner_operational_key = None
                            self.partner_port_id = None
                            self.partner_port_priority = None
                            self.partner_port_state = None
                            self.partner_system_mac_address = None
                            self.partner_system_priority = None
                            self.selected_aggregator_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:link-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.actor_operational_key is not None:
                                return True

                            if self.actor_port_id is not None:
                                return True

                            if self.actor_port_priority is not None:
                                return True

                            if self.actor_port_state is not None:
                                return True

                            if self.actor_system_mac_address is not None:
                                return True

                            if self.actor_system_priority is not None:
                                return True

                            if self.attached_aggregator_id is not None:
                                return True

                            if self.interface_handle is not None:
                                return True

                            if self.partner_operational_key is not None:
                                return True

                            if self.partner_port_id is not None:
                                return True

                            if self.partner_port_priority is not None:
                                return True

                            if self.partner_port_state is not None:
                                return True

                            if self.partner_system_mac_address is not None:
                                return True

                            if self.partner_system_priority is not None:
                                return True

                            if self.selected_aggregator_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['LacpBundles.Bundles.Bundle.Members.Member.LinkData']['meta_info']


                    class MemberMuxData(object):
                        """
                        Mux state machine data
                        
                        .. attribute:: error
                        
                        	Internal value indicating if an error occurred trying to put a link into the desired state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: member_mux_state_reason
                        
                        	Reason for last Mux state change
                        	**type**\:   :py:class:`BmMbrStateReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMbrStateReasonEnum>`
                        
                        .. attribute:: member_mux_state_reason_data
                        
                        	Data regarding the reason for last Mux state change
                        	**type**\:   :py:class:`MemberMuxStateReasonData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundles.Bundles.Bundle.Members.Member.MemberMuxData.MemberMuxStateReasonData>`
                        
                        .. attribute:: member_state
                        
                        	Current internal state of this bundle member
                        	**type**\:   :py:class:`BmdMemberStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberStateEnum>`
                        
                        .. attribute:: mux_state
                        
                        	Current state of this bundle member
                        	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                        
                        .. attribute:: mux_state_reason
                        
                        	Reason for last Mux state change (Deprecated)
                        	**type**\:   :py:class:`BmMuxreasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxreasonEnum>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.error = None
                            self.member_mux_state_reason = None
                            self.member_mux_state_reason_data = LacpBundles.Bundles.Bundle.Members.Member.MemberMuxData.MemberMuxStateReasonData()
                            self.member_mux_state_reason_data.parent = self
                            self.member_state = None
                            self.mux_state = None
                            self.mux_state_reason = None


                        class MemberMuxStateReasonData(object):
                            """
                            Data regarding the reason for last Mux state
                            change
                            
                            .. attribute:: reason_type
                            
                            	The item the reason applies to
                            	**type**\:   :py:class:`BmStateReasonTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmStateReasonTargetEnum>`
                            
                            .. attribute:: severity
                            
                            	The severity of the reason
                            	**type**\:   :py:class:`BmSeverityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmSeverityEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.reason_type = None
                                self.severity = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-state-reason-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.reason_type is not None:
                                    return True

                                if self.severity is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['LacpBundles.Bundles.Bundle.Members.Member.MemberMuxData.MemberMuxStateReasonData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.error is not None:
                                return True

                            if self.member_mux_state_reason is not None:
                                return True

                            if self.member_mux_state_reason_data is not None and self.member_mux_state_reason_data._has_data():
                                return True

                            if self.member_state is not None:
                                return True

                            if self.mux_state is not None:
                                return True

                            if self.mux_state_reason is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['LacpBundles.Bundles.Bundle.Members.Member.MemberMuxData']['meta_info']


                    class MacAddress(object):
                        """
                        MAC address of this member (deprecated)
                        
                        .. attribute:: address
                        
                        	MAC address
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['LacpBundles.Bundles.Bundle.Members.Member.MacAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.member_interface is None:
                            raise YPYModelError('Key property member_interface is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.member_interface is not None:
                            return True

                        if self.bandwidth is not None:
                            return True

                        if self.counters is not None and self.counters._has_data():
                            return True

                        if self.iccp_node is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.link_data is not None and self.link_data._has_data():
                            return True

                        if self.link_order_number is not None:
                            return True

                        if self.mac_address is not None and self.mac_address._has_data():
                            return True

                        if self.member_mux_data is not None and self.member_mux_data._has_data():
                            return True

                        if self.member_name is not None:
                            return True

                        if self.member_type is not None:
                            return True

                        if self.port_number is not None:
                            return True

                        if self.port_priority is not None:
                            return True

                        if self.underlying_link_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['LacpBundles.Bundles.Bundle.Members.Member']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:members'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member is not None:
                        for child_ref in self.member:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['LacpBundles.Bundles.Bundle.Members']['meta_info']

            @property
            def _common_path(self):
                if self.bundle_interface is None:
                    raise YPYModelError('Key property bundle_interface is None')

                return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundles/Cisco-IOS-XR-bundlemgr-oper:bundles/Cisco-IOS-XR-bundlemgr-oper:bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bundle_interface is not None:
                    return True

                if self.data is not None and self.data._has_data():
                    return True

                if self.members is not None and self.members._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['LacpBundles.Bundles.Bundle']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundles/Cisco-IOS-XR-bundlemgr-oper:bundles'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.bundle is not None:
                for child_ref in self.bundle:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['LacpBundles.Bundles']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundles'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.bundles is not None and self.bundles._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['LacpBundles']['meta_info']


class BundleInformation(object):
    """
    bundle information
    
    .. attribute:: bfd_counters
    
    	BFD counters information for bundles and members
    	**type**\:   :py:class:`BfdCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters>`
    
    .. attribute:: bundle
    
    	Generic information for bundles and members
    	**type**\:   :py:class:`Bundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle>`
    
    .. attribute:: bundle_briefs
    
    	Bundle interfaces with common bundle information
    	**type**\:   :py:class:`BundleBriefs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BundleBriefs>`
    
    .. attribute:: events
    
    	Events information for bundles and members
    	**type**\:   :py:class:`Events <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events>`
    
    .. attribute:: events_bdl
    
    	Bundle events information for bundles and members
    	**type**\:   :py:class:`EventsBdl <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl>`
    
    .. attribute:: events_mbr
    
    	Bundle member events information for bundles and members
    	**type**\:   :py:class:`EventsMbr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr>`
    
    .. attribute:: events_rg
    
    	Bundle ICCP events information for bundles and members
    	**type**\:   :py:class:`EventsRg <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg>`
    
    .. attribute:: lacp
    
    	LACP information for bundles and members
    	**type**\:   :py:class:`Lacp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp>`
    
    .. attribute:: mac_allocation
    
    	Information about allocated MAC addresses that are not in use
    	**type**\:   :py:class:`MacAllocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MacAllocation>`
    
    .. attribute:: mlacp
    
    	mLACP Information for Interchassis Groups and bundles
    	**type**\:   :py:class:`Mlacp <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp>`
    
    .. attribute:: mlacp_brief
    
    	mLACP Information for Interchassis Groups and bundles
    	**type**\:   :py:class:`MlacpBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief>`
    
    .. attribute:: mlacp_bundle_counters
    
    	Bundle specific counters of mLACP events
    	**type**\:   :py:class:`MlacpBundleCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters>`
    
    .. attribute:: mlacp_iccp_group_counters
    
    	ICCP Group specific counters of mLACP events
    	**type**\:   :py:class:`MlacpIccpGroupCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters>`
    
    .. attribute:: mlacp_member_counters
    
    	Member specific counters of mLACP events
    	**type**\:   :py:class:`MlacpMemberCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters>`
    
    .. attribute:: protect
    
    	Information for bundles and members that are in the protect database
    	**type**\:   :py:class:`Protect <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Protect>`
    
    .. attribute:: scheduled_actions
    
    	Scheduled actions on a bundle
    	**type**\:   :py:class:`ScheduledActions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.ScheduledActions>`
    
    .. attribute:: system_id
    
    	System Identifiers for the local system and all ICCP Groups
    	**type**\:   :py:class:`SystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId>`
    
    

    """

    _prefix = 'bundlemgr-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.bfd_counters = BundleInformation.BfdCounters()
        self.bfd_counters.parent = self
        self.bundle = BundleInformation.Bundle()
        self.bundle.parent = self
        self.bundle_briefs = BundleInformation.BundleBriefs()
        self.bundle_briefs.parent = self
        self.events = BundleInformation.Events()
        self.events.parent = self
        self.events_bdl = BundleInformation.EventsBdl()
        self.events_bdl.parent = self
        self.events_mbr = BundleInformation.EventsMbr()
        self.events_mbr.parent = self
        self.events_rg = BundleInformation.EventsRg()
        self.events_rg.parent = self
        self.lacp = BundleInformation.Lacp()
        self.lacp.parent = self
        self.mac_allocation = BundleInformation.MacAllocation()
        self.mac_allocation.parent = self
        self.mlacp = BundleInformation.Mlacp()
        self.mlacp.parent = self
        self.mlacp_brief = BundleInformation.MlacpBrief()
        self.mlacp_brief.parent = self
        self.mlacp_bundle_counters = BundleInformation.MlacpBundleCounters()
        self.mlacp_bundle_counters.parent = self
        self.mlacp_iccp_group_counters = BundleInformation.MlacpIccpGroupCounters()
        self.mlacp_iccp_group_counters.parent = self
        self.mlacp_member_counters = BundleInformation.MlacpMemberCounters()
        self.mlacp_member_counters.parent = self
        self.protect = BundleInformation.Protect()
        self.protect.parent = self
        self.scheduled_actions = BundleInformation.ScheduledActions()
        self.scheduled_actions.parent = self
        self.system_id = BundleInformation.SystemId()
        self.system_id.parent = self


    class BfdCounters(object):
        """
        BFD counters information for bundles and members
        
        .. attribute:: bfd_counters_bundles
        
        	Bundle interfaces with BFD counters information
        	**type**\:   :py:class:`BfdCountersBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles>`
        
        .. attribute:: bfd_counters_members
        
        	Member interfaces with BFD counters information
        	**type**\:   :py:class:`BfdCountersMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersMembers>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.bfd_counters_bundles = BundleInformation.BfdCounters.BfdCountersBundles()
            self.bfd_counters_bundles.parent = self
            self.bfd_counters_members = BundleInformation.BfdCounters.BfdCountersMembers()
            self.bfd_counters_members.parent = self


        class BfdCountersBundles(object):
            """
            Bundle interfaces with BFD counters information
            
            .. attribute:: bfd_counters_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`BfdCountersBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bfd_counters_bundle = YList()
                self.bfd_counters_bundle.parent = self
                self.bfd_counters_bundle.name = 'bfd_counters_bundle'


            class BfdCountersBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: bfd_counters_bundle_children_members
                
                	Children of bundle with BFD counters information
                	**type**\:   :py:class:`BfdCountersBundleChildrenMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleChildrenMembers>`
                
                .. attribute:: bfd_counters_bundle_descendant
                
                	Data for this item and all its members
                	**type**\:   :py:class:`BfdCountersBundleDescendant <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant>`
                
                .. attribute:: bfd_counters_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`BfdCountersBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.bfd_counters_bundle_children_members = BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleChildrenMembers()
                    self.bfd_counters_bundle_children_members.parent = self
                    self.bfd_counters_bundle_descendant = BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant()
                    self.bfd_counters_bundle_descendant.parent = self
                    self.bfd_counters_bundle_item = BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleItem()
                    self.bfd_counters_bundle_item.parent = self


                class BfdCountersBundleDescendant(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: bfd_counter
                    
                    	BFD event counters
                    	**type**\: list of    :py:class:`BfdCounter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant.BfdCounter>`
                    
                    .. attribute:: bundle_name
                    
                    	Name of the bundle this information is for
                    	**type**\:   :py:class:`BundleName <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant.BundleName>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bfd_counter = YList()
                        self.bfd_counter.parent = self
                        self.bfd_counter.name = 'bfd_counter'
                        self.bundle_name = BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant.BundleName()
                        self.bundle_name.parent = self


                    class BundleName(object):
                        """
                        Name of the bundle this information is for
                        
                        .. attribute:: item_name
                        
                        	Name of item
                        	**type**\:  str
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.item_name = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-name'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.item_name is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant.BundleName']['meta_info']


                    class BfdCounter(object):
                        """
                        BFD event counters
                        
                        .. attribute:: down
                        
                        	Number of times member state changed to down
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_time_cleared
                        
                        	Timestamp when counters were last cleared (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: member_name
                        
                        	Name of the member this information is for
                        	**type**\:  str
                        
                        .. attribute:: neighbor_unconfigured
                        
                        	Number of times member state changed to neighbor unconfigured
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_unconfigured_timeouts
                        
                        	Number of timeouts waiting for neighbor to become unconfigured
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: start_timeouts
                        
                        	Number of timeouts waiting for BFD to start
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: starting
                        
                        	Number of times member state changed to starting
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_cleared
                        
                        	Elapsed time in nsecs since counters were last cleared
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: up
                        
                        	Number of times member state changed to up
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.down = None
                            self.last_time_cleared = None
                            self.member_name = None
                            self.neighbor_unconfigured = None
                            self.neighbor_unconfigured_timeouts = None
                            self.start_timeouts = None
                            self.starting = None
                            self.time_since_cleared = None
                            self.up = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-counter'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.down is not None:
                                return True

                            if self.last_time_cleared is not None:
                                return True

                            if self.member_name is not None:
                                return True

                            if self.neighbor_unconfigured is not None:
                                return True

                            if self.neighbor_unconfigured_timeouts is not None:
                                return True

                            if self.start_timeouts is not None:
                                return True

                            if self.starting is not None:
                                return True

                            if self.time_since_cleared is not None:
                                return True

                            if self.up is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant.BfdCounter']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-bundle-descendant'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bfd_counter is not None:
                            for child_ref in self.bfd_counter:
                                if child_ref._has_data():
                                    return True

                        if self.bundle_name is not None and self.bundle_name._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleDescendant']['meta_info']


                class BfdCountersBundleChildrenMembers(object):
                    """
                    Children of bundle with BFD counters
                    information
                    
                    .. attribute:: bfd_counters_bundle_children_member
                    
                    	Bundle member item with BFD counters information
                    	**type**\: list of    :py:class:`BfdCountersBundleChildrenMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleChildrenMembers.BfdCountersBundleChildrenMember>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bfd_counters_bundle_children_member = YList()
                        self.bfd_counters_bundle_children_member.parent = self
                        self.bfd_counters_bundle_children_member.name = 'bfd_counters_bundle_children_member'


                    class BfdCountersBundleChildrenMember(object):
                        """
                        Bundle member item with BFD counters
                        information
                        
                        .. attribute:: member_interface  <key>
                        
                        	Member interface
                        	**type**\:  str
                        
                        .. attribute:: down
                        
                        	Number of times member state changed to down
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_time_cleared
                        
                        	Timestamp when counters were last cleared (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: member_name
                        
                        	Name of the member this information is for
                        	**type**\:  str
                        
                        .. attribute:: neighbor_unconfigured
                        
                        	Number of times member state changed to neighbor unconfigured
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: neighbor_unconfigured_timeouts
                        
                        	Number of timeouts waiting for neighbor to become unconfigured
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: start_timeouts
                        
                        	Number of timeouts waiting for BFD to start
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: starting
                        
                        	Number of times member state changed to starting
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: time_since_cleared
                        
                        	Elapsed time in nsecs since counters were last cleared
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: up
                        
                        	Number of times member state changed to up
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interface = None
                            self.down = None
                            self.last_time_cleared = None
                            self.member_name = None
                            self.neighbor_unconfigured = None
                            self.neighbor_unconfigured_timeouts = None
                            self.start_timeouts = None
                            self.starting = None
                            self.time_since_cleared = None
                            self.up = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.member_interface is None:
                                raise YPYModelError('Key property member_interface is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-bundle-children-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interface is not None:
                                return True

                            if self.down is not None:
                                return True

                            if self.last_time_cleared is not None:
                                return True

                            if self.member_name is not None:
                                return True

                            if self.neighbor_unconfigured is not None:
                                return True

                            if self.neighbor_unconfigured_timeouts is not None:
                                return True

                            if self.start_timeouts is not None:
                                return True

                            if self.starting is not None:
                                return True

                            if self.time_since_cleared is not None:
                                return True

                            if self.up is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleChildrenMembers.BfdCountersBundleChildrenMember']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-bundle-children-members'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bfd_counters_bundle_children_member is not None:
                            for child_ref in self.bfd_counters_bundle_children_member:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleChildrenMembers']['meta_info']


                class BfdCountersBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: item_name
                    
                    	Name of item
                    	**type**\:  str
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle.BfdCountersBundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bfd-counters/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-bundles/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.bfd_counters_bundle_children_members is not None and self.bfd_counters_bundle_children_members._has_data():
                        return True

                    if self.bfd_counters_bundle_descendant is not None and self.bfd_counters_bundle_descendant._has_data():
                        return True

                    if self.bfd_counters_bundle_item is not None and self.bfd_counters_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles.BfdCountersBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bfd-counters/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bfd_counters_bundle is not None:
                    for child_ref in self.bfd_counters_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.BfdCounters.BfdCountersBundles']['meta_info']


        class BfdCountersMembers(object):
            """
            Member interfaces with BFD counters information
            
            .. attribute:: bfd_counters_member
            
            	Member interface
            	**type**\: list of    :py:class:`BfdCountersMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersMembers.BfdCountersMember>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bfd_counters_member = YList()
                self.bfd_counters_member.parent = self
                self.bfd_counters_member.name = 'bfd_counters_member'


            class BfdCountersMember(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: bfd_counters_member_item
                
                	Data for this item
                	**type**\:   :py:class:`BfdCountersMemberItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BfdCounters.BfdCountersMembers.BfdCountersMember.BfdCountersMemberItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.bfd_counters_member_item = BundleInformation.BfdCounters.BfdCountersMembers.BfdCountersMember.BfdCountersMemberItem()
                    self.bfd_counters_member_item.parent = self


                class BfdCountersMemberItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: down
                    
                    	Number of times member state changed to down
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: last_time_cleared
                    
                    	Timestamp when counters were last cleared (deprecated)
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    .. attribute:: member_name
                    
                    	Name of the member this information is for
                    	**type**\:  str
                    
                    .. attribute:: neighbor_unconfigured
                    
                    	Number of times member state changed to neighbor unconfigured
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: neighbor_unconfigured_timeouts
                    
                    	Number of timeouts waiting for neighbor to become unconfigured
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: start_timeouts
                    
                    	Number of timeouts waiting for BFD to start
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: starting
                    
                    	Number of times member state changed to starting
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: time_since_cleared
                    
                    	Elapsed time in nsecs since counters were last cleared
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**units**\: nanosecond
                    
                    .. attribute:: up
                    
                    	Number of times member state changed to up
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.down = None
                        self.last_time_cleared = None
                        self.member_name = None
                        self.neighbor_unconfigured = None
                        self.neighbor_unconfigured_timeouts = None
                        self.start_timeouts = None
                        self.starting = None
                        self.time_since_cleared = None
                        self.up = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-member-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.down is not None:
                            return True

                        if self.last_time_cleared is not None:
                            return True

                        if self.member_name is not None:
                            return True

                        if self.neighbor_unconfigured is not None:
                            return True

                        if self.neighbor_unconfigured_timeouts is not None:
                            return True

                        if self.start_timeouts is not None:
                            return True

                        if self.starting is not None:
                            return True

                        if self.time_since_cleared is not None:
                            return True

                        if self.up is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.BfdCounters.BfdCountersMembers.BfdCountersMember.BfdCountersMemberItem']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bfd-counters/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-members/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.bfd_counters_member_item is not None and self.bfd_counters_member_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.BfdCounters.BfdCountersMembers.BfdCountersMember']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bfd-counters/Cisco-IOS-XR-bundlemgr-oper:bfd-counters-members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bfd_counters_member is not None:
                    for child_ref in self.bfd_counters_member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.BfdCounters.BfdCountersMembers']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bfd-counters'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.bfd_counters_bundles is not None and self.bfd_counters_bundles._has_data():
                return True

            if self.bfd_counters_members is not None and self.bfd_counters_members._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.BfdCounters']['meta_info']


    class ScheduledActions(object):
        """
        Scheduled actions on a bundle
        
        .. attribute:: scheduled_actions_bundles
        
        	Bundles with actions scheduled
        	**type**\:   :py:class:`ScheduledActionsBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.ScheduledActions.ScheduledActionsBundles>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.scheduled_actions_bundles = BundleInformation.ScheduledActions.ScheduledActionsBundles()
            self.scheduled_actions_bundles.parent = self


        class ScheduledActionsBundles(object):
            """
            Bundles with actions scheduled
            
            .. attribute:: scheduled_actions_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`ScheduledActionsBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.ScheduledActions.ScheduledActionsBundles.ScheduledActionsBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.scheduled_actions_bundle = YList()
                self.scheduled_actions_bundle.parent = self
                self.scheduled_actions_bundle.name = 'scheduled_actions_bundle'


            class ScheduledActionsBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: scheduled_actions_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`ScheduledActionsBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.ScheduledActions.ScheduledActionsBundles.ScheduledActionsBundle.ScheduledActionsBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.scheduled_actions_bundle_item = BundleInformation.ScheduledActions.ScheduledActionsBundles.ScheduledActionsBundle.ScheduledActionsBundleItem()
                    self.scheduled_actions_bundle_item.parent = self


                class ScheduledActionsBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: bundle_name
                    
                    	Name of the bundle
                    	**type**\:  str
                    
                    .. attribute:: scheduled_action
                    
                    	Scheduled actions
                    	**type**\: list of    :py:class:`ScheduledAction <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.ScheduledActions.ScheduledActionsBundles.ScheduledActionsBundle.ScheduledActionsBundleItem.ScheduledAction>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_name = None
                        self.scheduled_action = YList()
                        self.scheduled_action.parent = self
                        self.scheduled_action.name = 'scheduled_action'


                    class ScheduledAction(object):
                        """
                        Scheduled actions
                        
                        .. attribute:: action_state
                        
                        	Details whether the switch action is viable
                        	**type**\:   :py:class:`BmdSwitchReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdSwitchReasonEnum>`
                        
                        .. attribute:: mlacp_action
                        
                        	Type of mLACP scheduled action for a bundle
                        	**type**\:   :py:class:`BmdBagMlacpSchActionItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagMlacpSchActionItemEnum>`
                        
                        .. attribute:: time_remaining
                        
                        	Seconds left before action
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: second
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.action_state = None
                            self.mlacp_action = None
                            self.time_remaining = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:scheduled-action'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.action_state is not None:
                                return True

                            if self.mlacp_action is not None:
                                return True

                            if self.time_remaining is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.ScheduledActions.ScheduledActionsBundles.ScheduledActionsBundle.ScheduledActionsBundleItem.ScheduledAction']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:scheduled-actions-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_name is not None:
                            return True

                        if self.scheduled_action is not None:
                            for child_ref in self.scheduled_action:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.ScheduledActions.ScheduledActionsBundles.ScheduledActionsBundle.ScheduledActionsBundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:scheduled-actions/Cisco-IOS-XR-bundlemgr-oper:scheduled-actions-bundles/Cisco-IOS-XR-bundlemgr-oper:scheduled-actions-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.scheduled_actions_bundle_item is not None and self.scheduled_actions_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.ScheduledActions.ScheduledActionsBundles.ScheduledActionsBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:scheduled-actions/Cisco-IOS-XR-bundlemgr-oper:scheduled-actions-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.scheduled_actions_bundle is not None:
                    for child_ref in self.scheduled_actions_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.ScheduledActions.ScheduledActionsBundles']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:scheduled-actions'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.scheduled_actions_bundles is not None and self.scheduled_actions_bundles._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.ScheduledActions']['meta_info']


    class Bundle(object):
        """
        Generic information for bundles and members
        
        .. attribute:: bundle_bundles
        
        	Bundle interfaces with common bundle information
        	**type**\:   :py:class:`BundleBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles>`
        
        .. attribute:: bundle_members
        
        	Member interfaces with common bundle information
        	**type**\:   :py:class:`BundleMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.bundle_bundles = BundleInformation.Bundle.BundleBundles()
            self.bundle_bundles.parent = self
            self.bundle_members = BundleInformation.Bundle.BundleMembers()
            self.bundle_members.parent = self


        class BundleBundles(object):
            """
            Bundle interfaces with common bundle
            information
            
            .. attribute:: bundle_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`BundleBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bundle_bundle = YList()
                self.bundle_bundle.parent = self
                self.bundle_bundle.name = 'bundle_bundle'


            class BundleBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: bundle_bundle_children_members
                
                	Children of bundle with common bundle information
                	**type**\:   :py:class:`BundleBundleChildrenMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers>`
                
                .. attribute:: bundle_bundle_descendant
                
                	Data for this item and all its members
                	**type**\:   :py:class:`BundleBundleDescendant <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant>`
                
                .. attribute:: bundle_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`BundleBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.bundle_bundle_children_members = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers()
                    self.bundle_bundle_children_members.parent = self
                    self.bundle_bundle_descendant = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant()
                    self.bundle_bundle_descendant.parent = self
                    self.bundle_bundle_item = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem()
                    self.bundle_bundle_item.parent = self


                class BundleBundleDescendant(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: bundle_data
                    
                    	Bundle information
                    	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData>`
                    
                    .. attribute:: member_data
                    
                    	Member information
                    	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_data = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData()
                        self.bundle_data.parent = self
                        self.member_data = YList()
                        self.member_data.parent = self
                        self.member_data.name = 'member_data'


                    class BundleData(object):
                        """
                        Bundle information
                        
                        .. attribute:: active_foreign_member_count
                        
                        	The number of active foreign members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: active_member_count
                        
                        	The number of active local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: available_bandwidth
                        
                        	Bandwidth available to the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: bfd_config
                        
                        	Configuration values for BFD on bundle members
                        	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.BfdConfig>`
                        
                        .. attribute:: bundle_interface_name
                        
                        	Bundle interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: bundle_status
                        
                        	The state of the bundle
                        	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                        
                        .. attribute:: cisco_extensions
                        
                        	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: collector_max_delay
                        
                        	Collector Max Delay
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: configured_bandwidth
                        
                        	Bandwidth configured on the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: configured_foreign_member_count
                        
                        	The number of configured local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: configured_member_count
                        
                        	The number of configured local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: effective_bandwidth
                        
                        	Effective bandwidth on the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group that the bundle is configured to
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: inter_chassis
                        
                        	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                        	**type**\:  bool
                        
                        .. attribute:: ipv4bfd_status
                        
                        	The status of the BFD (IPv4) feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: ipv6bfd_status
                        
                        	The status of the BFD (IPv6) feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: is_active
                        
                        	Indicates the active/standby redundancy state of the device for the bundle
                        	**type**\:  bool
                        
                        .. attribute:: lacp_nonrevertive
                        
                        	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: lacp_status
                        
                        	The status of the LACP feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: link_order_status
                        
                        	The status of the link order signaling feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: load_balance_hash_type
                        
                        	The type of hash to use for load balancing
                        	**type**\:  str
                        
                        .. attribute:: load_balance_locality_threshold
                        
                        	The number of links required per rack for localized load balancing
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: mac_address
                        
                        	MAC address of this member
                        	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.MacAddress>`
                        
                        .. attribute:: mac_source
                        
                        	The source of the MAC Address
                        	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                        
                        .. attribute:: mac_source_member
                        
                        	The name of the member that supplied the MAC address
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: maximize_threshold_value_band_width
                        
                        	Attempt to maximize the bundle if bandwidth is below this value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximize_threshold_value_links
                        
                        	Attempt to maximize the bundle if links are below this value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximum_active_links
                        
                        	Maximum number of active links in the bundle
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: maximum_active_links_source
                        
                        	Source of maximum active links value
                        	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                        
                        .. attribute:: minimum_active_links
                        
                        	Minimum number of active links for bundle to go up
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: minimum_bandwidth
                        
                        	Minimum bundle bandwidth for bundle to go up (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: mlacp_mode
                        
                        	Indicates the mode of the device for the bundle
                        	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                        
                        .. attribute:: mlacp_status
                        
                        	The status of the mLACP feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: primary_member
                        
                        	Primary bundle member (no longer applicable)
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: recovery_delay
                        
                        	Number of seconds to wait before becoming active after recovering from a failure
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: singleton
                        
                        	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                        	**type**\:  bool
                        
                        .. attribute:: standby_member_count
                        
                        	The number of standby local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: suppression_timer
                        
                        	Timer for suppressing bundle state flaps
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: switchover_type
                        
                        	How a switchover of the bundle from this device will occur
                        	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                        
                        .. attribute:: wait_while_timer
                        
                        	The wait while time used for member ports
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.active_foreign_member_count = None
                            self.active_member_count = None
                            self.available_bandwidth = None
                            self.bfd_config = YList()
                            self.bfd_config.parent = self
                            self.bfd_config.name = 'bfd_config'
                            self.bundle_interface_name = None
                            self.bundle_status = None
                            self.cisco_extensions = None
                            self.collector_max_delay = None
                            self.configured_bandwidth = None
                            self.configured_foreign_member_count = None
                            self.configured_member_count = None
                            self.effective_bandwidth = None
                            self.iccp_group_id = None
                            self.inter_chassis = None
                            self.ipv4bfd_status = None
                            self.ipv6bfd_status = None
                            self.is_active = None
                            self.lacp_nonrevertive = None
                            self.lacp_status = None
                            self.link_order_status = None
                            self.load_balance_hash_type = None
                            self.load_balance_locality_threshold = None
                            self.mac_address = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.MacAddress()
                            self.mac_address.parent = self
                            self.mac_source = None
                            self.mac_source_member = None
                            self.maximize_threshold_value_band_width = None
                            self.maximize_threshold_value_links = None
                            self.maximum_active_links = None
                            self.maximum_active_links_source = None
                            self.minimum_active_links = None
                            self.minimum_bandwidth = None
                            self.mlacp_mode = None
                            self.mlacp_status = None
                            self.primary_member = None
                            self.recovery_delay = None
                            self.singleton = None
                            self.standby_member_count = None
                            self.suppression_timer = None
                            self.switchover_type = None
                            self.wait_while_timer = None


                        class MacAddress(object):
                            """
                            MAC address of this member
                            
                            .. attribute:: address
                            
                            	MAC address
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.MacAddress']['meta_info']


                        class BfdConfig(object):
                            """
                            Configuration values for BFD on bundle members
                            
                            .. attribute:: bundle_status
                            
                            	Status of BFD on the bundle
                            	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                            
                            .. attribute:: destination_address
                            
                            	Configured destination address for BFD session
                            	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.BfdConfig.DestinationAddress>`
                            
                            .. attribute:: fast_detect
                            
                            	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                            	**type**\:  bool
                            
                            .. attribute:: mode_info
                            
                            	Standard used for per\-member BFD
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: nbr_unconfig_timer
                            
                            	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_echo_min_interval
                            
                            	Preferred echo minimum interval for the BFD session (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_min_interval
                            
                            	Preferred minimum interval for the BFD session (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_multiplier
                            
                            	Preferred multiplier for the BFD session
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: start_timer
                            
                            	Time to wait on session start before declaring DOWN
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_status = None
                                self.destination_address = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.BfdConfig.DestinationAddress()
                                self.destination_address.parent = self
                                self.fast_detect = None
                                self.mode_info = None
                                self.nbr_unconfig_timer = None
                                self.pref_echo_min_interval = None
                                self.pref_min_interval = None
                                self.pref_multiplier = None
                                self.start_timer = None


                            class DestinationAddress(object):
                                """
                                Configured destination address for BFD session
                                
                                .. attribute:: af
                                
                                	AF
                                	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address type
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address type
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af = None
                                    self.ipv4 = None
                                    self.ipv6 = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.af is not None:
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.BfdConfig.DestinationAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_status is not None:
                                    return True

                                if self.destination_address is not None and self.destination_address._has_data():
                                    return True

                                if self.fast_detect is not None:
                                    return True

                                if self.mode_info is not None:
                                    return True

                                if self.nbr_unconfig_timer is not None:
                                    return True

                                if self.pref_echo_min_interval is not None:
                                    return True

                                if self.pref_min_interval is not None:
                                    return True

                                if self.pref_multiplier is not None:
                                    return True

                                if self.start_timer is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData.BfdConfig']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.active_foreign_member_count is not None:
                                return True

                            if self.active_member_count is not None:
                                return True

                            if self.available_bandwidth is not None:
                                return True

                            if self.bfd_config is not None:
                                for child_ref in self.bfd_config:
                                    if child_ref._has_data():
                                        return True

                            if self.bundle_interface_name is not None:
                                return True

                            if self.bundle_status is not None:
                                return True

                            if self.cisco_extensions is not None:
                                return True

                            if self.collector_max_delay is not None:
                                return True

                            if self.configured_bandwidth is not None:
                                return True

                            if self.configured_foreign_member_count is not None:
                                return True

                            if self.configured_member_count is not None:
                                return True

                            if self.effective_bandwidth is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.inter_chassis is not None:
                                return True

                            if self.ipv4bfd_status is not None:
                                return True

                            if self.ipv6bfd_status is not None:
                                return True

                            if self.is_active is not None:
                                return True

                            if self.lacp_nonrevertive is not None:
                                return True

                            if self.lacp_status is not None:
                                return True

                            if self.link_order_status is not None:
                                return True

                            if self.load_balance_hash_type is not None:
                                return True

                            if self.load_balance_locality_threshold is not None:
                                return True

                            if self.mac_address is not None and self.mac_address._has_data():
                                return True

                            if self.mac_source is not None:
                                return True

                            if self.mac_source_member is not None:
                                return True

                            if self.maximize_threshold_value_band_width is not None:
                                return True

                            if self.maximize_threshold_value_links is not None:
                                return True

                            if self.maximum_active_links is not None:
                                return True

                            if self.maximum_active_links_source is not None:
                                return True

                            if self.minimum_active_links is not None:
                                return True

                            if self.minimum_bandwidth is not None:
                                return True

                            if self.mlacp_mode is not None:
                                return True

                            if self.mlacp_status is not None:
                                return True

                            if self.primary_member is not None:
                                return True

                            if self.recovery_delay is not None:
                                return True

                            if self.singleton is not None:
                                return True

                            if self.standby_member_count is not None:
                                return True

                            if self.suppression_timer is not None:
                                return True

                            if self.switchover_type is not None:
                                return True

                            if self.wait_while_timer is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.BundleData']['meta_info']


                    class MemberData(object):
                        """
                        Member information
                        
                        .. attribute:: bandwidth
                        
                        	Bandwidth of this member (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: counters
                        
                        	Counters data about member link
                        	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.Counters>`
                        
                        .. attribute:: iccp_node
                        
                        	Location of member
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Member's interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: link_data
                        
                        	Lacp data about member link
                        	**type**\:   :py:class:`LinkData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.LinkData>`
                        
                        .. attribute:: link_order_number
                        
                        	Member's link order number
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: mac_address
                        
                        	MAC address of this member (deprecated)
                        	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MacAddress>`
                        
                        .. attribute:: member_mux_data
                        
                        	Mux state machine data
                        	**type**\:   :py:class:`MemberMuxData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MemberMuxData>`
                        
                        .. attribute:: member_name
                        
                        	Member's (short form) name
                        	**type**\:  str
                        
                        .. attribute:: member_type
                        
                        	Member's type (local/foreign)
                        	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                        
                        .. attribute:: port_number
                        
                        	Member's link number
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: port_priority
                        
                        	The priority of this member
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: underlying_link_id
                        
                        	Member's underlying link ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bandwidth = None
                            self.counters = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.Counters()
                            self.counters.parent = self
                            self.iccp_node = None
                            self.interface_name = None
                            self.link_data = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.LinkData()
                            self.link_data.parent = self
                            self.link_order_number = None
                            self.mac_address = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MacAddress()
                            self.mac_address.parent = self
                            self.member_mux_data = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MemberMuxData()
                            self.member_mux_data.parent = self
                            self.member_name = None
                            self.member_type = None
                            self.port_number = None
                            self.port_priority = None
                            self.underlying_link_id = None


                        class Counters(object):
                            """
                            Counters data about member link
                            
                            .. attribute:: defaulted
                            
                            	State flag set to Defaulted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: excess_lacpd_us_received
                            
                            	LACPDUs received that exceed the rate limit
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: excess_marker_packets_received
                            
                            	Marker packets received that exceed the rate limit
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: expired
                            
                            	State flag set to Expired
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: illegal_packets_received
                            
                            	Illegal and unknown packets received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lacpd_us_received
                            
                            	LACPDUs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lacpd_us_transmitted
                            
                            	LACPDUs transmitted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_cleared_nsec
                            
                            	Last time counters cleared (nsec) (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_cleared_sec
                            
                            	Last time counters cleared (s) (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: marker_packets_received
                            
                            	Marker packets received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: marker_responses_transmitted
                            
                            	Marker response packets transmitted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.defaulted = None
                                self.excess_lacpd_us_received = None
                                self.excess_marker_packets_received = None
                                self.expired = None
                                self.illegal_packets_received = None
                                self.lacpd_us_received = None
                                self.lacpd_us_transmitted = None
                                self.last_cleared_nsec = None
                                self.last_cleared_sec = None
                                self.marker_packets_received = None
                                self.marker_responses_transmitted = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.defaulted is not None:
                                    return True

                                if self.excess_lacpd_us_received is not None:
                                    return True

                                if self.excess_marker_packets_received is not None:
                                    return True

                                if self.expired is not None:
                                    return True

                                if self.illegal_packets_received is not None:
                                    return True

                                if self.lacpd_us_received is not None:
                                    return True

                                if self.lacpd_us_transmitted is not None:
                                    return True

                                if self.last_cleared_nsec is not None:
                                    return True

                                if self.last_cleared_sec is not None:
                                    return True

                                if self.marker_packets_received is not None:
                                    return True

                                if self.marker_responses_transmitted is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.Counters']['meta_info']


                        class LinkData(object):
                            """
                            Lacp data about member link
                            
                            .. attribute:: actor_operational_key
                            
                            	Operational key for this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_id
                            
                            	Port number of this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_priority
                            
                            	Priority of this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_state
                            
                            	LACP state of this port
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: actor_system_mac_address
                            
                            	MAC Address of the actor system
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            .. attribute:: actor_system_priority
                            
                            	System priority of actor system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: attached_aggregator_id
                            
                            	MIB ifindex of attached bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_handle
                            
                            	Member's interface handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: partner_operational_key
                            
                            	Operational key for partner port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_id
                            
                            	Port number of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_priority
                            
                            	Priority of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_state
                            
                            	LACP state of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: partner_system_mac_address
                            
                            	MAC Address used to identify the partner system
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            .. attribute:: partner_system_priority
                            
                            	System priority of partner system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: selected_aggregator_id
                            
                            	MIB ifindex of selected bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.actor_operational_key = None
                                self.actor_port_id = None
                                self.actor_port_priority = None
                                self.actor_port_state = None
                                self.actor_system_mac_address = None
                                self.actor_system_priority = None
                                self.attached_aggregator_id = None
                                self.interface_handle = None
                                self.partner_operational_key = None
                                self.partner_port_id = None
                                self.partner_port_priority = None
                                self.partner_port_state = None
                                self.partner_system_mac_address = None
                                self.partner_system_priority = None
                                self.selected_aggregator_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:link-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.actor_operational_key is not None:
                                    return True

                                if self.actor_port_id is not None:
                                    return True

                                if self.actor_port_priority is not None:
                                    return True

                                if self.actor_port_state is not None:
                                    return True

                                if self.actor_system_mac_address is not None:
                                    return True

                                if self.actor_system_priority is not None:
                                    return True

                                if self.attached_aggregator_id is not None:
                                    return True

                                if self.interface_handle is not None:
                                    return True

                                if self.partner_operational_key is not None:
                                    return True

                                if self.partner_port_id is not None:
                                    return True

                                if self.partner_port_priority is not None:
                                    return True

                                if self.partner_port_state is not None:
                                    return True

                                if self.partner_system_mac_address is not None:
                                    return True

                                if self.partner_system_priority is not None:
                                    return True

                                if self.selected_aggregator_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.LinkData']['meta_info']


                        class MemberMuxData(object):
                            """
                            Mux state machine data
                            
                            .. attribute:: error
                            
                            	Internal value indicating if an error occurred trying to put a link into the desired state
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_mux_state_reason
                            
                            	Reason for last Mux state change
                            	**type**\:   :py:class:`BmMbrStateReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMbrStateReasonEnum>`
                            
                            .. attribute:: member_mux_state_reason_data
                            
                            	Data regarding the reason for last Mux state change
                            	**type**\:   :py:class:`MemberMuxStateReasonData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MemberMuxData.MemberMuxStateReasonData>`
                            
                            .. attribute:: member_state
                            
                            	Current internal state of this bundle member
                            	**type**\:   :py:class:`BmdMemberStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberStateEnum>`
                            
                            .. attribute:: mux_state
                            
                            	Current state of this bundle member
                            	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                            
                            .. attribute:: mux_state_reason
                            
                            	Reason for last Mux state change (Deprecated)
                            	**type**\:   :py:class:`BmMuxreasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxreasonEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.error = None
                                self.member_mux_state_reason = None
                                self.member_mux_state_reason_data = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MemberMuxData.MemberMuxStateReasonData()
                                self.member_mux_state_reason_data.parent = self
                                self.member_state = None
                                self.mux_state = None
                                self.mux_state_reason = None


                            class MemberMuxStateReasonData(object):
                                """
                                Data regarding the reason for last Mux state
                                change
                                
                                .. attribute:: reason_type
                                
                                	The item the reason applies to
                                	**type**\:   :py:class:`BmStateReasonTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmStateReasonTargetEnum>`
                                
                                .. attribute:: severity
                                
                                	The severity of the reason
                                	**type**\:   :py:class:`BmSeverityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmSeverityEnum>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.reason_type = None
                                    self.severity = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-state-reason-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.reason_type is not None:
                                        return True

                                    if self.severity is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MemberMuxData.MemberMuxStateReasonData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.error is not None:
                                    return True

                                if self.member_mux_state_reason is not None:
                                    return True

                                if self.member_mux_state_reason_data is not None and self.member_mux_state_reason_data._has_data():
                                    return True

                                if self.member_state is not None:
                                    return True

                                if self.mux_state is not None:
                                    return True

                                if self.mux_state_reason is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MemberMuxData']['meta_info']


                        class MacAddress(object):
                            """
                            MAC address of this member (deprecated)
                            
                            .. attribute:: address
                            
                            	MAC address
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData.MacAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bandwidth is not None:
                                return True

                            if self.counters is not None and self.counters._has_data():
                                return True

                            if self.iccp_node is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.link_data is not None and self.link_data._has_data():
                                return True

                            if self.link_order_number is not None:
                                return True

                            if self.mac_address is not None and self.mac_address._has_data():
                                return True

                            if self.member_mux_data is not None and self.member_mux_data._has_data():
                                return True

                            if self.member_name is not None:
                                return True

                            if self.member_type is not None:
                                return True

                            if self.port_number is not None:
                                return True

                            if self.port_priority is not None:
                                return True

                            if self.underlying_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant.MemberData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-bundle-descendant'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_data is not None and self.bundle_data._has_data():
                            return True

                        if self.member_data is not None:
                            for child_ref in self.member_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleDescendant']['meta_info']


                class BundleBundleChildrenMembers(object):
                    """
                    Children of bundle with common bundle
                    information
                    
                    .. attribute:: bundle_bundle_children_member
                    
                    	Bundle member item with common bundle information
                    	**type**\: list of    :py:class:`BundleBundleChildrenMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_bundle_children_member = YList()
                        self.bundle_bundle_children_member.parent = self
                        self.bundle_bundle_children_member.name = 'bundle_bundle_children_member'


                    class BundleBundleChildrenMember(object):
                        """
                        Bundle member item with common bundle
                        information
                        
                        .. attribute:: member_interface  <key>
                        
                        	Member interface
                        	**type**\:  str
                        
                        .. attribute:: bandwidth
                        
                        	Bandwidth of this member (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: counters
                        
                        	Counters data about member link
                        	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.Counters>`
                        
                        .. attribute:: iccp_node
                        
                        	Location of member
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Member's interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: link_data
                        
                        	Lacp data about member link
                        	**type**\:   :py:class:`LinkData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.LinkData>`
                        
                        .. attribute:: link_order_number
                        
                        	Member's link order number
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: mac_address
                        
                        	MAC address of this member (deprecated)
                        	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MacAddress>`
                        
                        .. attribute:: member_mux_data
                        
                        	Mux state machine data
                        	**type**\:   :py:class:`MemberMuxData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MemberMuxData>`
                        
                        .. attribute:: member_name
                        
                        	Member's (short form) name
                        	**type**\:  str
                        
                        .. attribute:: member_type
                        
                        	Member's type (local/foreign)
                        	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                        
                        .. attribute:: port_number
                        
                        	Member's link number
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: port_priority
                        
                        	The priority of this member
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: underlying_link_id
                        
                        	Member's underlying link ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interface = None
                            self.bandwidth = None
                            self.counters = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.Counters()
                            self.counters.parent = self
                            self.iccp_node = None
                            self.interface_name = None
                            self.link_data = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.LinkData()
                            self.link_data.parent = self
                            self.link_order_number = None
                            self.mac_address = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MacAddress()
                            self.mac_address.parent = self
                            self.member_mux_data = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MemberMuxData()
                            self.member_mux_data.parent = self
                            self.member_name = None
                            self.member_type = None
                            self.port_number = None
                            self.port_priority = None
                            self.underlying_link_id = None


                        class Counters(object):
                            """
                            Counters data about member link
                            
                            .. attribute:: defaulted
                            
                            	State flag set to Defaulted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: excess_lacpd_us_received
                            
                            	LACPDUs received that exceed the rate limit
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: excess_marker_packets_received
                            
                            	Marker packets received that exceed the rate limit
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: expired
                            
                            	State flag set to Expired
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: illegal_packets_received
                            
                            	Illegal and unknown packets received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lacpd_us_received
                            
                            	LACPDUs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lacpd_us_transmitted
                            
                            	LACPDUs transmitted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_cleared_nsec
                            
                            	Last time counters cleared (nsec) (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_cleared_sec
                            
                            	Last time counters cleared (s) (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: marker_packets_received
                            
                            	Marker packets received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: marker_responses_transmitted
                            
                            	Marker response packets transmitted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.defaulted = None
                                self.excess_lacpd_us_received = None
                                self.excess_marker_packets_received = None
                                self.expired = None
                                self.illegal_packets_received = None
                                self.lacpd_us_received = None
                                self.lacpd_us_transmitted = None
                                self.last_cleared_nsec = None
                                self.last_cleared_sec = None
                                self.marker_packets_received = None
                                self.marker_responses_transmitted = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.defaulted is not None:
                                    return True

                                if self.excess_lacpd_us_received is not None:
                                    return True

                                if self.excess_marker_packets_received is not None:
                                    return True

                                if self.expired is not None:
                                    return True

                                if self.illegal_packets_received is not None:
                                    return True

                                if self.lacpd_us_received is not None:
                                    return True

                                if self.lacpd_us_transmitted is not None:
                                    return True

                                if self.last_cleared_nsec is not None:
                                    return True

                                if self.last_cleared_sec is not None:
                                    return True

                                if self.marker_packets_received is not None:
                                    return True

                                if self.marker_responses_transmitted is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.Counters']['meta_info']


                        class LinkData(object):
                            """
                            Lacp data about member link
                            
                            .. attribute:: actor_operational_key
                            
                            	Operational key for this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_id
                            
                            	Port number of this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_priority
                            
                            	Priority of this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_state
                            
                            	LACP state of this port
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: actor_system_mac_address
                            
                            	MAC Address of the actor system
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            .. attribute:: actor_system_priority
                            
                            	System priority of actor system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: attached_aggregator_id
                            
                            	MIB ifindex of attached bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_handle
                            
                            	Member's interface handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: partner_operational_key
                            
                            	Operational key for partner port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_id
                            
                            	Port number of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_priority
                            
                            	Priority of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_state
                            
                            	LACP state of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: partner_system_mac_address
                            
                            	MAC Address used to identify the partner system
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            .. attribute:: partner_system_priority
                            
                            	System priority of partner system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: selected_aggregator_id
                            
                            	MIB ifindex of selected bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.actor_operational_key = None
                                self.actor_port_id = None
                                self.actor_port_priority = None
                                self.actor_port_state = None
                                self.actor_system_mac_address = None
                                self.actor_system_priority = None
                                self.attached_aggregator_id = None
                                self.interface_handle = None
                                self.partner_operational_key = None
                                self.partner_port_id = None
                                self.partner_port_priority = None
                                self.partner_port_state = None
                                self.partner_system_mac_address = None
                                self.partner_system_priority = None
                                self.selected_aggregator_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:link-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.actor_operational_key is not None:
                                    return True

                                if self.actor_port_id is not None:
                                    return True

                                if self.actor_port_priority is not None:
                                    return True

                                if self.actor_port_state is not None:
                                    return True

                                if self.actor_system_mac_address is not None:
                                    return True

                                if self.actor_system_priority is not None:
                                    return True

                                if self.attached_aggregator_id is not None:
                                    return True

                                if self.interface_handle is not None:
                                    return True

                                if self.partner_operational_key is not None:
                                    return True

                                if self.partner_port_id is not None:
                                    return True

                                if self.partner_port_priority is not None:
                                    return True

                                if self.partner_port_state is not None:
                                    return True

                                if self.partner_system_mac_address is not None:
                                    return True

                                if self.partner_system_priority is not None:
                                    return True

                                if self.selected_aggregator_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.LinkData']['meta_info']


                        class MemberMuxData(object):
                            """
                            Mux state machine data
                            
                            .. attribute:: error
                            
                            	Internal value indicating if an error occurred trying to put a link into the desired state
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_mux_state_reason
                            
                            	Reason for last Mux state change
                            	**type**\:   :py:class:`BmMbrStateReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMbrStateReasonEnum>`
                            
                            .. attribute:: member_mux_state_reason_data
                            
                            	Data regarding the reason for last Mux state change
                            	**type**\:   :py:class:`MemberMuxStateReasonData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MemberMuxData.MemberMuxStateReasonData>`
                            
                            .. attribute:: member_state
                            
                            	Current internal state of this bundle member
                            	**type**\:   :py:class:`BmdMemberStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberStateEnum>`
                            
                            .. attribute:: mux_state
                            
                            	Current state of this bundle member
                            	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                            
                            .. attribute:: mux_state_reason
                            
                            	Reason for last Mux state change (Deprecated)
                            	**type**\:   :py:class:`BmMuxreasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxreasonEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.error = None
                                self.member_mux_state_reason = None
                                self.member_mux_state_reason_data = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MemberMuxData.MemberMuxStateReasonData()
                                self.member_mux_state_reason_data.parent = self
                                self.member_state = None
                                self.mux_state = None
                                self.mux_state_reason = None


                            class MemberMuxStateReasonData(object):
                                """
                                Data regarding the reason for last Mux state
                                change
                                
                                .. attribute:: reason_type
                                
                                	The item the reason applies to
                                	**type**\:   :py:class:`BmStateReasonTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmStateReasonTargetEnum>`
                                
                                .. attribute:: severity
                                
                                	The severity of the reason
                                	**type**\:   :py:class:`BmSeverityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmSeverityEnum>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.reason_type = None
                                    self.severity = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-state-reason-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.reason_type is not None:
                                        return True

                                    if self.severity is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MemberMuxData.MemberMuxStateReasonData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.error is not None:
                                    return True

                                if self.member_mux_state_reason is not None:
                                    return True

                                if self.member_mux_state_reason_data is not None and self.member_mux_state_reason_data._has_data():
                                    return True

                                if self.member_state is not None:
                                    return True

                                if self.mux_state is not None:
                                    return True

                                if self.mux_state_reason is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MemberMuxData']['meta_info']


                        class MacAddress(object):
                            """
                            MAC address of this member (deprecated)
                            
                            .. attribute:: address
                            
                            	MAC address
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember.MacAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.member_interface is None:
                                raise YPYModelError('Key property member_interface is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-bundle-children-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interface is not None:
                                return True

                            if self.bandwidth is not None:
                                return True

                            if self.counters is not None and self.counters._has_data():
                                return True

                            if self.iccp_node is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.link_data is not None and self.link_data._has_data():
                                return True

                            if self.link_order_number is not None:
                                return True

                            if self.mac_address is not None and self.mac_address._has_data():
                                return True

                            if self.member_mux_data is not None and self.member_mux_data._has_data():
                                return True

                            if self.member_name is not None:
                                return True

                            if self.member_type is not None:
                                return True

                            if self.port_number is not None:
                                return True

                            if self.port_priority is not None:
                                return True

                            if self.underlying_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers.BundleBundleChildrenMember']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-bundle-children-members'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_bundle_children_member is not None:
                            for child_ref in self.bundle_bundle_children_member:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleChildrenMembers']['meta_info']


                class BundleBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: active_foreign_member_count
                    
                    	The number of active foreign members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: active_member_count
                    
                    	The number of active local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: available_bandwidth
                    
                    	Bandwidth available to the bundle interface (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: bfd_config
                    
                    	Configuration values for BFD on bundle members
                    	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.BfdConfig>`
                    
                    .. attribute:: bundle_interface_name
                    
                    	Bundle interface name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: bundle_status
                    
                    	The state of the bundle
                    	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                    
                    .. attribute:: cisco_extensions
                    
                    	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                    	**type**\:  bool
                    
                    .. attribute:: collector_max_delay
                    
                    	Collector Max Delay
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: configured_bandwidth
                    
                    	Bandwidth configured on the bundle interface (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: configured_foreign_member_count
                    
                    	The number of configured local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: configured_member_count
                    
                    	The number of configured local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: effective_bandwidth
                    
                    	Effective bandwidth on the bundle interface (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: iccp_group_id
                    
                    	ICCP Group that the bundle is configured to
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: inter_chassis
                    
                    	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                    	**type**\:  bool
                    
                    .. attribute:: ipv4bfd_status
                    
                    	The status of the BFD (IPv4) feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: ipv6bfd_status
                    
                    	The status of the BFD (IPv6) feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: is_active
                    
                    	Indicates the active/standby redundancy state of the device for the bundle
                    	**type**\:  bool
                    
                    .. attribute:: lacp_nonrevertive
                    
                    	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                    	**type**\:  bool
                    
                    .. attribute:: lacp_status
                    
                    	The status of the LACP feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: link_order_status
                    
                    	The status of the link order signaling feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: load_balance_hash_type
                    
                    	The type of hash to use for load balancing
                    	**type**\:  str
                    
                    .. attribute:: load_balance_locality_threshold
                    
                    	The number of links required per rack for localized load balancing
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: mac_address
                    
                    	MAC address of this member
                    	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.MacAddress>`
                    
                    .. attribute:: mac_source
                    
                    	The source of the MAC Address
                    	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                    
                    .. attribute:: mac_source_member
                    
                    	The name of the member that supplied the MAC address
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: maximize_threshold_value_band_width
                    
                    	Attempt to maximize the bundle if bandwidth is below this value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: maximize_threshold_value_links
                    
                    	Attempt to maximize the bundle if links are below this value
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: maximum_active_links
                    
                    	Maximum number of active links in the bundle
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: maximum_active_links_source
                    
                    	Source of maximum active links value
                    	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                    
                    .. attribute:: minimum_active_links
                    
                    	Minimum number of active links for bundle to go up
                    	**type**\:  int
                    
                    	**range:** 0..255
                    
                    .. attribute:: minimum_bandwidth
                    
                    	Minimum bundle bandwidth for bundle to go up (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: mlacp_mode
                    
                    	Indicates the mode of the device for the bundle
                    	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                    
                    .. attribute:: mlacp_status
                    
                    	The status of the mLACP feature on the bundle
                    	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                    
                    .. attribute:: primary_member
                    
                    	Primary bundle member (no longer applicable)
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: recovery_delay
                    
                    	Number of seconds to wait before becoming active after recovering from a failure
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    	**units**\: second
                    
                    .. attribute:: singleton
                    
                    	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                    	**type**\:  bool
                    
                    .. attribute:: standby_member_count
                    
                    	The number of standby local members on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: suppression_timer
                    
                    	Timer for suppressing bundle state flaps
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: switchover_type
                    
                    	How a switchover of the bundle from this device will occur
                    	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                    
                    .. attribute:: wait_while_timer
                    
                    	The wait while time used for member ports
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.active_foreign_member_count = None
                        self.active_member_count = None
                        self.available_bandwidth = None
                        self.bfd_config = YList()
                        self.bfd_config.parent = self
                        self.bfd_config.name = 'bfd_config'
                        self.bundle_interface_name = None
                        self.bundle_status = None
                        self.cisco_extensions = None
                        self.collector_max_delay = None
                        self.configured_bandwidth = None
                        self.configured_foreign_member_count = None
                        self.configured_member_count = None
                        self.effective_bandwidth = None
                        self.iccp_group_id = None
                        self.inter_chassis = None
                        self.ipv4bfd_status = None
                        self.ipv6bfd_status = None
                        self.is_active = None
                        self.lacp_nonrevertive = None
                        self.lacp_status = None
                        self.link_order_status = None
                        self.load_balance_hash_type = None
                        self.load_balance_locality_threshold = None
                        self.mac_address = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.MacAddress()
                        self.mac_address.parent = self
                        self.mac_source = None
                        self.mac_source_member = None
                        self.maximize_threshold_value_band_width = None
                        self.maximize_threshold_value_links = None
                        self.maximum_active_links = None
                        self.maximum_active_links_source = None
                        self.minimum_active_links = None
                        self.minimum_bandwidth = None
                        self.mlacp_mode = None
                        self.mlacp_status = None
                        self.primary_member = None
                        self.recovery_delay = None
                        self.singleton = None
                        self.standby_member_count = None
                        self.suppression_timer = None
                        self.switchover_type = None
                        self.wait_while_timer = None


                    class MacAddress(object):
                        """
                        MAC address of this member
                        
                        .. attribute:: address
                        
                        	MAC address
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.MacAddress']['meta_info']


                    class BfdConfig(object):
                        """
                        Configuration values for BFD on bundle members
                        
                        .. attribute:: bundle_status
                        
                        	Status of BFD on the bundle
                        	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                        
                        .. attribute:: destination_address
                        
                        	Configured destination address for BFD session
                        	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.BfdConfig.DestinationAddress>`
                        
                        .. attribute:: fast_detect
                        
                        	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: mode_info
                        
                        	Standard used for per\-member BFD
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: nbr_unconfig_timer
                        
                        	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pref_echo_min_interval
                        
                        	Preferred echo minimum interval for the BFD session (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pref_min_interval
                        
                        	Preferred minimum interval for the BFD session (ms)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: pref_multiplier
                        
                        	Preferred multiplier for the BFD session
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: start_timer
                        
                        	Time to wait on session start before declaring DOWN
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_status = None
                            self.destination_address = BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.BfdConfig.DestinationAddress()
                            self.destination_address.parent = self
                            self.fast_detect = None
                            self.mode_info = None
                            self.nbr_unconfig_timer = None
                            self.pref_echo_min_interval = None
                            self.pref_min_interval = None
                            self.pref_multiplier = None
                            self.start_timer = None


                        class DestinationAddress(object):
                            """
                            Configured destination address for BFD session
                            
                            .. attribute:: af
                            
                            	AF
                            	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                            
                            .. attribute:: ipv4
                            
                            	IPv4 address type
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: ipv6
                            
                            	IPv6 address type
                            	**type**\:  str
                            
                            	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.af = None
                                self.ipv4 = None
                                self.ipv6 = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.af is not None:
                                    return True

                                if self.ipv4 is not None:
                                    return True

                                if self.ipv6 is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.BfdConfig.DestinationAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_status is not None:
                                return True

                            if self.destination_address is not None and self.destination_address._has_data():
                                return True

                            if self.fast_detect is not None:
                                return True

                            if self.mode_info is not None:
                                return True

                            if self.nbr_unconfig_timer is not None:
                                return True

                            if self.pref_echo_min_interval is not None:
                                return True

                            if self.pref_min_interval is not None:
                                return True

                            if self.pref_multiplier is not None:
                                return True

                            if self.start_timer is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem.BfdConfig']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.active_foreign_member_count is not None:
                            return True

                        if self.active_member_count is not None:
                            return True

                        if self.available_bandwidth is not None:
                            return True

                        if self.bfd_config is not None:
                            for child_ref in self.bfd_config:
                                if child_ref._has_data():
                                    return True

                        if self.bundle_interface_name is not None:
                            return True

                        if self.bundle_status is not None:
                            return True

                        if self.cisco_extensions is not None:
                            return True

                        if self.collector_max_delay is not None:
                            return True

                        if self.configured_bandwidth is not None:
                            return True

                        if self.configured_foreign_member_count is not None:
                            return True

                        if self.configured_member_count is not None:
                            return True

                        if self.effective_bandwidth is not None:
                            return True

                        if self.iccp_group_id is not None:
                            return True

                        if self.inter_chassis is not None:
                            return True

                        if self.ipv4bfd_status is not None:
                            return True

                        if self.ipv6bfd_status is not None:
                            return True

                        if self.is_active is not None:
                            return True

                        if self.lacp_nonrevertive is not None:
                            return True

                        if self.lacp_status is not None:
                            return True

                        if self.link_order_status is not None:
                            return True

                        if self.load_balance_hash_type is not None:
                            return True

                        if self.load_balance_locality_threshold is not None:
                            return True

                        if self.mac_address is not None and self.mac_address._has_data():
                            return True

                        if self.mac_source is not None:
                            return True

                        if self.mac_source_member is not None:
                            return True

                        if self.maximize_threshold_value_band_width is not None:
                            return True

                        if self.maximize_threshold_value_links is not None:
                            return True

                        if self.maximum_active_links is not None:
                            return True

                        if self.maximum_active_links_source is not None:
                            return True

                        if self.minimum_active_links is not None:
                            return True

                        if self.minimum_bandwidth is not None:
                            return True

                        if self.mlacp_mode is not None:
                            return True

                        if self.mlacp_status is not None:
                            return True

                        if self.primary_member is not None:
                            return True

                        if self.recovery_delay is not None:
                            return True

                        if self.singleton is not None:
                            return True

                        if self.standby_member_count is not None:
                            return True

                        if self.suppression_timer is not None:
                            return True

                        if self.switchover_type is not None:
                            return True

                        if self.wait_while_timer is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle.BundleBundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bundle/Cisco-IOS-XR-bundlemgr-oper:bundle-bundles/Cisco-IOS-XR-bundlemgr-oper:bundle-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.bundle_bundle_children_members is not None and self.bundle_bundle_children_members._has_data():
                        return True

                    if self.bundle_bundle_descendant is not None and self.bundle_bundle_descendant._has_data():
                        return True

                    if self.bundle_bundle_item is not None and self.bundle_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Bundle.BundleBundles.BundleBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bundle/Cisco-IOS-XR-bundlemgr-oper:bundle-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bundle_bundle is not None:
                    for child_ref in self.bundle_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Bundle.BundleBundles']['meta_info']


        class BundleMembers(object):
            """
            Member interfaces with common bundle
            information
            
            .. attribute:: bundle_member
            
            	Member interface
            	**type**\: list of    :py:class:`BundleMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bundle_member = YList()
                self.bundle_member.parent = self
                self.bundle_member.name = 'bundle_member'


            class BundleMember(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: bundle_member_ancestor
                
                	Data for this item and its parent bundle
                	**type**\:   :py:class:`BundleMemberAncestor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor>`
                
                .. attribute:: bundle_member_item
                
                	Data for this item
                	**type**\:   :py:class:`BundleMemberItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.bundle_member_ancestor = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor()
                    self.bundle_member_ancestor.parent = self
                    self.bundle_member_item = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem()
                    self.bundle_member_item.parent = self


                class BundleMemberAncestor(object):
                    """
                    Data for this item and its parent bundle
                    
                    .. attribute:: bundle_data
                    
                    	Bundle information
                    	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData>`
                    
                    .. attribute:: member_data
                    
                    	Member information
                    	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_data = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData()
                        self.bundle_data.parent = self
                        self.member_data = YList()
                        self.member_data.parent = self
                        self.member_data.name = 'member_data'


                    class BundleData(object):
                        """
                        Bundle information
                        
                        .. attribute:: active_foreign_member_count
                        
                        	The number of active foreign members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: active_member_count
                        
                        	The number of active local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: available_bandwidth
                        
                        	Bandwidth available to the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: bfd_config
                        
                        	Configuration values for BFD on bundle members
                        	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.BfdConfig>`
                        
                        .. attribute:: bundle_interface_name
                        
                        	Bundle interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: bundle_status
                        
                        	The state of the bundle
                        	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                        
                        .. attribute:: cisco_extensions
                        
                        	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: collector_max_delay
                        
                        	Collector Max Delay
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: configured_bandwidth
                        
                        	Bandwidth configured on the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: configured_foreign_member_count
                        
                        	The number of configured local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: configured_member_count
                        
                        	The number of configured local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: effective_bandwidth
                        
                        	Effective bandwidth on the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group that the bundle is configured to
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: inter_chassis
                        
                        	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                        	**type**\:  bool
                        
                        .. attribute:: ipv4bfd_status
                        
                        	The status of the BFD (IPv4) feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: ipv6bfd_status
                        
                        	The status of the BFD (IPv6) feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: is_active
                        
                        	Indicates the active/standby redundancy state of the device for the bundle
                        	**type**\:  bool
                        
                        .. attribute:: lacp_nonrevertive
                        
                        	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: lacp_status
                        
                        	The status of the LACP feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: link_order_status
                        
                        	The status of the link order signaling feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: load_balance_hash_type
                        
                        	The type of hash to use for load balancing
                        	**type**\:  str
                        
                        .. attribute:: load_balance_locality_threshold
                        
                        	The number of links required per rack for localized load balancing
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: mac_address
                        
                        	MAC address of this member
                        	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.MacAddress>`
                        
                        .. attribute:: mac_source
                        
                        	The source of the MAC Address
                        	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                        
                        .. attribute:: mac_source_member
                        
                        	The name of the member that supplied the MAC address
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: maximize_threshold_value_band_width
                        
                        	Attempt to maximize the bundle if bandwidth is below this value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximize_threshold_value_links
                        
                        	Attempt to maximize the bundle if links are below this value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximum_active_links
                        
                        	Maximum number of active links in the bundle
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: maximum_active_links_source
                        
                        	Source of maximum active links value
                        	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                        
                        .. attribute:: minimum_active_links
                        
                        	Minimum number of active links for bundle to go up
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: minimum_bandwidth
                        
                        	Minimum bundle bandwidth for bundle to go up (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: mlacp_mode
                        
                        	Indicates the mode of the device for the bundle
                        	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                        
                        .. attribute:: mlacp_status
                        
                        	The status of the mLACP feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: primary_member
                        
                        	Primary bundle member (no longer applicable)
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: recovery_delay
                        
                        	Number of seconds to wait before becoming active after recovering from a failure
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: singleton
                        
                        	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                        	**type**\:  bool
                        
                        .. attribute:: standby_member_count
                        
                        	The number of standby local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: suppression_timer
                        
                        	Timer for suppressing bundle state flaps
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: switchover_type
                        
                        	How a switchover of the bundle from this device will occur
                        	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                        
                        .. attribute:: wait_while_timer
                        
                        	The wait while time used for member ports
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.active_foreign_member_count = None
                            self.active_member_count = None
                            self.available_bandwidth = None
                            self.bfd_config = YList()
                            self.bfd_config.parent = self
                            self.bfd_config.name = 'bfd_config'
                            self.bundle_interface_name = None
                            self.bundle_status = None
                            self.cisco_extensions = None
                            self.collector_max_delay = None
                            self.configured_bandwidth = None
                            self.configured_foreign_member_count = None
                            self.configured_member_count = None
                            self.effective_bandwidth = None
                            self.iccp_group_id = None
                            self.inter_chassis = None
                            self.ipv4bfd_status = None
                            self.ipv6bfd_status = None
                            self.is_active = None
                            self.lacp_nonrevertive = None
                            self.lacp_status = None
                            self.link_order_status = None
                            self.load_balance_hash_type = None
                            self.load_balance_locality_threshold = None
                            self.mac_address = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.MacAddress()
                            self.mac_address.parent = self
                            self.mac_source = None
                            self.mac_source_member = None
                            self.maximize_threshold_value_band_width = None
                            self.maximize_threshold_value_links = None
                            self.maximum_active_links = None
                            self.maximum_active_links_source = None
                            self.minimum_active_links = None
                            self.minimum_bandwidth = None
                            self.mlacp_mode = None
                            self.mlacp_status = None
                            self.primary_member = None
                            self.recovery_delay = None
                            self.singleton = None
                            self.standby_member_count = None
                            self.suppression_timer = None
                            self.switchover_type = None
                            self.wait_while_timer = None


                        class MacAddress(object):
                            """
                            MAC address of this member
                            
                            .. attribute:: address
                            
                            	MAC address
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.MacAddress']['meta_info']


                        class BfdConfig(object):
                            """
                            Configuration values for BFD on bundle members
                            
                            .. attribute:: bundle_status
                            
                            	Status of BFD on the bundle
                            	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                            
                            .. attribute:: destination_address
                            
                            	Configured destination address for BFD session
                            	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.BfdConfig.DestinationAddress>`
                            
                            .. attribute:: fast_detect
                            
                            	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                            	**type**\:  bool
                            
                            .. attribute:: mode_info
                            
                            	Standard used for per\-member BFD
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: nbr_unconfig_timer
                            
                            	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_echo_min_interval
                            
                            	Preferred echo minimum interval for the BFD session (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_min_interval
                            
                            	Preferred minimum interval for the BFD session (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_multiplier
                            
                            	Preferred multiplier for the BFD session
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: start_timer
                            
                            	Time to wait on session start before declaring DOWN
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_status = None
                                self.destination_address = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.BfdConfig.DestinationAddress()
                                self.destination_address.parent = self
                                self.fast_detect = None
                                self.mode_info = None
                                self.nbr_unconfig_timer = None
                                self.pref_echo_min_interval = None
                                self.pref_min_interval = None
                                self.pref_multiplier = None
                                self.start_timer = None


                            class DestinationAddress(object):
                                """
                                Configured destination address for BFD session
                                
                                .. attribute:: af
                                
                                	AF
                                	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address type
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address type
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af = None
                                    self.ipv4 = None
                                    self.ipv6 = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.af is not None:
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.BfdConfig.DestinationAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_status is not None:
                                    return True

                                if self.destination_address is not None and self.destination_address._has_data():
                                    return True

                                if self.fast_detect is not None:
                                    return True

                                if self.mode_info is not None:
                                    return True

                                if self.nbr_unconfig_timer is not None:
                                    return True

                                if self.pref_echo_min_interval is not None:
                                    return True

                                if self.pref_min_interval is not None:
                                    return True

                                if self.pref_multiplier is not None:
                                    return True

                                if self.start_timer is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData.BfdConfig']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.active_foreign_member_count is not None:
                                return True

                            if self.active_member_count is not None:
                                return True

                            if self.available_bandwidth is not None:
                                return True

                            if self.bfd_config is not None:
                                for child_ref in self.bfd_config:
                                    if child_ref._has_data():
                                        return True

                            if self.bundle_interface_name is not None:
                                return True

                            if self.bundle_status is not None:
                                return True

                            if self.cisco_extensions is not None:
                                return True

                            if self.collector_max_delay is not None:
                                return True

                            if self.configured_bandwidth is not None:
                                return True

                            if self.configured_foreign_member_count is not None:
                                return True

                            if self.configured_member_count is not None:
                                return True

                            if self.effective_bandwidth is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.inter_chassis is not None:
                                return True

                            if self.ipv4bfd_status is not None:
                                return True

                            if self.ipv6bfd_status is not None:
                                return True

                            if self.is_active is not None:
                                return True

                            if self.lacp_nonrevertive is not None:
                                return True

                            if self.lacp_status is not None:
                                return True

                            if self.link_order_status is not None:
                                return True

                            if self.load_balance_hash_type is not None:
                                return True

                            if self.load_balance_locality_threshold is not None:
                                return True

                            if self.mac_address is not None and self.mac_address._has_data():
                                return True

                            if self.mac_source is not None:
                                return True

                            if self.mac_source_member is not None:
                                return True

                            if self.maximize_threshold_value_band_width is not None:
                                return True

                            if self.maximize_threshold_value_links is not None:
                                return True

                            if self.maximum_active_links is not None:
                                return True

                            if self.maximum_active_links_source is not None:
                                return True

                            if self.minimum_active_links is not None:
                                return True

                            if self.minimum_bandwidth is not None:
                                return True

                            if self.mlacp_mode is not None:
                                return True

                            if self.mlacp_status is not None:
                                return True

                            if self.primary_member is not None:
                                return True

                            if self.recovery_delay is not None:
                                return True

                            if self.singleton is not None:
                                return True

                            if self.standby_member_count is not None:
                                return True

                            if self.suppression_timer is not None:
                                return True

                            if self.switchover_type is not None:
                                return True

                            if self.wait_while_timer is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.BundleData']['meta_info']


                    class MemberData(object):
                        """
                        Member information
                        
                        .. attribute:: bandwidth
                        
                        	Bandwidth of this member (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: counters
                        
                        	Counters data about member link
                        	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.Counters>`
                        
                        .. attribute:: iccp_node
                        
                        	Location of member
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_name
                        
                        	Member's interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: link_data
                        
                        	Lacp data about member link
                        	**type**\:   :py:class:`LinkData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.LinkData>`
                        
                        .. attribute:: link_order_number
                        
                        	Member's link order number
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: mac_address
                        
                        	MAC address of this member (deprecated)
                        	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MacAddress>`
                        
                        .. attribute:: member_mux_data
                        
                        	Mux state machine data
                        	**type**\:   :py:class:`MemberMuxData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MemberMuxData>`
                        
                        .. attribute:: member_name
                        
                        	Member's (short form) name
                        	**type**\:  str
                        
                        .. attribute:: member_type
                        
                        	Member's type (local/foreign)
                        	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                        
                        .. attribute:: port_number
                        
                        	Member's link number
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: port_priority
                        
                        	The priority of this member
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: underlying_link_id
                        
                        	Member's underlying link ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bandwidth = None
                            self.counters = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.Counters()
                            self.counters.parent = self
                            self.iccp_node = None
                            self.interface_name = None
                            self.link_data = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.LinkData()
                            self.link_data.parent = self
                            self.link_order_number = None
                            self.mac_address = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MacAddress()
                            self.mac_address.parent = self
                            self.member_mux_data = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MemberMuxData()
                            self.member_mux_data.parent = self
                            self.member_name = None
                            self.member_type = None
                            self.port_number = None
                            self.port_priority = None
                            self.underlying_link_id = None


                        class Counters(object):
                            """
                            Counters data about member link
                            
                            .. attribute:: defaulted
                            
                            	State flag set to Defaulted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: excess_lacpd_us_received
                            
                            	LACPDUs received that exceed the rate limit
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: excess_marker_packets_received
                            
                            	Marker packets received that exceed the rate limit
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: expired
                            
                            	State flag set to Expired
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: illegal_packets_received
                            
                            	Illegal and unknown packets received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lacpd_us_received
                            
                            	LACPDUs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: lacpd_us_transmitted
                            
                            	LACPDUs transmitted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_cleared_nsec
                            
                            	Last time counters cleared (nsec) (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: last_cleared_sec
                            
                            	Last time counters cleared (s) (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: marker_packets_received
                            
                            	Marker packets received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: marker_responses_transmitted
                            
                            	Marker response packets transmitted
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.defaulted = None
                                self.excess_lacpd_us_received = None
                                self.excess_marker_packets_received = None
                                self.expired = None
                                self.illegal_packets_received = None
                                self.lacpd_us_received = None
                                self.lacpd_us_transmitted = None
                                self.last_cleared_nsec = None
                                self.last_cleared_sec = None
                                self.marker_packets_received = None
                                self.marker_responses_transmitted = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.defaulted is not None:
                                    return True

                                if self.excess_lacpd_us_received is not None:
                                    return True

                                if self.excess_marker_packets_received is not None:
                                    return True

                                if self.expired is not None:
                                    return True

                                if self.illegal_packets_received is not None:
                                    return True

                                if self.lacpd_us_received is not None:
                                    return True

                                if self.lacpd_us_transmitted is not None:
                                    return True

                                if self.last_cleared_nsec is not None:
                                    return True

                                if self.last_cleared_sec is not None:
                                    return True

                                if self.marker_packets_received is not None:
                                    return True

                                if self.marker_responses_transmitted is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.Counters']['meta_info']


                        class LinkData(object):
                            """
                            Lacp data about member link
                            
                            .. attribute:: actor_operational_key
                            
                            	Operational key for this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_id
                            
                            	Port number of this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_priority
                            
                            	Priority of this port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: actor_port_state
                            
                            	LACP state of this port
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: actor_system_mac_address
                            
                            	MAC Address of the actor system
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            .. attribute:: actor_system_priority
                            
                            	System priority of actor system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: attached_aggregator_id
                            
                            	MIB ifindex of attached bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: interface_handle
                            
                            	Member's interface handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: partner_operational_key
                            
                            	Operational key for partner port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_id
                            
                            	Port number of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_priority
                            
                            	Priority of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: partner_port_state
                            
                            	LACP state of the partner's port
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: partner_system_mac_address
                            
                            	MAC Address used to identify the partner system
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            .. attribute:: partner_system_priority
                            
                            	System priority of partner system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: selected_aggregator_id
                            
                            	MIB ifindex of selected bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.actor_operational_key = None
                                self.actor_port_id = None
                                self.actor_port_priority = None
                                self.actor_port_state = None
                                self.actor_system_mac_address = None
                                self.actor_system_priority = None
                                self.attached_aggregator_id = None
                                self.interface_handle = None
                                self.partner_operational_key = None
                                self.partner_port_id = None
                                self.partner_port_priority = None
                                self.partner_port_state = None
                                self.partner_system_mac_address = None
                                self.partner_system_priority = None
                                self.selected_aggregator_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:link-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.actor_operational_key is not None:
                                    return True

                                if self.actor_port_id is not None:
                                    return True

                                if self.actor_port_priority is not None:
                                    return True

                                if self.actor_port_state is not None:
                                    return True

                                if self.actor_system_mac_address is not None:
                                    return True

                                if self.actor_system_priority is not None:
                                    return True

                                if self.attached_aggregator_id is not None:
                                    return True

                                if self.interface_handle is not None:
                                    return True

                                if self.partner_operational_key is not None:
                                    return True

                                if self.partner_port_id is not None:
                                    return True

                                if self.partner_port_priority is not None:
                                    return True

                                if self.partner_port_state is not None:
                                    return True

                                if self.partner_system_mac_address is not None:
                                    return True

                                if self.partner_system_priority is not None:
                                    return True

                                if self.selected_aggregator_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.LinkData']['meta_info']


                        class MemberMuxData(object):
                            """
                            Mux state machine data
                            
                            .. attribute:: error
                            
                            	Internal value indicating if an error occurred trying to put a link into the desired state
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_mux_state_reason
                            
                            	Reason for last Mux state change
                            	**type**\:   :py:class:`BmMbrStateReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMbrStateReasonEnum>`
                            
                            .. attribute:: member_mux_state_reason_data
                            
                            	Data regarding the reason for last Mux state change
                            	**type**\:   :py:class:`MemberMuxStateReasonData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MemberMuxData.MemberMuxStateReasonData>`
                            
                            .. attribute:: member_state
                            
                            	Current internal state of this bundle member
                            	**type**\:   :py:class:`BmdMemberStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberStateEnum>`
                            
                            .. attribute:: mux_state
                            
                            	Current state of this bundle member
                            	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                            
                            .. attribute:: mux_state_reason
                            
                            	Reason for last Mux state change (Deprecated)
                            	**type**\:   :py:class:`BmMuxreasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxreasonEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.error = None
                                self.member_mux_state_reason = None
                                self.member_mux_state_reason_data = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MemberMuxData.MemberMuxStateReasonData()
                                self.member_mux_state_reason_data.parent = self
                                self.member_state = None
                                self.mux_state = None
                                self.mux_state_reason = None


                            class MemberMuxStateReasonData(object):
                                """
                                Data regarding the reason for last Mux state
                                change
                                
                                .. attribute:: reason_type
                                
                                	The item the reason applies to
                                	**type**\:   :py:class:`BmStateReasonTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmStateReasonTargetEnum>`
                                
                                .. attribute:: severity
                                
                                	The severity of the reason
                                	**type**\:   :py:class:`BmSeverityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmSeverityEnum>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.reason_type = None
                                    self.severity = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-state-reason-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.reason_type is not None:
                                        return True

                                    if self.severity is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MemberMuxData.MemberMuxStateReasonData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.error is not None:
                                    return True

                                if self.member_mux_state_reason is not None:
                                    return True

                                if self.member_mux_state_reason_data is not None and self.member_mux_state_reason_data._has_data():
                                    return True

                                if self.member_state is not None:
                                    return True

                                if self.mux_state is not None:
                                    return True

                                if self.mux_state_reason is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MemberMuxData']['meta_info']


                        class MacAddress(object):
                            """
                            MAC address of this member (deprecated)
                            
                            .. attribute:: address
                            
                            	MAC address
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData.MacAddress']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bandwidth is not None:
                                return True

                            if self.counters is not None and self.counters._has_data():
                                return True

                            if self.iccp_node is not None:
                                return True

                            if self.interface_name is not None:
                                return True

                            if self.link_data is not None and self.link_data._has_data():
                                return True

                            if self.link_order_number is not None:
                                return True

                            if self.mac_address is not None and self.mac_address._has_data():
                                return True

                            if self.member_mux_data is not None and self.member_mux_data._has_data():
                                return True

                            if self.member_name is not None:
                                return True

                            if self.member_type is not None:
                                return True

                            if self.port_number is not None:
                                return True

                            if self.port_priority is not None:
                                return True

                            if self.underlying_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor.MemberData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-member-ancestor'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_data is not None and self.bundle_data._has_data():
                            return True

                        if self.member_data is not None:
                            for child_ref in self.member_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberAncestor']['meta_info']


                class BundleMemberItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: bandwidth
                    
                    	Bandwidth of this member (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: counters
                    
                    	Counters data about member link
                    	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.Counters>`
                    
                    .. attribute:: iccp_node
                    
                    	Location of member
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Member's interface name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: link_data
                    
                    	Lacp data about member link
                    	**type**\:   :py:class:`LinkData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.LinkData>`
                    
                    .. attribute:: link_order_number
                    
                    	Member's link order number
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: mac_address
                    
                    	MAC address of this member (deprecated)
                    	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MacAddress>`
                    
                    .. attribute:: member_mux_data
                    
                    	Mux state machine data
                    	**type**\:   :py:class:`MemberMuxData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MemberMuxData>`
                    
                    .. attribute:: member_name
                    
                    	Member's (short form) name
                    	**type**\:  str
                    
                    .. attribute:: member_type
                    
                    	Member's type (local/foreign)
                    	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                    
                    .. attribute:: port_number
                    
                    	Member's link number
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: port_priority
                    
                    	The priority of this member
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: underlying_link_id
                    
                    	Member's underlying link ID
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bandwidth = None
                        self.counters = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.Counters()
                        self.counters.parent = self
                        self.iccp_node = None
                        self.interface_name = None
                        self.link_data = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.LinkData()
                        self.link_data.parent = self
                        self.link_order_number = None
                        self.mac_address = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MacAddress()
                        self.mac_address.parent = self
                        self.member_mux_data = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MemberMuxData()
                        self.member_mux_data.parent = self
                        self.member_name = None
                        self.member_type = None
                        self.port_number = None
                        self.port_priority = None
                        self.underlying_link_id = None


                    class Counters(object):
                        """
                        Counters data about member link
                        
                        .. attribute:: defaulted
                        
                        	State flag set to Defaulted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: excess_lacpd_us_received
                        
                        	LACPDUs received that exceed the rate limit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: excess_marker_packets_received
                        
                        	Marker packets received that exceed the rate limit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: expired
                        
                        	State flag set to Expired
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: illegal_packets_received
                        
                        	Illegal and unknown packets received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lacpd_us_received
                        
                        	LACPDUs received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lacpd_us_transmitted
                        
                        	LACPDUs transmitted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_cleared_nsec
                        
                        	Last time counters cleared (nsec) (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_cleared_sec
                        
                        	Last time counters cleared (s) (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: marker_packets_received
                        
                        	Marker packets received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: marker_responses_transmitted
                        
                        	Marker response packets transmitted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.defaulted = None
                            self.excess_lacpd_us_received = None
                            self.excess_marker_packets_received = None
                            self.expired = None
                            self.illegal_packets_received = None
                            self.lacpd_us_received = None
                            self.lacpd_us_transmitted = None
                            self.last_cleared_nsec = None
                            self.last_cleared_sec = None
                            self.marker_packets_received = None
                            self.marker_responses_transmitted = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.defaulted is not None:
                                return True

                            if self.excess_lacpd_us_received is not None:
                                return True

                            if self.excess_marker_packets_received is not None:
                                return True

                            if self.expired is not None:
                                return True

                            if self.illegal_packets_received is not None:
                                return True

                            if self.lacpd_us_received is not None:
                                return True

                            if self.lacpd_us_transmitted is not None:
                                return True

                            if self.last_cleared_nsec is not None:
                                return True

                            if self.last_cleared_sec is not None:
                                return True

                            if self.marker_packets_received is not None:
                                return True

                            if self.marker_responses_transmitted is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.Counters']['meta_info']


                    class LinkData(object):
                        """
                        Lacp data about member link
                        
                        .. attribute:: actor_operational_key
                        
                        	Operational key for this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_id
                        
                        	Port number of this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_priority
                        
                        	Priority of this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_state
                        
                        	LACP state of this port
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: actor_system_mac_address
                        
                        	MAC Address of the actor system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: actor_system_priority
                        
                        	System priority of actor system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: attached_aggregator_id
                        
                        	MIB ifindex of attached bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_handle
                        
                        	Member's interface handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: partner_operational_key
                        
                        	Operational key for partner port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_id
                        
                        	Port number of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_priority
                        
                        	Priority of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_state
                        
                        	LACP state of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: partner_system_mac_address
                        
                        	MAC Address used to identify the partner system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: partner_system_priority
                        
                        	System priority of partner system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: selected_aggregator_id
                        
                        	MIB ifindex of selected bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.actor_operational_key = None
                            self.actor_port_id = None
                            self.actor_port_priority = None
                            self.actor_port_state = None
                            self.actor_system_mac_address = None
                            self.actor_system_priority = None
                            self.attached_aggregator_id = None
                            self.interface_handle = None
                            self.partner_operational_key = None
                            self.partner_port_id = None
                            self.partner_port_priority = None
                            self.partner_port_state = None
                            self.partner_system_mac_address = None
                            self.partner_system_priority = None
                            self.selected_aggregator_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:link-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.actor_operational_key is not None:
                                return True

                            if self.actor_port_id is not None:
                                return True

                            if self.actor_port_priority is not None:
                                return True

                            if self.actor_port_state is not None:
                                return True

                            if self.actor_system_mac_address is not None:
                                return True

                            if self.actor_system_priority is not None:
                                return True

                            if self.attached_aggregator_id is not None:
                                return True

                            if self.interface_handle is not None:
                                return True

                            if self.partner_operational_key is not None:
                                return True

                            if self.partner_port_id is not None:
                                return True

                            if self.partner_port_priority is not None:
                                return True

                            if self.partner_port_state is not None:
                                return True

                            if self.partner_system_mac_address is not None:
                                return True

                            if self.partner_system_priority is not None:
                                return True

                            if self.selected_aggregator_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.LinkData']['meta_info']


                    class MemberMuxData(object):
                        """
                        Mux state machine data
                        
                        .. attribute:: error
                        
                        	Internal value indicating if an error occurred trying to put a link into the desired state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: member_mux_state_reason
                        
                        	Reason for last Mux state change
                        	**type**\:   :py:class:`BmMbrStateReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMbrStateReasonEnum>`
                        
                        .. attribute:: member_mux_state_reason_data
                        
                        	Data regarding the reason for last Mux state change
                        	**type**\:   :py:class:`MemberMuxStateReasonData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MemberMuxData.MemberMuxStateReasonData>`
                        
                        .. attribute:: member_state
                        
                        	Current internal state of this bundle member
                        	**type**\:   :py:class:`BmdMemberStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberStateEnum>`
                        
                        .. attribute:: mux_state
                        
                        	Current state of this bundle member
                        	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                        
                        .. attribute:: mux_state_reason
                        
                        	Reason for last Mux state change (Deprecated)
                        	**type**\:   :py:class:`BmMuxreasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxreasonEnum>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.error = None
                            self.member_mux_state_reason = None
                            self.member_mux_state_reason_data = BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MemberMuxData.MemberMuxStateReasonData()
                            self.member_mux_state_reason_data.parent = self
                            self.member_state = None
                            self.mux_state = None
                            self.mux_state_reason = None


                        class MemberMuxStateReasonData(object):
                            """
                            Data regarding the reason for last Mux state
                            change
                            
                            .. attribute:: reason_type
                            
                            	The item the reason applies to
                            	**type**\:   :py:class:`BmStateReasonTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmStateReasonTargetEnum>`
                            
                            .. attribute:: severity
                            
                            	The severity of the reason
                            	**type**\:   :py:class:`BmSeverityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmSeverityEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.reason_type = None
                                self.severity = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-state-reason-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.reason_type is not None:
                                    return True

                                if self.severity is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MemberMuxData.MemberMuxStateReasonData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.error is not None:
                                return True

                            if self.member_mux_state_reason is not None:
                                return True

                            if self.member_mux_state_reason_data is not None and self.member_mux_state_reason_data._has_data():
                                return True

                            if self.member_state is not None:
                                return True

                            if self.mux_state is not None:
                                return True

                            if self.mux_state_reason is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MemberMuxData']['meta_info']


                    class MacAddress(object):
                        """
                        MAC address of this member (deprecated)
                        
                        .. attribute:: address
                        
                        	MAC address
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem.MacAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-member-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bandwidth is not None:
                            return True

                        if self.counters is not None and self.counters._has_data():
                            return True

                        if self.iccp_node is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.link_data is not None and self.link_data._has_data():
                            return True

                        if self.link_order_number is not None:
                            return True

                        if self.mac_address is not None and self.mac_address._has_data():
                            return True

                        if self.member_mux_data is not None and self.member_mux_data._has_data():
                            return True

                        if self.member_name is not None:
                            return True

                        if self.member_type is not None:
                            return True

                        if self.port_number is not None:
                            return True

                        if self.port_priority is not None:
                            return True

                        if self.underlying_link_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember.BundleMemberItem']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bundle/Cisco-IOS-XR-bundlemgr-oper:bundle-members/Cisco-IOS-XR-bundlemgr-oper:bundle-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.bundle_member_ancestor is not None and self.bundle_member_ancestor._has_data():
                        return True

                    if self.bundle_member_item is not None and self.bundle_member_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Bundle.BundleMembers.BundleMember']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bundle/Cisco-IOS-XR-bundlemgr-oper:bundle-members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bundle_member is not None:
                    for child_ref in self.bundle_member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Bundle.BundleMembers']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bundle'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.bundle_bundles is not None and self.bundle_bundles._has_data():
                return True

            if self.bundle_members is not None and self.bundle_members._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.Bundle']['meta_info']


    class EventsRg(object):
        """
        Bundle ICCP events information for bundles and
        members
        
        .. attribute:: events_rg_bundles
        
        	Bundle interfaces with ICCP events information
        	**type**\:   :py:class:`EventsRgBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles>`
        
        .. attribute:: events_rg_iccp_groups
        
        	ICCP events for all ICCP Groups
        	**type**\:   :py:class:`EventsRgIccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups>`
        
        .. attribute:: events_rg_members
        
        	Bundle Member interfaces with ICCP events information
        	**type**\:   :py:class:`EventsRgMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.events_rg_bundles = BundleInformation.EventsRg.EventsRgBundles()
            self.events_rg_bundles.parent = self
            self.events_rg_iccp_groups = BundleInformation.EventsRg.EventsRgIccpGroups()
            self.events_rg_iccp_groups.parent = self
            self.events_rg_members = BundleInformation.EventsRg.EventsRgMembers()
            self.events_rg_members.parent = self


        class EventsRgMembers(object):
            """
            Bundle Member interfaces with ICCP events
            information
            
            .. attribute:: events_rg_member
            
            	Member interface
            	**type**\: list of    :py:class:`EventsRgMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_rg_member = YList()
                self.events_rg_member.parent = self
                self.events_rg_member.name = 'events_rg_member'


            class EventsRgMember(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: events_rg_member_ancestor
                
                	Data for this item and its parent bundle
                	**type**\:   :py:class:`EventsRgMemberAncestor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.events_rg_member_ancestor = BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor()
                    self.events_rg_member_ancestor.parent = self


                class EventsRgMemberAncestor(object):
                    """
                    Data for this item and its parent bundle
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-rg-member-ancestor'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember.EventsRgMemberAncestor']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-rg/Cisco-IOS-XR-bundlemgr-oper:events-rg-members/Cisco-IOS-XR-bundlemgr-oper:events-rg-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.events_rg_member_ancestor is not None and self.events_rg_member_ancestor._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers.EventsRgMember']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-rg/Cisco-IOS-XR-bundlemgr-oper:events-rg-members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_rg_member is not None:
                    for child_ref in self.events_rg_member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsRg.EventsRgMembers']['meta_info']


        class EventsRgIccpGroups(object):
            """
            ICCP events for all ICCP Groups
            
            .. attribute:: events_rg_iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`EventsRgIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_rg_iccp_group = YList()
                self.events_rg_iccp_group.parent = self
                self.events_rg_iccp_group.name = 'events_rg_iccp_group'


            class EventsRgIccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: events_rg_bundle_item_iccp_group
                
                	Data for this item
                	**type**\:   :py:class:`EventsRgBundleItemIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.events_rg_bundle_item_iccp_group = BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup()
                    self.events_rg_bundle_item_iccp_group.parent = self


                class EventsRgBundleItemIccpGroup(object):
                    """
                    Data for this item
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-rg-bundle-item-iccp-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup.EventsRgBundleItemIccpGroup']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-rg/Cisco-IOS-XR-bundlemgr-oper:events-rg-iccp-groups/Cisco-IOS-XR-bundlemgr-oper:events-rg-iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.events_rg_bundle_item_iccp_group is not None and self.events_rg_bundle_item_iccp_group._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups.EventsRgIccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-rg/Cisco-IOS-XR-bundlemgr-oper:events-rg-iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_rg_iccp_group is not None:
                    for child_ref in self.events_rg_iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsRg.EventsRgIccpGroups']['meta_info']


        class EventsRgBundles(object):
            """
            Bundle interfaces with ICCP events information
            
            .. attribute:: events_rg_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`EventsRgBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_rg_bundle = YList()
                self.events_rg_bundle.parent = self
                self.events_rg_bundle.name = 'events_rg_bundle'


            class EventsRgBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: events_rg_bundle_ancestor
                
                	Data for this item and its parent bundle
                	**type**\:   :py:class:`EventsRgBundleAncestor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.events_rg_bundle_ancestor = BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor()
                    self.events_rg_bundle_ancestor.parent = self


                class EventsRgBundleAncestor(object):
                    """
                    Data for this item and its parent bundle
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-rg-bundle-ancestor'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle.EventsRgBundleAncestor']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-rg/Cisco-IOS-XR-bundlemgr-oper:events-rg-bundles/Cisco-IOS-XR-bundlemgr-oper:events-rg-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.events_rg_bundle_ancestor is not None and self.events_rg_bundle_ancestor._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles.EventsRgBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-rg/Cisco-IOS-XR-bundlemgr-oper:events-rg-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_rg_bundle is not None:
                    for child_ref in self.events_rg_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsRg.EventsRgBundles']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-rg'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.events_rg_bundles is not None and self.events_rg_bundles._has_data():
                return True

            if self.events_rg_iccp_groups is not None and self.events_rg_iccp_groups._has_data():
                return True

            if self.events_rg_members is not None and self.events_rg_members._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.EventsRg']['meta_info']


    class Lacp(object):
        """
        LACP information for bundles and members
        
        .. attribute:: lacp_bundles
        
        	Bundle interfaces with LACP information
        	**type**\:   :py:class:`LacpBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles>`
        
        .. attribute:: lacp_members
        
        	Member interfaces with LACP information
        	**type**\:   :py:class:`LacpMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.lacp_bundles = BundleInformation.Lacp.LacpBundles()
            self.lacp_bundles.parent = self
            self.lacp_members = BundleInformation.Lacp.LacpMembers()
            self.lacp_members.parent = self


        class LacpBundles(object):
            """
            Bundle interfaces with LACP information
            
            .. attribute:: lacp_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`LacpBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.lacp_bundle = YList()
                self.lacp_bundle.parent = self
                self.lacp_bundle.name = 'lacp_bundle'


            class LacpBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: lacp_bundle_children_members
                
                	Children of bundle with LACP information
                	**type**\:   :py:class:`LacpBundleChildrenMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers>`
                
                .. attribute:: lacp_bundle_descendant
                
                	Data for this item and all its members
                	**type**\:   :py:class:`LacpBundleDescendant <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant>`
                
                .. attribute:: lacp_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`LacpBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.lacp_bundle_children_members = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers()
                    self.lacp_bundle_children_members.parent = self
                    self.lacp_bundle_descendant = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant()
                    self.lacp_bundle_descendant.parent = self
                    self.lacp_bundle_item = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem()
                    self.lacp_bundle_item.parent = self


                class LacpBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: actor_bundle_data
                    
                    	Basic bundle information
                    	**type**\:   :py:class:`ActorBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData>`
                    
                    .. attribute:: actor_operational_key
                    
                    	Operational key of the interface
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: bundle_system_id
                    
                    	System ID for the bundle
                    	**type**\:   :py:class:`BundleSystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.BundleSystemId>`
                    
                    .. attribute:: partner_operational_key
                    
                    	Operational key of the partner
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: partner_system_mac_address
                    
                    	MAC Address used to identify the partner system
                    	**type**\:  str
                    
                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                    
                    .. attribute:: partner_system_priority
                    
                    	Priority of the partner system
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.actor_bundle_data = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData()
                        self.actor_bundle_data.parent = self
                        self.actor_operational_key = None
                        self.bundle_system_id = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.BundleSystemId()
                        self.bundle_system_id.parent = self
                        self.partner_operational_key = None
                        self.partner_system_mac_address = None
                        self.partner_system_priority = None


                    class ActorBundleData(object):
                        """
                        Basic bundle information
                        
                        .. attribute:: active_foreign_member_count
                        
                        	The number of active foreign members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: active_member_count
                        
                        	The number of active local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: available_bandwidth
                        
                        	Bandwidth available to the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: bfd_config
                        
                        	Configuration values for BFD on bundle members
                        	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.BfdConfig>`
                        
                        .. attribute:: bundle_interface_name
                        
                        	Bundle interface name
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: bundle_status
                        
                        	The state of the bundle
                        	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                        
                        .. attribute:: cisco_extensions
                        
                        	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: collector_max_delay
                        
                        	Collector Max Delay
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: configured_bandwidth
                        
                        	Bandwidth configured on the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: configured_foreign_member_count
                        
                        	The number of configured local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: configured_member_count
                        
                        	The number of configured local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: effective_bandwidth
                        
                        	Effective bandwidth on the bundle interface (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group that the bundle is configured to
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: inter_chassis
                        
                        	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                        	**type**\:  bool
                        
                        .. attribute:: ipv4bfd_status
                        
                        	The status of the BFD (IPv4) feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: ipv6bfd_status
                        
                        	The status of the BFD (IPv6) feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: is_active
                        
                        	Indicates the active/standby redundancy state of the device for the bundle
                        	**type**\:  bool
                        
                        .. attribute:: lacp_nonrevertive
                        
                        	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                        	**type**\:  bool
                        
                        .. attribute:: lacp_status
                        
                        	The status of the LACP feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: link_order_status
                        
                        	The status of the link order signaling feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: load_balance_hash_type
                        
                        	The type of hash to use for load balancing
                        	**type**\:  str
                        
                        .. attribute:: load_balance_locality_threshold
                        
                        	The number of links required per rack for localized load balancing
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: mac_address
                        
                        	MAC address of this member
                        	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.MacAddress>`
                        
                        .. attribute:: mac_source
                        
                        	The source of the MAC Address
                        	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                        
                        .. attribute:: mac_source_member
                        
                        	The name of the member that supplied the MAC address
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: maximize_threshold_value_band_width
                        
                        	Attempt to maximize the bundle if bandwidth is below this value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximize_threshold_value_links
                        
                        	Attempt to maximize the bundle if links are below this value
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: maximum_active_links
                        
                        	Maximum number of active links in the bundle
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: maximum_active_links_source
                        
                        	Source of maximum active links value
                        	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                        
                        .. attribute:: minimum_active_links
                        
                        	Minimum number of active links for bundle to go up
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: minimum_bandwidth
                        
                        	Minimum bundle bandwidth for bundle to go up (kbps)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        	**units**\: kbit/s
                        
                        .. attribute:: mlacp_mode
                        
                        	Indicates the mode of the device for the bundle
                        	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                        
                        .. attribute:: mlacp_status
                        
                        	The status of the mLACP feature on the bundle
                        	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                        
                        .. attribute:: primary_member
                        
                        	Primary bundle member (no longer applicable)
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: recovery_delay
                        
                        	Number of seconds to wait before becoming active after recovering from a failure
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        	**units**\: second
                        
                        .. attribute:: singleton
                        
                        	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                        	**type**\:  bool
                        
                        .. attribute:: standby_member_count
                        
                        	The number of standby local members on the bundle
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: suppression_timer
                        
                        	Timer for suppressing bundle state flaps
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: switchover_type
                        
                        	How a switchover of the bundle from this device will occur
                        	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                        
                        .. attribute:: wait_while_timer
                        
                        	The wait while time used for member ports
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.active_foreign_member_count = None
                            self.active_member_count = None
                            self.available_bandwidth = None
                            self.bfd_config = YList()
                            self.bfd_config.parent = self
                            self.bfd_config.name = 'bfd_config'
                            self.bundle_interface_name = None
                            self.bundle_status = None
                            self.cisco_extensions = None
                            self.collector_max_delay = None
                            self.configured_bandwidth = None
                            self.configured_foreign_member_count = None
                            self.configured_member_count = None
                            self.effective_bandwidth = None
                            self.iccp_group_id = None
                            self.inter_chassis = None
                            self.ipv4bfd_status = None
                            self.ipv6bfd_status = None
                            self.is_active = None
                            self.lacp_nonrevertive = None
                            self.lacp_status = None
                            self.link_order_status = None
                            self.load_balance_hash_type = None
                            self.load_balance_locality_threshold = None
                            self.mac_address = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.MacAddress()
                            self.mac_address.parent = self
                            self.mac_source = None
                            self.mac_source_member = None
                            self.maximize_threshold_value_band_width = None
                            self.maximize_threshold_value_links = None
                            self.maximum_active_links = None
                            self.maximum_active_links_source = None
                            self.minimum_active_links = None
                            self.minimum_bandwidth = None
                            self.mlacp_mode = None
                            self.mlacp_status = None
                            self.primary_member = None
                            self.recovery_delay = None
                            self.singleton = None
                            self.standby_member_count = None
                            self.suppression_timer = None
                            self.switchover_type = None
                            self.wait_while_timer = None


                        class MacAddress(object):
                            """
                            MAC address of this member
                            
                            .. attribute:: address
                            
                            	MAC address
                            	**type**\:  str
                            
                            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.MacAddress']['meta_info']


                        class BfdConfig(object):
                            """
                            Configuration values for BFD on bundle members
                            
                            .. attribute:: bundle_status
                            
                            	Status of BFD on the bundle
                            	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                            
                            .. attribute:: destination_address
                            
                            	Configured destination address for BFD session
                            	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.BfdConfig.DestinationAddress>`
                            
                            .. attribute:: fast_detect
                            
                            	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                            	**type**\:  bool
                            
                            .. attribute:: mode_info
                            
                            	Standard used for per\-member BFD
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: nbr_unconfig_timer
                            
                            	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_echo_min_interval
                            
                            	Preferred echo minimum interval for the BFD session (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_min_interval
                            
                            	Preferred minimum interval for the BFD session (ms)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pref_multiplier
                            
                            	Preferred multiplier for the BFD session
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: start_timer
                            
                            	Time to wait on session start before declaring DOWN
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_status = None
                                self.destination_address = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.BfdConfig.DestinationAddress()
                                self.destination_address.parent = self
                                self.fast_detect = None
                                self.mode_info = None
                                self.nbr_unconfig_timer = None
                                self.pref_echo_min_interval = None
                                self.pref_min_interval = None
                                self.pref_multiplier = None
                                self.start_timer = None


                            class DestinationAddress(object):
                                """
                                Configured destination address for BFD session
                                
                                .. attribute:: af
                                
                                	AF
                                	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                                
                                .. attribute:: ipv4
                                
                                	IPv4 address type
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: ipv6
                                
                                	IPv6 address type
                                	**type**\:  str
                                
                                	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.af = None
                                    self.ipv4 = None
                                    self.ipv6 = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.af is not None:
                                        return True

                                    if self.ipv4 is not None:
                                        return True

                                    if self.ipv6 is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.BfdConfig.DestinationAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_status is not None:
                                    return True

                                if self.destination_address is not None and self.destination_address._has_data():
                                    return True

                                if self.fast_detect is not None:
                                    return True

                                if self.mode_info is not None:
                                    return True

                                if self.nbr_unconfig_timer is not None:
                                    return True

                                if self.pref_echo_min_interval is not None:
                                    return True

                                if self.pref_min_interval is not None:
                                    return True

                                if self.pref_multiplier is not None:
                                    return True

                                if self.start_timer is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData.BfdConfig']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.active_foreign_member_count is not None:
                                return True

                            if self.active_member_count is not None:
                                return True

                            if self.available_bandwidth is not None:
                                return True

                            if self.bfd_config is not None:
                                for child_ref in self.bfd_config:
                                    if child_ref._has_data():
                                        return True

                            if self.bundle_interface_name is not None:
                                return True

                            if self.bundle_status is not None:
                                return True

                            if self.cisco_extensions is not None:
                                return True

                            if self.collector_max_delay is not None:
                                return True

                            if self.configured_bandwidth is not None:
                                return True

                            if self.configured_foreign_member_count is not None:
                                return True

                            if self.configured_member_count is not None:
                                return True

                            if self.effective_bandwidth is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.inter_chassis is not None:
                                return True

                            if self.ipv4bfd_status is not None:
                                return True

                            if self.ipv6bfd_status is not None:
                                return True

                            if self.is_active is not None:
                                return True

                            if self.lacp_nonrevertive is not None:
                                return True

                            if self.lacp_status is not None:
                                return True

                            if self.link_order_status is not None:
                                return True

                            if self.load_balance_hash_type is not None:
                                return True

                            if self.load_balance_locality_threshold is not None:
                                return True

                            if self.mac_address is not None and self.mac_address._has_data():
                                return True

                            if self.mac_source is not None:
                                return True

                            if self.mac_source_member is not None:
                                return True

                            if self.maximize_threshold_value_band_width is not None:
                                return True

                            if self.maximize_threshold_value_links is not None:
                                return True

                            if self.maximum_active_links is not None:
                                return True

                            if self.maximum_active_links_source is not None:
                                return True

                            if self.minimum_active_links is not None:
                                return True

                            if self.minimum_bandwidth is not None:
                                return True

                            if self.mlacp_mode is not None:
                                return True

                            if self.mlacp_status is not None:
                                return True

                            if self.primary_member is not None:
                                return True

                            if self.recovery_delay is not None:
                                return True

                            if self.singleton is not None:
                                return True

                            if self.standby_member_count is not None:
                                return True

                            if self.suppression_timer is not None:
                                return True

                            if self.switchover_type is not None:
                                return True

                            if self.wait_while_timer is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.ActorBundleData']['meta_info']


                    class BundleSystemId(object):
                        """
                        System ID for the bundle
                        
                        .. attribute:: system_mac_addr
                        
                        	MAC Address used to identify the system
                        	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.BundleSystemId.SystemMacAddr>`
                        
                        .. attribute:: system_prio
                        
                        	Priority of the system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.system_mac_addr = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.BundleSystemId.SystemMacAddr()
                            self.system_mac_addr.parent = self
                            self.system_prio = None


                        class SystemMacAddr(object):
                            """
                            MAC Address used to identify the system
                            
                            .. attribute:: macaddr
                            
                            	macaddr
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.macaddr = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.macaddr is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.BundleSystemId.SystemMacAddr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-system-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                return True

                            if self.system_prio is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem.BundleSystemId']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.actor_bundle_data is not None and self.actor_bundle_data._has_data():
                            return True

                        if self.actor_operational_key is not None:
                            return True

                        if self.bundle_system_id is not None and self.bundle_system_id._has_data():
                            return True

                        if self.partner_operational_key is not None:
                            return True

                        if self.partner_system_mac_address is not None:
                            return True

                        if self.partner_system_priority is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleItem']['meta_info']


                class LacpBundleDescendant(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: bundle_data
                    
                    	Bundle information
                    	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData>`
                    
                    .. attribute:: member_data
                    
                    	Member information
                    	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_data = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData()
                        self.bundle_data.parent = self
                        self.member_data = YList()
                        self.member_data.parent = self
                        self.member_data.name = 'member_data'


                    class BundleData(object):
                        """
                        Bundle information
                        
                        .. attribute:: actor_bundle_data
                        
                        	Basic bundle information
                        	**type**\:   :py:class:`ActorBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData>`
                        
                        .. attribute:: actor_operational_key
                        
                        	Operational key of the interface
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: bundle_system_id
                        
                        	System ID for the bundle
                        	**type**\:   :py:class:`BundleSystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.BundleSystemId>`
                        
                        .. attribute:: partner_operational_key
                        
                        	Operational key of the partner
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_system_mac_address
                        
                        	MAC Address used to identify the partner system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: partner_system_priority
                        
                        	Priority of the partner system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.actor_bundle_data = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData()
                            self.actor_bundle_data.parent = self
                            self.actor_operational_key = None
                            self.bundle_system_id = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.BundleSystemId()
                            self.bundle_system_id.parent = self
                            self.partner_operational_key = None
                            self.partner_system_mac_address = None
                            self.partner_system_priority = None


                        class ActorBundleData(object):
                            """
                            Basic bundle information
                            
                            .. attribute:: active_foreign_member_count
                            
                            	The number of active foreign members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: active_member_count
                            
                            	The number of active local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: available_bandwidth
                            
                            	Bandwidth available to the bundle interface (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: bfd_config
                            
                            	Configuration values for BFD on bundle members
                            	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.BfdConfig>`
                            
                            .. attribute:: bundle_interface_name
                            
                            	Bundle interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: bundle_status
                            
                            	The state of the bundle
                            	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                            
                            .. attribute:: cisco_extensions
                            
                            	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                            	**type**\:  bool
                            
                            .. attribute:: collector_max_delay
                            
                            	Collector Max Delay
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: configured_bandwidth
                            
                            	Bandwidth configured on the bundle interface (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: configured_foreign_member_count
                            
                            	The number of configured local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: configured_member_count
                            
                            	The number of configured local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: effective_bandwidth
                            
                            	Effective bandwidth on the bundle interface (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group that the bundle is configured to
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: inter_chassis
                            
                            	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                            	**type**\:  bool
                            
                            .. attribute:: ipv4bfd_status
                            
                            	The status of the BFD (IPv4) feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: ipv6bfd_status
                            
                            	The status of the BFD (IPv6) feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: is_active
                            
                            	Indicates the active/standby redundancy state of the device for the bundle
                            	**type**\:  bool
                            
                            .. attribute:: lacp_nonrevertive
                            
                            	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                            	**type**\:  bool
                            
                            .. attribute:: lacp_status
                            
                            	The status of the LACP feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: link_order_status
                            
                            	The status of the link order signaling feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: load_balance_hash_type
                            
                            	The type of hash to use for load balancing
                            	**type**\:  str
                            
                            .. attribute:: load_balance_locality_threshold
                            
                            	The number of links required per rack for localized load balancing
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: mac_address
                            
                            	MAC address of this member
                            	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.MacAddress>`
                            
                            .. attribute:: mac_source
                            
                            	The source of the MAC Address
                            	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                            
                            .. attribute:: mac_source_member
                            
                            	The name of the member that supplied the MAC address
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: maximize_threshold_value_band_width
                            
                            	Attempt to maximize the bundle if bandwidth is below this value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximize_threshold_value_links
                            
                            	Attempt to maximize the bundle if links are below this value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_active_links
                            
                            	Maximum number of active links in the bundle
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: maximum_active_links_source
                            
                            	Source of maximum active links value
                            	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                            
                            .. attribute:: minimum_active_links
                            
                            	Minimum number of active links for bundle to go up
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: minimum_bandwidth
                            
                            	Minimum bundle bandwidth for bundle to go up (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: mlacp_mode
                            
                            	Indicates the mode of the device for the bundle
                            	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                            
                            .. attribute:: mlacp_status
                            
                            	The status of the mLACP feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: primary_member
                            
                            	Primary bundle member (no longer applicable)
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: recovery_delay
                            
                            	Number of seconds to wait before becoming active after recovering from a failure
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            	**units**\: second
                            
                            .. attribute:: singleton
                            
                            	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                            	**type**\:  bool
                            
                            .. attribute:: standby_member_count
                            
                            	The number of standby local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: suppression_timer
                            
                            	Timer for suppressing bundle state flaps
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: switchover_type
                            
                            	How a switchover of the bundle from this device will occur
                            	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                            
                            .. attribute:: wait_while_timer
                            
                            	The wait while time used for member ports
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.active_foreign_member_count = None
                                self.active_member_count = None
                                self.available_bandwidth = None
                                self.bfd_config = YList()
                                self.bfd_config.parent = self
                                self.bfd_config.name = 'bfd_config'
                                self.bundle_interface_name = None
                                self.bundle_status = None
                                self.cisco_extensions = None
                                self.collector_max_delay = None
                                self.configured_bandwidth = None
                                self.configured_foreign_member_count = None
                                self.configured_member_count = None
                                self.effective_bandwidth = None
                                self.iccp_group_id = None
                                self.inter_chassis = None
                                self.ipv4bfd_status = None
                                self.ipv6bfd_status = None
                                self.is_active = None
                                self.lacp_nonrevertive = None
                                self.lacp_status = None
                                self.link_order_status = None
                                self.load_balance_hash_type = None
                                self.load_balance_locality_threshold = None
                                self.mac_address = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.MacAddress()
                                self.mac_address.parent = self
                                self.mac_source = None
                                self.mac_source_member = None
                                self.maximize_threshold_value_band_width = None
                                self.maximize_threshold_value_links = None
                                self.maximum_active_links = None
                                self.maximum_active_links_source = None
                                self.minimum_active_links = None
                                self.minimum_bandwidth = None
                                self.mlacp_mode = None
                                self.mlacp_status = None
                                self.primary_member = None
                                self.recovery_delay = None
                                self.singleton = None
                                self.standby_member_count = None
                                self.suppression_timer = None
                                self.switchover_type = None
                                self.wait_while_timer = None


                            class MacAddress(object):
                                """
                                MAC address of this member
                                
                                .. attribute:: address
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.MacAddress']['meta_info']


                            class BfdConfig(object):
                                """
                                Configuration values for BFD on bundle members
                                
                                .. attribute:: bundle_status
                                
                                	Status of BFD on the bundle
                                	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                                
                                .. attribute:: destination_address
                                
                                	Configured destination address for BFD session
                                	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.BfdConfig.DestinationAddress>`
                                
                                .. attribute:: fast_detect
                                
                                	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                                	**type**\:  bool
                                
                                .. attribute:: mode_info
                                
                                	Standard used for per\-member BFD
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: nbr_unconfig_timer
                                
                                	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pref_echo_min_interval
                                
                                	Preferred echo minimum interval for the BFD session (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pref_min_interval
                                
                                	Preferred minimum interval for the BFD session (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pref_multiplier
                                
                                	Preferred multiplier for the BFD session
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: start_timer
                                
                                	Time to wait on session start before declaring DOWN
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_status = None
                                    self.destination_address = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.BfdConfig.DestinationAddress()
                                    self.destination_address.parent = self
                                    self.fast_detect = None
                                    self.mode_info = None
                                    self.nbr_unconfig_timer = None
                                    self.pref_echo_min_interval = None
                                    self.pref_min_interval = None
                                    self.pref_multiplier = None
                                    self.start_timer = None


                                class DestinationAddress(object):
                                    """
                                    Configured destination address for BFD session
                                    
                                    .. attribute:: af
                                    
                                    	AF
                                    	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                                    
                                    .. attribute:: ipv4
                                    
                                    	IPv4 address type
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ipv6
                                    
                                    	IPv6 address type
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.af = None
                                        self.ipv4 = None
                                        self.ipv6 = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.af is not None:
                                            return True

                                        if self.ipv4 is not None:
                                            return True

                                        if self.ipv6 is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.BfdConfig.DestinationAddress']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_status is not None:
                                        return True

                                    if self.destination_address is not None and self.destination_address._has_data():
                                        return True

                                    if self.fast_detect is not None:
                                        return True

                                    if self.mode_info is not None:
                                        return True

                                    if self.nbr_unconfig_timer is not None:
                                        return True

                                    if self.pref_echo_min_interval is not None:
                                        return True

                                    if self.pref_min_interval is not None:
                                        return True

                                    if self.pref_multiplier is not None:
                                        return True

                                    if self.start_timer is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData.BfdConfig']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.active_foreign_member_count is not None:
                                    return True

                                if self.active_member_count is not None:
                                    return True

                                if self.available_bandwidth is not None:
                                    return True

                                if self.bfd_config is not None:
                                    for child_ref in self.bfd_config:
                                        if child_ref._has_data():
                                            return True

                                if self.bundle_interface_name is not None:
                                    return True

                                if self.bundle_status is not None:
                                    return True

                                if self.cisco_extensions is not None:
                                    return True

                                if self.collector_max_delay is not None:
                                    return True

                                if self.configured_bandwidth is not None:
                                    return True

                                if self.configured_foreign_member_count is not None:
                                    return True

                                if self.configured_member_count is not None:
                                    return True

                                if self.effective_bandwidth is not None:
                                    return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.inter_chassis is not None:
                                    return True

                                if self.ipv4bfd_status is not None:
                                    return True

                                if self.ipv6bfd_status is not None:
                                    return True

                                if self.is_active is not None:
                                    return True

                                if self.lacp_nonrevertive is not None:
                                    return True

                                if self.lacp_status is not None:
                                    return True

                                if self.link_order_status is not None:
                                    return True

                                if self.load_balance_hash_type is not None:
                                    return True

                                if self.load_balance_locality_threshold is not None:
                                    return True

                                if self.mac_address is not None and self.mac_address._has_data():
                                    return True

                                if self.mac_source is not None:
                                    return True

                                if self.mac_source_member is not None:
                                    return True

                                if self.maximize_threshold_value_band_width is not None:
                                    return True

                                if self.maximize_threshold_value_links is not None:
                                    return True

                                if self.maximum_active_links is not None:
                                    return True

                                if self.maximum_active_links_source is not None:
                                    return True

                                if self.minimum_active_links is not None:
                                    return True

                                if self.minimum_bandwidth is not None:
                                    return True

                                if self.mlacp_mode is not None:
                                    return True

                                if self.mlacp_status is not None:
                                    return True

                                if self.primary_member is not None:
                                    return True

                                if self.recovery_delay is not None:
                                    return True

                                if self.singleton is not None:
                                    return True

                                if self.standby_member_count is not None:
                                    return True

                                if self.suppression_timer is not None:
                                    return True

                                if self.switchover_type is not None:
                                    return True

                                if self.wait_while_timer is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.ActorBundleData']['meta_info']


                        class BundleSystemId(object):
                            """
                            System ID for the bundle
                            
                            .. attribute:: system_mac_addr
                            
                            	MAC Address used to identify the system
                            	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.BundleSystemId.SystemMacAddr>`
                            
                            .. attribute:: system_prio
                            
                            	Priority of the system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.system_mac_addr = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.BundleSystemId.SystemMacAddr()
                                self.system_mac_addr.parent = self
                                self.system_prio = None


                            class SystemMacAddr(object):
                                """
                                MAC Address used to identify the system
                                
                                .. attribute:: macaddr
                                
                                	macaddr
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.macaddr = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.macaddr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.BundleSystemId.SystemMacAddr']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-system-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                    return True

                                if self.system_prio is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData.BundleSystemId']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.actor_bundle_data is not None and self.actor_bundle_data._has_data():
                                return True

                            if self.actor_operational_key is not None:
                                return True

                            if self.bundle_system_id is not None and self.bundle_system_id._has_data():
                                return True

                            if self.partner_operational_key is not None:
                                return True

                            if self.partner_system_mac_address is not None:
                                return True

                            if self.partner_system_priority is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.BundleData']['meta_info']


                    class MemberData(object):
                        """
                        Member information
                        
                        .. attribute:: actor_churn_state
                        
                        	State of the Churn state machine for the Actor
                        	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                        
                        .. attribute:: actor_info
                        
                        	LACP information for the port from the actor
                        	**type**\:   :py:class:`ActorInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo>`
                        
                        .. attribute:: additional_info
                        
                        	Additional information for the link
                        	**type**\:   :py:class:`AdditionalInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo>`
                        
                        .. attribute:: attached_aggregator_id
                        
                        	MIB ifindex of attached bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: iccp_group_id
                        
                        	The ID of the ICCP group that the link is configured on
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mux_state
                        
                        	State of the Mux state machine
                        	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                        
                        .. attribute:: partner_churn_state
                        
                        	State of the Churn state machine for the Partner
                        	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                        
                        .. attribute:: partner_info
                        
                        	LACP information for the port from the partner
                        	**type**\:   :py:class:`PartnerInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo>`
                        
                        .. attribute:: period_state
                        
                        	State of the Period state machine
                        	**type**\:   :py:class:`LacpPeriodStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpPeriodStateEnum>`
                        
                        .. attribute:: receive_machine_state
                        
                        	State of the RX state machine
                        	**type**\:   :py:class:`RxstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.RxstatesEnum>`
                        
                        .. attribute:: selected_aggregator_id
                        
                        	MIB ifindex of selected bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: selection_state
                        
                        	State of the Selection Logic state machine
                        	**type**\:   :py:class:`LacpSelStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpSelStateEnum>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.actor_churn_state = None
                            self.actor_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo()
                            self.actor_info.parent = self
                            self.additional_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo()
                            self.additional_info.parent = self
                            self.attached_aggregator_id = None
                            self.iccp_group_id = None
                            self.mux_state = None
                            self.partner_churn_state = None
                            self.partner_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo()
                            self.partner_info.parent = self
                            self.period_state = None
                            self.receive_machine_state = None
                            self.selected_aggregator_id = None
                            self.selection_state = None


                        class ActorInfo(object):
                            """
                            LACP information for the port from the actor
                            
                            .. attribute:: port_info
                            
                            	LACP parameters for this device
                            	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo>`
                            
                            .. attribute:: tx_period
                            
                            	Time (in ms) between transmitting LACPDUs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.port_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo()
                                self.port_info.parent = self
                                self.tx_period = None


                            class PortInfo(object):
                                """
                                LACP parameters for this device
                                
                                .. attribute:: key
                                
                                	key
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port
                                
                                	port
                                	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.Port>`
                                
                                .. attribute:: state
                                
                                	state
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: system
                                
                                	system
                                	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.System>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.key = None
                                    self.port = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.Port()
                                    self.port.parent = self
                                    self.state = None
                                    self.system = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.System()
                                    self.system.parent = self


                                class System(object):
                                    """
                                    system
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.System.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.System.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.System']['meta_info']


                                class Port(object):
                                    """
                                    port
                                    
                                    .. attribute:: link_number
                                    
                                    	link number
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_priority
                                    
                                    	link priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_number = None
                                        self.link_priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_number is not None:
                                            return True

                                        if self.link_priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo.Port']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.key is not None:
                                        return True

                                    if self.port is not None and self.port._has_data():
                                        return True

                                    if self.state is not None:
                                        return True

                                    if self.system is not None and self.system._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo.PortInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.port_info is not None and self.port_info._has_data():
                                    return True

                                if self.tx_period is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.ActorInfo']['meta_info']


                        class PartnerInfo(object):
                            """
                            LACP information for the port from the partner
                            
                            .. attribute:: port_info
                            
                            	LACP parameters for this device
                            	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo>`
                            
                            .. attribute:: tx_period
                            
                            	Time (in ms) between transmitting LACPDUs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.port_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo()
                                self.port_info.parent = self
                                self.tx_period = None


                            class PortInfo(object):
                                """
                                LACP parameters for this device
                                
                                .. attribute:: key
                                
                                	key
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port
                                
                                	port
                                	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.Port>`
                                
                                .. attribute:: state
                                
                                	state
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: system
                                
                                	system
                                	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.System>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.key = None
                                    self.port = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.Port()
                                    self.port.parent = self
                                    self.state = None
                                    self.system = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.System()
                                    self.system.parent = self


                                class System(object):
                                    """
                                    system
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.System.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.System.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.System']['meta_info']


                                class Port(object):
                                    """
                                    port
                                    
                                    .. attribute:: link_number
                                    
                                    	link number
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_priority
                                    
                                    	link priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_number = None
                                        self.link_priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_number is not None:
                                            return True

                                        if self.link_priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo.Port']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.key is not None:
                                        return True

                                    if self.port is not None and self.port._has_data():
                                        return True

                                    if self.state is not None:
                                        return True

                                    if self.system is not None and self.system._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo.PortInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:partner-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.port_info is not None and self.port_info._has_data():
                                    return True

                                if self.tx_period is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.PartnerInfo']['meta_info']


                        class AdditionalInfo(object):
                            """
                            Additional information for the link
                            
                            .. attribute:: foreign
                            
                            	Information for a foreign port
                            	**type**\:   :py:class:`Foreign <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo.Foreign>`
                            
                            .. attribute:: local
                            
                            	Information for a local port
                            	**type**\:   :py:class:`Local <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo.Local>`
                            
                            .. attribute:: mbr_type
                            
                            	MbrType
                            	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.foreign = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo.Foreign()
                                self.foreign.parent = self
                                self.local = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo.Local()
                                self.local.parent = self
                                self.mbr_type = None


                            class Local(object):
                                """
                                Information for a local port
                                
                                .. attribute:: interface_handle
                                
                                	Member's interface handle
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_handle = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:local'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_handle is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo.Local']['meta_info']


                            class Foreign(object):
                                """
                                Information for a foreign port
                                
                                .. attribute:: member_name
                                
                                	Member's (short form) name
                                	**type**\:  str
                                
                                .. attribute:: peer_address
                                
                                	The LDP address of the device that the link is configured on
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.member_name = None
                                    self.peer_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:foreign'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.member_name is not None:
                                        return True

                                    if self.peer_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo.Foreign']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:additional-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.foreign is not None and self.foreign._has_data():
                                    return True

                                if self.local is not None and self.local._has_data():
                                    return True

                                if self.mbr_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData.AdditionalInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.actor_churn_state is not None:
                                return True

                            if self.actor_info is not None and self.actor_info._has_data():
                                return True

                            if self.additional_info is not None and self.additional_info._has_data():
                                return True

                            if self.attached_aggregator_id is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.mux_state is not None:
                                return True

                            if self.partner_churn_state is not None:
                                return True

                            if self.partner_info is not None and self.partner_info._has_data():
                                return True

                            if self.period_state is not None:
                                return True

                            if self.receive_machine_state is not None:
                                return True

                            if self.selected_aggregator_id is not None:
                                return True

                            if self.selection_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant.MemberData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-descendant'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_data is not None and self.bundle_data._has_data():
                            return True

                        if self.member_data is not None:
                            for child_ref in self.member_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleDescendant']['meta_info']


                class LacpBundleChildrenMembers(object):
                    """
                    Children of bundle with LACP information
                    
                    .. attribute:: lacp_bundle_children_member
                    
                    	Bundle member item with LACP information
                    	**type**\: list of    :py:class:`LacpBundleChildrenMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.lacp_bundle_children_member = YList()
                        self.lacp_bundle_children_member.parent = self
                        self.lacp_bundle_children_member.name = 'lacp_bundle_children_member'


                    class LacpBundleChildrenMember(object):
                        """
                        Bundle member item with LACP information
                        
                        .. attribute:: member_interface  <key>
                        
                        	Member interface
                        	**type**\:  str
                        
                        .. attribute:: actor_churn_state
                        
                        	State of the Churn state machine for the Actor
                        	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                        
                        .. attribute:: actor_info
                        
                        	LACP information for the port from the actor
                        	**type**\:   :py:class:`ActorInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo>`
                        
                        .. attribute:: additional_info
                        
                        	Additional information for the link
                        	**type**\:   :py:class:`AdditionalInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo>`
                        
                        .. attribute:: attached_aggregator_id
                        
                        	MIB ifindex of attached bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: iccp_group_id
                        
                        	The ID of the ICCP group that the link is configured on
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mux_state
                        
                        	State of the Mux state machine
                        	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                        
                        .. attribute:: partner_churn_state
                        
                        	State of the Churn state machine for the Partner
                        	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                        
                        .. attribute:: partner_info
                        
                        	LACP information for the port from the partner
                        	**type**\:   :py:class:`PartnerInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo>`
                        
                        .. attribute:: period_state
                        
                        	State of the Period state machine
                        	**type**\:   :py:class:`LacpPeriodStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpPeriodStateEnum>`
                        
                        .. attribute:: receive_machine_state
                        
                        	State of the RX state machine
                        	**type**\:   :py:class:`RxstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.RxstatesEnum>`
                        
                        .. attribute:: selected_aggregator_id
                        
                        	MIB ifindex of selected bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: selection_state
                        
                        	State of the Selection Logic state machine
                        	**type**\:   :py:class:`LacpSelStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpSelStateEnum>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interface = None
                            self.actor_churn_state = None
                            self.actor_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo()
                            self.actor_info.parent = self
                            self.additional_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo()
                            self.additional_info.parent = self
                            self.attached_aggregator_id = None
                            self.iccp_group_id = None
                            self.mux_state = None
                            self.partner_churn_state = None
                            self.partner_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo()
                            self.partner_info.parent = self
                            self.period_state = None
                            self.receive_machine_state = None
                            self.selected_aggregator_id = None
                            self.selection_state = None


                        class ActorInfo(object):
                            """
                            LACP information for the port from the actor
                            
                            .. attribute:: port_info
                            
                            	LACP parameters for this device
                            	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo>`
                            
                            .. attribute:: tx_period
                            
                            	Time (in ms) between transmitting LACPDUs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.port_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo()
                                self.port_info.parent = self
                                self.tx_period = None


                            class PortInfo(object):
                                """
                                LACP parameters for this device
                                
                                .. attribute:: key
                                
                                	key
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port
                                
                                	port
                                	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.Port>`
                                
                                .. attribute:: state
                                
                                	state
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: system
                                
                                	system
                                	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.System>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.key = None
                                    self.port = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.Port()
                                    self.port.parent = self
                                    self.state = None
                                    self.system = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.System()
                                    self.system.parent = self


                                class System(object):
                                    """
                                    system
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.System.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.System.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.System']['meta_info']


                                class Port(object):
                                    """
                                    port
                                    
                                    .. attribute:: link_number
                                    
                                    	link number
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_priority
                                    
                                    	link priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_number = None
                                        self.link_priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_number is not None:
                                            return True

                                        if self.link_priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo.Port']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.key is not None:
                                        return True

                                    if self.port is not None and self.port._has_data():
                                        return True

                                    if self.state is not None:
                                        return True

                                    if self.system is not None and self.system._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo.PortInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.port_info is not None and self.port_info._has_data():
                                    return True

                                if self.tx_period is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.ActorInfo']['meta_info']


                        class PartnerInfo(object):
                            """
                            LACP information for the port from the partner
                            
                            .. attribute:: port_info
                            
                            	LACP parameters for this device
                            	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo>`
                            
                            .. attribute:: tx_period
                            
                            	Time (in ms) between transmitting LACPDUs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.port_info = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo()
                                self.port_info.parent = self
                                self.tx_period = None


                            class PortInfo(object):
                                """
                                LACP parameters for this device
                                
                                .. attribute:: key
                                
                                	key
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port
                                
                                	port
                                	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.Port>`
                                
                                .. attribute:: state
                                
                                	state
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: system
                                
                                	system
                                	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.System>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.key = None
                                    self.port = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.Port()
                                    self.port.parent = self
                                    self.state = None
                                    self.system = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.System()
                                    self.system.parent = self


                                class System(object):
                                    """
                                    system
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.System.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.System.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.System']['meta_info']


                                class Port(object):
                                    """
                                    port
                                    
                                    .. attribute:: link_number
                                    
                                    	link number
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_priority
                                    
                                    	link priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_number = None
                                        self.link_priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_number is not None:
                                            return True

                                        if self.link_priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo.Port']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.key is not None:
                                        return True

                                    if self.port is not None and self.port._has_data():
                                        return True

                                    if self.state is not None:
                                        return True

                                    if self.system is not None and self.system._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo.PortInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:partner-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.port_info is not None and self.port_info._has_data():
                                    return True

                                if self.tx_period is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.PartnerInfo']['meta_info']


                        class AdditionalInfo(object):
                            """
                            Additional information for the link
                            
                            .. attribute:: foreign
                            
                            	Information for a foreign port
                            	**type**\:   :py:class:`Foreign <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo.Foreign>`
                            
                            .. attribute:: local
                            
                            	Information for a local port
                            	**type**\:   :py:class:`Local <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo.Local>`
                            
                            .. attribute:: mbr_type
                            
                            	MbrType
                            	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.foreign = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo.Foreign()
                                self.foreign.parent = self
                                self.local = BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo.Local()
                                self.local.parent = self
                                self.mbr_type = None


                            class Local(object):
                                """
                                Information for a local port
                                
                                .. attribute:: interface_handle
                                
                                	Member's interface handle
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_handle = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:local'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_handle is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo.Local']['meta_info']


                            class Foreign(object):
                                """
                                Information for a foreign port
                                
                                .. attribute:: member_name
                                
                                	Member's (short form) name
                                	**type**\:  str
                                
                                .. attribute:: peer_address
                                
                                	The LDP address of the device that the link is configured on
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.member_name = None
                                    self.peer_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:foreign'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.member_name is not None:
                                        return True

                                    if self.peer_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo.Foreign']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:additional-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.foreign is not None and self.foreign._has_data():
                                    return True

                                if self.local is not None and self.local._has_data():
                                    return True

                                if self.mbr_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember.AdditionalInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.member_interface is None:
                                raise YPYModelError('Key property member_interface is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-children-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interface is not None:
                                return True

                            if self.actor_churn_state is not None:
                                return True

                            if self.actor_info is not None and self.actor_info._has_data():
                                return True

                            if self.additional_info is not None and self.additional_info._has_data():
                                return True

                            if self.attached_aggregator_id is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.mux_state is not None:
                                return True

                            if self.partner_churn_state is not None:
                                return True

                            if self.partner_info is not None and self.partner_info._has_data():
                                return True

                            if self.period_state is not None:
                                return True

                            if self.receive_machine_state is not None:
                                return True

                            if self.selected_aggregator_id is not None:
                                return True

                            if self.selection_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers.LacpBundleChildrenMember']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-children-members'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.lacp_bundle_children_member is not None:
                            for child_ref in self.lacp_bundle_children_member:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle.LacpBundleChildrenMembers']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:lacp/Cisco-IOS-XR-bundlemgr-oper:lacp-bundles/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.lacp_bundle_children_members is not None and self.lacp_bundle_children_members._has_data():
                        return True

                    if self.lacp_bundle_descendant is not None and self.lacp_bundle_descendant._has_data():
                        return True

                    if self.lacp_bundle_item is not None and self.lacp_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Lacp.LacpBundles.LacpBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:lacp/Cisco-IOS-XR-bundlemgr-oper:lacp-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.lacp_bundle is not None:
                    for child_ref in self.lacp_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Lacp.LacpBundles']['meta_info']


        class LacpMembers(object):
            """
            Member interfaces with LACP information
            
            .. attribute:: lacp_member
            
            	Member interface
            	**type**\: list of    :py:class:`LacpMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.lacp_member = YList()
                self.lacp_member.parent = self
                self.lacp_member.name = 'lacp_member'


            class LacpMember(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: lacp_member_ancestor
                
                	Data for this item and its parent bundle
                	**type**\:   :py:class:`LacpMemberAncestor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor>`
                
                .. attribute:: lacp_member_item
                
                	Data for this item
                	**type**\:   :py:class:`LacpMemberItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.lacp_member_ancestor = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor()
                    self.lacp_member_ancestor.parent = self
                    self.lacp_member_item = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem()
                    self.lacp_member_item.parent = self


                class LacpMemberAncestor(object):
                    """
                    Data for this item and its parent bundle
                    
                    .. attribute:: bundle_data
                    
                    	Bundle information
                    	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData>`
                    
                    .. attribute:: member_data
                    
                    	Member information
                    	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_data = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData()
                        self.bundle_data.parent = self
                        self.member_data = YList()
                        self.member_data.parent = self
                        self.member_data.name = 'member_data'


                    class BundleData(object):
                        """
                        Bundle information
                        
                        .. attribute:: actor_bundle_data
                        
                        	Basic bundle information
                        	**type**\:   :py:class:`ActorBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData>`
                        
                        .. attribute:: actor_operational_key
                        
                        	Operational key of the interface
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: bundle_system_id
                        
                        	System ID for the bundle
                        	**type**\:   :py:class:`BundleSystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.BundleSystemId>`
                        
                        .. attribute:: partner_operational_key
                        
                        	Operational key of the partner
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_system_mac_address
                        
                        	MAC Address used to identify the partner system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: partner_system_priority
                        
                        	Priority of the partner system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.actor_bundle_data = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData()
                            self.actor_bundle_data.parent = self
                            self.actor_operational_key = None
                            self.bundle_system_id = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.BundleSystemId()
                            self.bundle_system_id.parent = self
                            self.partner_operational_key = None
                            self.partner_system_mac_address = None
                            self.partner_system_priority = None


                        class ActorBundleData(object):
                            """
                            Basic bundle information
                            
                            .. attribute:: active_foreign_member_count
                            
                            	The number of active foreign members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: active_member_count
                            
                            	The number of active local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: available_bandwidth
                            
                            	Bandwidth available to the bundle interface (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: bfd_config
                            
                            	Configuration values for BFD on bundle members
                            	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.BfdConfig>`
                            
                            .. attribute:: bundle_interface_name
                            
                            	Bundle interface name
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: bundle_status
                            
                            	The state of the bundle
                            	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                            
                            .. attribute:: cisco_extensions
                            
                            	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                            	**type**\:  bool
                            
                            .. attribute:: collector_max_delay
                            
                            	Collector Max Delay
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: configured_bandwidth
                            
                            	Bandwidth configured on the bundle interface (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: configured_foreign_member_count
                            
                            	The number of configured local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: configured_member_count
                            
                            	The number of configured local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: effective_bandwidth
                            
                            	Effective bandwidth on the bundle interface (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group that the bundle is configured to
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: inter_chassis
                            
                            	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                            	**type**\:  bool
                            
                            .. attribute:: ipv4bfd_status
                            
                            	The status of the BFD (IPv4) feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: ipv6bfd_status
                            
                            	The status of the BFD (IPv6) feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: is_active
                            
                            	Indicates the active/standby redundancy state of the device for the bundle
                            	**type**\:  bool
                            
                            .. attribute:: lacp_nonrevertive
                            
                            	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                            	**type**\:  bool
                            
                            .. attribute:: lacp_status
                            
                            	The status of the LACP feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: link_order_status
                            
                            	The status of the link order signaling feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: load_balance_hash_type
                            
                            	The type of hash to use for load balancing
                            	**type**\:  str
                            
                            .. attribute:: load_balance_locality_threshold
                            
                            	The number of links required per rack for localized load balancing
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: mac_address
                            
                            	MAC address of this member
                            	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.MacAddress>`
                            
                            .. attribute:: mac_source
                            
                            	The source of the MAC Address
                            	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                            
                            .. attribute:: mac_source_member
                            
                            	The name of the member that supplied the MAC address
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: maximize_threshold_value_band_width
                            
                            	Attempt to maximize the bundle if bandwidth is below this value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximize_threshold_value_links
                            
                            	Attempt to maximize the bundle if links are below this value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: maximum_active_links
                            
                            	Maximum number of active links in the bundle
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: maximum_active_links_source
                            
                            	Source of maximum active links value
                            	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                            
                            .. attribute:: minimum_active_links
                            
                            	Minimum number of active links for bundle to go up
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: minimum_bandwidth
                            
                            	Minimum bundle bandwidth for bundle to go up (kbps)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            	**units**\: kbit/s
                            
                            .. attribute:: mlacp_mode
                            
                            	Indicates the mode of the device for the bundle
                            	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                            
                            .. attribute:: mlacp_status
                            
                            	The status of the mLACP feature on the bundle
                            	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                            
                            .. attribute:: primary_member
                            
                            	Primary bundle member (no longer applicable)
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: recovery_delay
                            
                            	Number of seconds to wait before becoming active after recovering from a failure
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            	**units**\: second
                            
                            .. attribute:: singleton
                            
                            	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                            	**type**\:  bool
                            
                            .. attribute:: standby_member_count
                            
                            	The number of standby local members on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: suppression_timer
                            
                            	Timer for suppressing bundle state flaps
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: switchover_type
                            
                            	How a switchover of the bundle from this device will occur
                            	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                            
                            .. attribute:: wait_while_timer
                            
                            	The wait while time used for member ports
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.active_foreign_member_count = None
                                self.active_member_count = None
                                self.available_bandwidth = None
                                self.bfd_config = YList()
                                self.bfd_config.parent = self
                                self.bfd_config.name = 'bfd_config'
                                self.bundle_interface_name = None
                                self.bundle_status = None
                                self.cisco_extensions = None
                                self.collector_max_delay = None
                                self.configured_bandwidth = None
                                self.configured_foreign_member_count = None
                                self.configured_member_count = None
                                self.effective_bandwidth = None
                                self.iccp_group_id = None
                                self.inter_chassis = None
                                self.ipv4bfd_status = None
                                self.ipv6bfd_status = None
                                self.is_active = None
                                self.lacp_nonrevertive = None
                                self.lacp_status = None
                                self.link_order_status = None
                                self.load_balance_hash_type = None
                                self.load_balance_locality_threshold = None
                                self.mac_address = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.MacAddress()
                                self.mac_address.parent = self
                                self.mac_source = None
                                self.mac_source_member = None
                                self.maximize_threshold_value_band_width = None
                                self.maximize_threshold_value_links = None
                                self.maximum_active_links = None
                                self.maximum_active_links_source = None
                                self.minimum_active_links = None
                                self.minimum_bandwidth = None
                                self.mlacp_mode = None
                                self.mlacp_status = None
                                self.primary_member = None
                                self.recovery_delay = None
                                self.singleton = None
                                self.standby_member_count = None
                                self.suppression_timer = None
                                self.switchover_type = None
                                self.wait_while_timer = None


                            class MacAddress(object):
                                """
                                MAC address of this member
                                
                                .. attribute:: address
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.MacAddress']['meta_info']


                            class BfdConfig(object):
                                """
                                Configuration values for BFD on bundle members
                                
                                .. attribute:: bundle_status
                                
                                	Status of BFD on the bundle
                                	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                                
                                .. attribute:: destination_address
                                
                                	Configured destination address for BFD session
                                	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.BfdConfig.DestinationAddress>`
                                
                                .. attribute:: fast_detect
                                
                                	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                                	**type**\:  bool
                                
                                .. attribute:: mode_info
                                
                                	Standard used for per\-member BFD
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: nbr_unconfig_timer
                                
                                	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pref_echo_min_interval
                                
                                	Preferred echo minimum interval for the BFD session (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pref_min_interval
                                
                                	Preferred minimum interval for the BFD session (ms)
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: pref_multiplier
                                
                                	Preferred multiplier for the BFD session
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: start_timer
                                
                                	Time to wait on session start before declaring DOWN
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_status = None
                                    self.destination_address = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.BfdConfig.DestinationAddress()
                                    self.destination_address.parent = self
                                    self.fast_detect = None
                                    self.mode_info = None
                                    self.nbr_unconfig_timer = None
                                    self.pref_echo_min_interval = None
                                    self.pref_min_interval = None
                                    self.pref_multiplier = None
                                    self.start_timer = None


                                class DestinationAddress(object):
                                    """
                                    Configured destination address for BFD session
                                    
                                    .. attribute:: af
                                    
                                    	AF
                                    	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                                    
                                    .. attribute:: ipv4
                                    
                                    	IPv4 address type
                                    	**type**\:  str
                                    
                                    	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                    
                                    .. attribute:: ipv6
                                    
                                    	IPv6 address type
                                    	**type**\:  str
                                    
                                    	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.af = None
                                        self.ipv4 = None
                                        self.ipv6 = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.af is not None:
                                            return True

                                        if self.ipv4 is not None:
                                            return True

                                        if self.ipv6 is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.BfdConfig.DestinationAddress']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_status is not None:
                                        return True

                                    if self.destination_address is not None and self.destination_address._has_data():
                                        return True

                                    if self.fast_detect is not None:
                                        return True

                                    if self.mode_info is not None:
                                        return True

                                    if self.nbr_unconfig_timer is not None:
                                        return True

                                    if self.pref_echo_min_interval is not None:
                                        return True

                                    if self.pref_min_interval is not None:
                                        return True

                                    if self.pref_multiplier is not None:
                                        return True

                                    if self.start_timer is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData.BfdConfig']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.active_foreign_member_count is not None:
                                    return True

                                if self.active_member_count is not None:
                                    return True

                                if self.available_bandwidth is not None:
                                    return True

                                if self.bfd_config is not None:
                                    for child_ref in self.bfd_config:
                                        if child_ref._has_data():
                                            return True

                                if self.bundle_interface_name is not None:
                                    return True

                                if self.bundle_status is not None:
                                    return True

                                if self.cisco_extensions is not None:
                                    return True

                                if self.collector_max_delay is not None:
                                    return True

                                if self.configured_bandwidth is not None:
                                    return True

                                if self.configured_foreign_member_count is not None:
                                    return True

                                if self.configured_member_count is not None:
                                    return True

                                if self.effective_bandwidth is not None:
                                    return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.inter_chassis is not None:
                                    return True

                                if self.ipv4bfd_status is not None:
                                    return True

                                if self.ipv6bfd_status is not None:
                                    return True

                                if self.is_active is not None:
                                    return True

                                if self.lacp_nonrevertive is not None:
                                    return True

                                if self.lacp_status is not None:
                                    return True

                                if self.link_order_status is not None:
                                    return True

                                if self.load_balance_hash_type is not None:
                                    return True

                                if self.load_balance_locality_threshold is not None:
                                    return True

                                if self.mac_address is not None and self.mac_address._has_data():
                                    return True

                                if self.mac_source is not None:
                                    return True

                                if self.mac_source_member is not None:
                                    return True

                                if self.maximize_threshold_value_band_width is not None:
                                    return True

                                if self.maximize_threshold_value_links is not None:
                                    return True

                                if self.maximum_active_links is not None:
                                    return True

                                if self.maximum_active_links_source is not None:
                                    return True

                                if self.minimum_active_links is not None:
                                    return True

                                if self.minimum_bandwidth is not None:
                                    return True

                                if self.mlacp_mode is not None:
                                    return True

                                if self.mlacp_status is not None:
                                    return True

                                if self.primary_member is not None:
                                    return True

                                if self.recovery_delay is not None:
                                    return True

                                if self.singleton is not None:
                                    return True

                                if self.standby_member_count is not None:
                                    return True

                                if self.suppression_timer is not None:
                                    return True

                                if self.switchover_type is not None:
                                    return True

                                if self.wait_while_timer is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.ActorBundleData']['meta_info']


                        class BundleSystemId(object):
                            """
                            System ID for the bundle
                            
                            .. attribute:: system_mac_addr
                            
                            	MAC Address used to identify the system
                            	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.BundleSystemId.SystemMacAddr>`
                            
                            .. attribute:: system_prio
                            
                            	Priority of the system
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.system_mac_addr = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.BundleSystemId.SystemMacAddr()
                                self.system_mac_addr.parent = self
                                self.system_prio = None


                            class SystemMacAddr(object):
                                """
                                MAC Address used to identify the system
                                
                                .. attribute:: macaddr
                                
                                	macaddr
                                	**type**\:  str
                                
                                	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.macaddr = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.macaddr is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.BundleSystemId.SystemMacAddr']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-system-id'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                    return True

                                if self.system_prio is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData.BundleSystemId']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.actor_bundle_data is not None and self.actor_bundle_data._has_data():
                                return True

                            if self.actor_operational_key is not None:
                                return True

                            if self.bundle_system_id is not None and self.bundle_system_id._has_data():
                                return True

                            if self.partner_operational_key is not None:
                                return True

                            if self.partner_system_mac_address is not None:
                                return True

                            if self.partner_system_priority is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.BundleData']['meta_info']


                    class MemberData(object):
                        """
                        Member information
                        
                        .. attribute:: actor_churn_state
                        
                        	State of the Churn state machine for the Actor
                        	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                        
                        .. attribute:: actor_info
                        
                        	LACP information for the port from the actor
                        	**type**\:   :py:class:`ActorInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo>`
                        
                        .. attribute:: additional_info
                        
                        	Additional information for the link
                        	**type**\:   :py:class:`AdditionalInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo>`
                        
                        .. attribute:: attached_aggregator_id
                        
                        	MIB ifindex of attached bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: iccp_group_id
                        
                        	The ID of the ICCP group that the link is configured on
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mux_state
                        
                        	State of the Mux state machine
                        	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                        
                        .. attribute:: partner_churn_state
                        
                        	State of the Churn state machine for the Partner
                        	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                        
                        .. attribute:: partner_info
                        
                        	LACP information for the port from the partner
                        	**type**\:   :py:class:`PartnerInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo>`
                        
                        .. attribute:: period_state
                        
                        	State of the Period state machine
                        	**type**\:   :py:class:`LacpPeriodStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpPeriodStateEnum>`
                        
                        .. attribute:: receive_machine_state
                        
                        	State of the RX state machine
                        	**type**\:   :py:class:`RxstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.RxstatesEnum>`
                        
                        .. attribute:: selected_aggregator_id
                        
                        	MIB ifindex of selected bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: selection_state
                        
                        	State of the Selection Logic state machine
                        	**type**\:   :py:class:`LacpSelStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpSelStateEnum>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.actor_churn_state = None
                            self.actor_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo()
                            self.actor_info.parent = self
                            self.additional_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo()
                            self.additional_info.parent = self
                            self.attached_aggregator_id = None
                            self.iccp_group_id = None
                            self.mux_state = None
                            self.partner_churn_state = None
                            self.partner_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo()
                            self.partner_info.parent = self
                            self.period_state = None
                            self.receive_machine_state = None
                            self.selected_aggregator_id = None
                            self.selection_state = None


                        class ActorInfo(object):
                            """
                            LACP information for the port from the actor
                            
                            .. attribute:: port_info
                            
                            	LACP parameters for this device
                            	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo>`
                            
                            .. attribute:: tx_period
                            
                            	Time (in ms) between transmitting LACPDUs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.port_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo()
                                self.port_info.parent = self
                                self.tx_period = None


                            class PortInfo(object):
                                """
                                LACP parameters for this device
                                
                                .. attribute:: key
                                
                                	key
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port
                                
                                	port
                                	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.Port>`
                                
                                .. attribute:: state
                                
                                	state
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: system
                                
                                	system
                                	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.System>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.key = None
                                    self.port = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.Port()
                                    self.port.parent = self
                                    self.state = None
                                    self.system = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.System()
                                    self.system.parent = self


                                class System(object):
                                    """
                                    system
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.System.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.System.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.System']['meta_info']


                                class Port(object):
                                    """
                                    port
                                    
                                    .. attribute:: link_number
                                    
                                    	link number
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_priority
                                    
                                    	link priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_number = None
                                        self.link_priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_number is not None:
                                            return True

                                        if self.link_priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo.Port']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.key is not None:
                                        return True

                                    if self.port is not None and self.port._has_data():
                                        return True

                                    if self.state is not None:
                                        return True

                                    if self.system is not None and self.system._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo.PortInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.port_info is not None and self.port_info._has_data():
                                    return True

                                if self.tx_period is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.ActorInfo']['meta_info']


                        class PartnerInfo(object):
                            """
                            LACP information for the port from the partner
                            
                            .. attribute:: port_info
                            
                            	LACP parameters for this device
                            	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo>`
                            
                            .. attribute:: tx_period
                            
                            	Time (in ms) between transmitting LACPDUs
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.port_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo()
                                self.port_info.parent = self
                                self.tx_period = None


                            class PortInfo(object):
                                """
                                LACP parameters for this device
                                
                                .. attribute:: key
                                
                                	key
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port
                                
                                	port
                                	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.Port>`
                                
                                .. attribute:: state
                                
                                	state
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: system
                                
                                	system
                                	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.System>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.key = None
                                    self.port = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.Port()
                                    self.port.parent = self
                                    self.state = None
                                    self.system = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.System()
                                    self.system.parent = self


                                class System(object):
                                    """
                                    system
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.System.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.System.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.System']['meta_info']


                                class Port(object):
                                    """
                                    port
                                    
                                    .. attribute:: link_number
                                    
                                    	link number
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    .. attribute:: link_priority
                                    
                                    	link priority
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.link_number = None
                                        self.link_priority = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.link_number is not None:
                                            return True

                                        if self.link_priority is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo.Port']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.key is not None:
                                        return True

                                    if self.port is not None and self.port._has_data():
                                        return True

                                    if self.state is not None:
                                        return True

                                    if self.system is not None and self.system._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo.PortInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:partner-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.port_info is not None and self.port_info._has_data():
                                    return True

                                if self.tx_period is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.PartnerInfo']['meta_info']


                        class AdditionalInfo(object):
                            """
                            Additional information for the link
                            
                            .. attribute:: foreign
                            
                            	Information for a foreign port
                            	**type**\:   :py:class:`Foreign <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo.Foreign>`
                            
                            .. attribute:: local
                            
                            	Information for a local port
                            	**type**\:   :py:class:`Local <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo.Local>`
                            
                            .. attribute:: mbr_type
                            
                            	MbrType
                            	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.foreign = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo.Foreign()
                                self.foreign.parent = self
                                self.local = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo.Local()
                                self.local.parent = self
                                self.mbr_type = None


                            class Local(object):
                                """
                                Information for a local port
                                
                                .. attribute:: interface_handle
                                
                                	Member's interface handle
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_handle = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:local'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_handle is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo.Local']['meta_info']


                            class Foreign(object):
                                """
                                Information for a foreign port
                                
                                .. attribute:: member_name
                                
                                	Member's (short form) name
                                	**type**\:  str
                                
                                .. attribute:: peer_address
                                
                                	The LDP address of the device that the link is configured on
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.member_name = None
                                    self.peer_address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:foreign'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.member_name is not None:
                                        return True

                                    if self.peer_address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo.Foreign']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:additional-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.foreign is not None and self.foreign._has_data():
                                    return True

                                if self.local is not None and self.local._has_data():
                                    return True

                                if self.mbr_type is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData.AdditionalInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.actor_churn_state is not None:
                                return True

                            if self.actor_info is not None and self.actor_info._has_data():
                                return True

                            if self.additional_info is not None and self.additional_info._has_data():
                                return True

                            if self.attached_aggregator_id is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.mux_state is not None:
                                return True

                            if self.partner_churn_state is not None:
                                return True

                            if self.partner_info is not None and self.partner_info._has_data():
                                return True

                            if self.period_state is not None:
                                return True

                            if self.receive_machine_state is not None:
                                return True

                            if self.selected_aggregator_id is not None:
                                return True

                            if self.selection_state is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor.MemberData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:lacp-member-ancestor'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_data is not None and self.bundle_data._has_data():
                            return True

                        if self.member_data is not None:
                            for child_ref in self.member_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberAncestor']['meta_info']


                class LacpMemberItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: actor_churn_state
                    
                    	State of the Churn state machine for the Actor
                    	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                    
                    .. attribute:: actor_info
                    
                    	LACP information for the port from the actor
                    	**type**\:   :py:class:`ActorInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo>`
                    
                    .. attribute:: additional_info
                    
                    	Additional information for the link
                    	**type**\:   :py:class:`AdditionalInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo>`
                    
                    .. attribute:: attached_aggregator_id
                    
                    	MIB ifindex of attached bundle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: iccp_group_id
                    
                    	The ID of the ICCP group that the link is configured on
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: mux_state
                    
                    	State of the Mux state machine
                    	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                    
                    .. attribute:: partner_churn_state
                    
                    	State of the Churn state machine for the Partner
                    	**type**\:   :py:class:`LacpChurnstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpChurnstatesEnum>`
                    
                    .. attribute:: partner_info
                    
                    	LACP information for the port from the partner
                    	**type**\:   :py:class:`PartnerInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo>`
                    
                    .. attribute:: period_state
                    
                    	State of the Period state machine
                    	**type**\:   :py:class:`LacpPeriodStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpPeriodStateEnum>`
                    
                    .. attribute:: receive_machine_state
                    
                    	State of the RX state machine
                    	**type**\:   :py:class:`RxstatesEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.RxstatesEnum>`
                    
                    .. attribute:: selected_aggregator_id
                    
                    	MIB ifindex of selected bundle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: selection_state
                    
                    	State of the Selection Logic state machine
                    	**type**\:   :py:class:`LacpSelStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpSelStateEnum>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.actor_churn_state = None
                        self.actor_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo()
                        self.actor_info.parent = self
                        self.additional_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo()
                        self.additional_info.parent = self
                        self.attached_aggregator_id = None
                        self.iccp_group_id = None
                        self.mux_state = None
                        self.partner_churn_state = None
                        self.partner_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo()
                        self.partner_info.parent = self
                        self.period_state = None
                        self.receive_machine_state = None
                        self.selected_aggregator_id = None
                        self.selection_state = None


                    class ActorInfo(object):
                        """
                        LACP information for the port from the actor
                        
                        .. attribute:: port_info
                        
                        	LACP parameters for this device
                        	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo>`
                        
                        .. attribute:: tx_period
                        
                        	Time (in ms) between transmitting LACPDUs
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.port_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo()
                            self.port_info.parent = self
                            self.tx_period = None


                        class PortInfo(object):
                            """
                            LACP parameters for this device
                            
                            .. attribute:: key
                            
                            	key
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: port
                            
                            	port
                            	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.Port>`
                            
                            .. attribute:: state
                            
                            	state
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: system
                            
                            	system
                            	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.System>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.key = None
                                self.port = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.Port()
                                self.port.parent = self
                                self.state = None
                                self.system = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.System()
                                self.system.parent = self


                            class System(object):
                                """
                                system
                                
                                .. attribute:: system_mac_addr
                                
                                	MAC Address used to identify the system
                                	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.System.SystemMacAddr>`
                                
                                .. attribute:: system_prio
                                
                                	Priority of the system
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.system_mac_addr = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.System.SystemMacAddr()
                                    self.system_mac_addr.parent = self
                                    self.system_prio = None


                                class SystemMacAddr(object):
                                    """
                                    MAC Address used to identify the system
                                    
                                    .. attribute:: macaddr
                                    
                                    	macaddr
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.macaddr = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.macaddr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                        return True

                                    if self.system_prio is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.System']['meta_info']


                            class Port(object):
                                """
                                port
                                
                                .. attribute:: link_number
                                
                                	link number
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: link_priority
                                
                                	link priority
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.link_number = None
                                    self.link_priority = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.link_number is not None:
                                        return True

                                    if self.link_priority is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo.Port']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.key is not None:
                                    return True

                                if self.port is not None and self.port._has_data():
                                    return True

                                if self.state is not None:
                                    return True

                                if self.system is not None and self.system._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo.PortInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:actor-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.port_info is not None and self.port_info._has_data():
                                return True

                            if self.tx_period is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.ActorInfo']['meta_info']


                    class PartnerInfo(object):
                        """
                        LACP information for the port from the partner
                        
                        .. attribute:: port_info
                        
                        	LACP parameters for this device
                        	**type**\:   :py:class:`PortInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo>`
                        
                        .. attribute:: tx_period
                        
                        	Time (in ms) between transmitting LACPDUs
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.port_info = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo()
                            self.port_info.parent = self
                            self.tx_period = None


                        class PortInfo(object):
                            """
                            LACP parameters for this device
                            
                            .. attribute:: key
                            
                            	key
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: port
                            
                            	port
                            	**type**\:   :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.Port>`
                            
                            .. attribute:: state
                            
                            	state
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: system
                            
                            	system
                            	**type**\:   :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.System>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.key = None
                                self.port = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.Port()
                                self.port.parent = self
                                self.state = None
                                self.system = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.System()
                                self.system.parent = self


                            class System(object):
                                """
                                system
                                
                                .. attribute:: system_mac_addr
                                
                                	MAC Address used to identify the system
                                	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.System.SystemMacAddr>`
                                
                                .. attribute:: system_prio
                                
                                	Priority of the system
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.system_mac_addr = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.System.SystemMacAddr()
                                    self.system_mac_addr.parent = self
                                    self.system_prio = None


                                class SystemMacAddr(object):
                                    """
                                    MAC Address used to identify the system
                                    
                                    .. attribute:: macaddr
                                    
                                    	macaddr
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.macaddr = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.macaddr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.System.SystemMacAddr']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                        return True

                                    if self.system_prio is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.System']['meta_info']


                            class Port(object):
                                """
                                port
                                
                                .. attribute:: link_number
                                
                                	link number
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: link_priority
                                
                                	link priority
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.link_number = None
                                    self.link_priority = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.link_number is not None:
                                        return True

                                    if self.link_priority is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo.Port']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:port-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.key is not None:
                                    return True

                                if self.port is not None and self.port._has_data():
                                    return True

                                if self.state is not None:
                                    return True

                                if self.system is not None and self.system._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo.PortInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:partner-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.port_info is not None and self.port_info._has_data():
                                return True

                            if self.tx_period is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.PartnerInfo']['meta_info']


                    class AdditionalInfo(object):
                        """
                        Additional information for the link
                        
                        .. attribute:: foreign
                        
                        	Information for a foreign port
                        	**type**\:   :py:class:`Foreign <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo.Foreign>`
                        
                        .. attribute:: local
                        
                        	Information for a local port
                        	**type**\:   :py:class:`Local <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo.Local>`
                        
                        .. attribute:: mbr_type
                        
                        	MbrType
                        	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.foreign = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo.Foreign()
                            self.foreign.parent = self
                            self.local = BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo.Local()
                            self.local.parent = self
                            self.mbr_type = None


                        class Local(object):
                            """
                            Information for a local port
                            
                            .. attribute:: interface_handle
                            
                            	Member's interface handle
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_handle = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:local'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_handle is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo.Local']['meta_info']


                        class Foreign(object):
                            """
                            Information for a foreign port
                            
                            .. attribute:: member_name
                            
                            	Member's (short form) name
                            	**type**\:  str
                            
                            .. attribute:: peer_address
                            
                            	The LDP address of the device that the link is configured on
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.member_name = None
                                self.peer_address = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:foreign'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.member_name is not None:
                                    return True

                                if self.peer_address is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo.Foreign']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:additional-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.foreign is not None and self.foreign._has_data():
                                return True

                            if self.local is not None and self.local._has_data():
                                return True

                            if self.mbr_type is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem.AdditionalInfo']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:lacp-member-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.actor_churn_state is not None:
                            return True

                        if self.actor_info is not None and self.actor_info._has_data():
                            return True

                        if self.additional_info is not None and self.additional_info._has_data():
                            return True

                        if self.attached_aggregator_id is not None:
                            return True

                        if self.iccp_group_id is not None:
                            return True

                        if self.mux_state is not None:
                            return True

                        if self.partner_churn_state is not None:
                            return True

                        if self.partner_info is not None and self.partner_info._has_data():
                            return True

                        if self.period_state is not None:
                            return True

                        if self.receive_machine_state is not None:
                            return True

                        if self.selected_aggregator_id is not None:
                            return True

                        if self.selection_state is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember.LacpMemberItem']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:lacp/Cisco-IOS-XR-bundlemgr-oper:lacp-members/Cisco-IOS-XR-bundlemgr-oper:lacp-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.lacp_member_ancestor is not None and self.lacp_member_ancestor._has_data():
                        return True

                    if self.lacp_member_item is not None and self.lacp_member_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Lacp.LacpMembers.LacpMember']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:lacp/Cisco-IOS-XR-bundlemgr-oper:lacp-members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.lacp_member is not None:
                    for child_ref in self.lacp_member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Lacp.LacpMembers']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:lacp'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.lacp_bundles is not None and self.lacp_bundles._has_data():
                return True

            if self.lacp_members is not None and self.lacp_members._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.Lacp']['meta_info']


    class MlacpBundleCounters(object):
        """
        Bundle specific counters of mLACP events
        
        .. attribute:: bundles
        
        	Bundle interfaces with counters of mLACP events
        	**type**\:   :py:class:`Bundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles>`
        
        .. attribute:: iccp_groups
        
        	ICCP Groups with counters of their bundle's mLACP events
        	**type**\:   :py:class:`IccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups>`
        
        .. attribute:: nodes
        
        	Devices with counters of their bundle's mLACP events
        	**type**\:   :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.bundles = BundleInformation.MlacpBundleCounters.Bundles()
            self.bundles.parent = self
            self.iccp_groups = BundleInformation.MlacpBundleCounters.IccpGroups()
            self.iccp_groups.parent = self
            self.nodes = BundleInformation.MlacpBundleCounters.Nodes()
            self.nodes.parent = self


        class IccpGroups(object):
            """
            ICCP Groups with counters of their bundle's
            mLACP events
            
            .. attribute:: iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`IccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.iccp_group = YList()
                self.iccp_group.parent = self
                self.iccp_group.name = 'iccp_group'


            class IccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: iccp_group_item
                
                	Data for this item
                	**type**\:   :py:class:`IccpGroupItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.iccp_group_item = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem()
                    self.iccp_group_item.parent = self


                class IccpGroupItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: iccp_group_data
                    
                    	ICCP Group mLACP TLV counter information
                    	**type**\:   :py:class:`IccpGroupData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData>`
                    
                    .. attribute:: node_data
                    
                    	Peer device bundle mLACP counter information
                    	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group_data = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData()
                        self.iccp_group_data.parent = self
                        self.node_data = YList()
                        self.node_data.parent = self
                        self.node_data.name = 'node_data'


                    class IccpGroupData(object):
                        """
                        ICCP Group mLACP TLV counter information
                        
                        .. attribute:: bundle_data
                        
                        	Local device bundle mLACP counter information
                        	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData>`
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mlacp_sync_requests_on_all_local_bundles
                        
                        	Counts of mLACP sync request TLVs on all bundles
                        	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles>`
                        
                        .. attribute:: mlacp_sync_requests_on_all_local_ports
                        
                        	Counts of mLACP sync request TLVs on all ports
                        	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = YList()
                            self.bundle_data.parent = self
                            self.bundle_data.name = 'bundle_data'
                            self.iccp_group_id = None
                            self.mlacp_sync_requests_on_all_local_bundles = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles()
                            self.mlacp_sync_requests_on_all_local_bundles.parent = self
                            self.mlacp_sync_requests_on_all_local_ports = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts()
                            self.mlacp_sync_requests_on_all_local_ports.parent = self


                        class MlacpSyncRequestsOnAllLocalPorts(object):
                            """
                            Counts of mLACP sync request TLVs on all ports
                            
                            .. attribute:: last_time_cleared
                            
                            	Time in nsecs from boot when counters were last cleared (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of mLACP sync request TLVs received
                            	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests>`
                            
                            .. attribute:: time_since_cleared
                            
                            	Elapsed time in nsecs since counters were last cleared
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.last_time_cleared = None
                                self.received_sync_requests = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests()
                                self.received_sync_requests.parent = self
                                self.time_since_cleared = None


                            class ReceivedSyncRequests(object):
                                """
                                Number of mLACP sync request TLVs received
                                
                                .. attribute:: all_syncs
                                
                                	Total number of sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: config_syncs
                                
                                	Number of config sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_syncs
                                
                                	Number of state sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.all_syncs = None
                                    self.config_syncs = None
                                    self.state_syncs = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.all_syncs is not None:
                                        return True

                                    if self.config_syncs is not None:
                                        return True

                                    if self.state_syncs is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-ports'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.last_time_cleared is not None:
                                    return True

                                if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                    return True

                                if self.time_since_cleared is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts']['meta_info']


                        class MlacpSyncRequestsOnAllLocalBundles(object):
                            """
                            Counts of mLACP sync request TLVs on all bundles
                            
                            .. attribute:: last_time_cleared
                            
                            	Time in nsecs from boot when counters were last cleared (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of mLACP sync request TLVs received
                            	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests>`
                            
                            .. attribute:: time_since_cleared
                            
                            	Elapsed time in nsecs since counters were last cleared
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.last_time_cleared = None
                                self.received_sync_requests = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests()
                                self.received_sync_requests.parent = self
                                self.time_since_cleared = None


                            class ReceivedSyncRequests(object):
                                """
                                Number of mLACP sync request TLVs received
                                
                                .. attribute:: all_syncs
                                
                                	Total number of sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: config_syncs
                                
                                	Number of config sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_syncs
                                
                                	Number of state sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.all_syncs = None
                                    self.config_syncs = None
                                    self.state_syncs = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.all_syncs is not None:
                                        return True

                                    if self.config_syncs is not None:
                                        return True

                                    if self.state_syncs is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-bundles'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.last_time_cleared is not None:
                                    return True

                                if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                    return True

                                if self.time_since_cleared is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles']['meta_info']


                        class BundleData(object):
                            """
                            Local device bundle mLACP counter information
                            
                            .. attribute:: bundle_name
                            
                            	Bundle name
                            	**type**\:  str
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData.MlacpTlvCounters>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_name = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_name is not None:
                                    return True

                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData.BundleData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None:
                                for child_ref in self.bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.mlacp_sync_requests_on_all_local_bundles is not None and self.mlacp_sync_requests_on_all_local_bundles._has_data():
                                return True

                            if self.mlacp_sync_requests_on_all_local_ports is not None and self.mlacp_sync_requests_on_all_local_ports._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupData']['meta_info']


                    class NodeData(object):
                        """
                        Peer device bundle mLACP counter information
                        
                        .. attribute:: bundle_data
                        
                        	Peer device bundle mLACP TLV counter information
                        	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData>`
                        
                        .. attribute:: node_data
                        
                        	Peer device mLACP TLV counter information
                        	**type**\:   :py:class:`NodeData_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = YList()
                            self.bundle_data.parent = self
                            self.bundle_data.name = 'bundle_data'
                            self.node_data = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_()
                            self.node_data.parent = self


                        class NodeData_(object):
                            """
                            Peer device mLACP TLV counter information
                            
                            .. attribute:: mlacp_sync_requests_on_all_foreign_bundles
                            
                            	Counts of mLACP sync request TLVs on all bundles
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles>`
                            
                            .. attribute:: mlacp_sync_requests_on_all_foreign_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts>`
                            
                            .. attribute:: node_id
                            
                            	Device ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mlacp_sync_requests_on_all_foreign_bundles = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles()
                                self.mlacp_sync_requests_on_all_foreign_bundles.parent = self
                                self.mlacp_sync_requests_on_all_foreign_ports = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts()
                                self.mlacp_sync_requests_on_all_foreign_ports.parent = self
                                self.node_id = None


                            class MlacpSyncRequestsOnAllForeignPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts']['meta_info']


                            class MlacpSyncRequestsOnAllForeignBundles(object):
                                """
                                Counts of mLACP sync request TLVs on all bundles
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-bundles'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mlacp_sync_requests_on_all_foreign_bundles is not None and self.mlacp_sync_requests_on_all_foreign_bundles._has_data():
                                    return True

                                if self.mlacp_sync_requests_on_all_foreign_ports is not None and self.mlacp_sync_requests_on_all_foreign_ports._has_data():
                                    return True

                                if self.node_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.NodeData_']['meta_info']


                        class BundleData(object):
                            """
                            Peer device bundle mLACP TLV counter information
                            
                            .. attribute:: bundle_name
                            
                            	Bundle name
                            	**type**\:  str
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData.MlacpTlvCounters>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_name = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_name is not None:
                                    return True

                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData.BundleData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None:
                                for child_ref in self.bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.node_data is not None and self.node_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem.NodeData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group_data is not None and self.iccp_group_data._has_data():
                            return True

                        if self.node_data is not None:
                            for child_ref in self.node_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup.IccpGroupItem']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-counters/Cisco-IOS-XR-bundlemgr-oper:iccp-groups/Cisco-IOS-XR-bundlemgr-oper:iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.iccp_group_item is not None and self.iccp_group_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups.IccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-counters/Cisco-IOS-XR-bundlemgr-oper:iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.iccp_group is not None:
                    for child_ref in self.iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpBundleCounters.IccpGroups']['meta_info']


        class Bundles(object):
            """
            Bundle interfaces with counters of mLACP events
            
            .. attribute:: bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`Bundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bundle = YList()
                self.bundle.parent = self
                self.bundle.name = 'bundle'


            class Bundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`BundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.bundle_item = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem()
                    self.bundle_item.parent = self


                class BundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: iccp_group
                    
                    	ICCP Group mLACP TLV counter information
                    	**type**\: list of    :py:class:`IccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group = YList()
                        self.iccp_group.parent = self
                        self.iccp_group.name = 'iccp_group'


                    class IccpGroup(object):
                        """
                        ICCP Group mLACP TLV counter information
                        
                        .. attribute:: iccp_group_data
                        
                        	ICCP Group mLACP TLV counter information
                        	**type**\:   :py:class:`IccpGroupData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData>`
                        
                        .. attribute:: node_data
                        
                        	Peer device bundle mLACP counter information
                        	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.iccp_group_data = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData()
                            self.iccp_group_data.parent = self
                            self.node_data = YList()
                            self.node_data.parent = self
                            self.node_data.name = 'node_data'


                        class IccpGroupData(object):
                            """
                            ICCP Group mLACP TLV counter information
                            
                            .. attribute:: bundle_data
                            
                            	Local device bundle mLACP counter information
                            	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData>`
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mlacp_sync_requests_on_all_local_bundles
                            
                            	Counts of mLACP sync request TLVs on all bundles
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles>`
                            
                            .. attribute:: mlacp_sync_requests_on_all_local_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_data = YList()
                                self.bundle_data.parent = self
                                self.bundle_data.name = 'bundle_data'
                                self.iccp_group_id = None
                                self.mlacp_sync_requests_on_all_local_bundles = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles()
                                self.mlacp_sync_requests_on_all_local_bundles.parent = self
                                self.mlacp_sync_requests_on_all_local_ports = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts()
                                self.mlacp_sync_requests_on_all_local_ports.parent = self


                            class MlacpSyncRequestsOnAllLocalPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts']['meta_info']


                            class MlacpSyncRequestsOnAllLocalBundles(object):
                                """
                                Counts of mLACP sync request TLVs on all bundles
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-bundles'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles']['meta_info']


                            class BundleData(object):
                                """
                                Local device bundle mLACP counter information
                                
                                .. attribute:: bundle_name
                                
                                	Bundle name
                                	**type**\:  str
                                
                                .. attribute:: mlacp_tlv_counters
                                
                                	Counts of mLACP TLVs sent and received
                                	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData.MlacpTlvCounters>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_name = None
                                    self.mlacp_tlv_counters = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData.MlacpTlvCounters()
                                    self.mlacp_tlv_counters.parent = self


                                class MlacpTlvCounters(object):
                                    """
                                    Counts of mLACP TLVs sent and received
                                    
                                    .. attribute:: last_time_cleared
                                    
                                    	Time in nsecs from boot when counters were last cleared (deprecated)
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: last_unexpected_event
                                    
                                    	Elapsed time in nsecs since last unexpected event
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: received_nak_tl_vs
                                    
                                    	Number of mLACP NAK TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_sync_requests
                                    
                                    	Number of mLACP sync request TLVs received
                                    	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests>`
                                    
                                    .. attribute:: sent_config_tl_vs
                                    
                                    	Number of mLACP config TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_state_tl_vs
                                    
                                    	Number of mLACP state TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: time_since_cleared
                                    
                                    	Elapsed time in nsecs since counters were last cleared
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.last_time_cleared = None
                                        self.last_unexpected_event = None
                                        self.received_nak_tl_vs = None
                                        self.received_priority_tl_vs = None
                                        self.received_sync_requests = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests()
                                        self.received_sync_requests.parent = self
                                        self.sent_config_tl_vs = None
                                        self.sent_priority_tl_vs = None
                                        self.sent_state_tl_vs = None
                                        self.time_since_cleared = None


                                    class ReceivedSyncRequests(object):
                                        """
                                        Number of mLACP sync request TLVs received
                                        
                                        .. attribute:: all_syncs
                                        
                                        	Total number of sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: config_syncs
                                        
                                        	Number of config sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_syncs
                                        
                                        	Number of state sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.all_syncs = None
                                            self.config_syncs = None
                                            self.state_syncs = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.all_syncs is not None:
                                                return True

                                            if self.config_syncs is not None:
                                                return True

                                            if self.state_syncs is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.last_time_cleared is not None:
                                            return True

                                        if self.last_unexpected_event is not None:
                                            return True

                                        if self.received_nak_tl_vs is not None:
                                            return True

                                        if self.received_priority_tl_vs is not None:
                                            return True

                                        if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                            return True

                                        if self.sent_config_tl_vs is not None:
                                            return True

                                        if self.sent_priority_tl_vs is not None:
                                            return True

                                        if self.sent_state_tl_vs is not None:
                                            return True

                                        if self.time_since_cleared is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData.MlacpTlvCounters']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_name is not None:
                                        return True

                                    if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData.BundleData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_data is not None:
                                    for child_ref in self.bundle_data:
                                        if child_ref._has_data():
                                            return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.mlacp_sync_requests_on_all_local_bundles is not None and self.mlacp_sync_requests_on_all_local_bundles._has_data():
                                    return True

                                if self.mlacp_sync_requests_on_all_local_ports is not None and self.mlacp_sync_requests_on_all_local_ports._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.IccpGroupData']['meta_info']


                        class NodeData(object):
                            """
                            Peer device bundle mLACP counter information
                            
                            .. attribute:: bundle_data
                            
                            	Peer device bundle mLACP TLV counter information
                            	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData>`
                            
                            .. attribute:: node_data
                            
                            	Peer device mLACP TLV counter information
                            	**type**\:   :py:class:`NodeData_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_data = YList()
                                self.bundle_data.parent = self
                                self.bundle_data.name = 'bundle_data'
                                self.node_data = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_()
                                self.node_data.parent = self


                            class NodeData_(object):
                                """
                                Peer device mLACP TLV counter information
                                
                                .. attribute:: mlacp_sync_requests_on_all_foreign_bundles
                                
                                	Counts of mLACP sync request TLVs on all bundles
                                	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles>`
                                
                                .. attribute:: mlacp_sync_requests_on_all_foreign_ports
                                
                                	Counts of mLACP sync request TLVs on all ports
                                	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts>`
                                
                                .. attribute:: node_id
                                
                                	Device ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.mlacp_sync_requests_on_all_foreign_bundles = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles()
                                    self.mlacp_sync_requests_on_all_foreign_bundles.parent = self
                                    self.mlacp_sync_requests_on_all_foreign_ports = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts()
                                    self.mlacp_sync_requests_on_all_foreign_ports.parent = self
                                    self.node_id = None


                                class MlacpSyncRequestsOnAllForeignPorts(object):
                                    """
                                    Counts of mLACP sync request TLVs on all ports
                                    
                                    .. attribute:: last_time_cleared
                                    
                                    	Time in nsecs from boot when counters were last cleared (deprecated)
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: received_sync_requests
                                    
                                    	Number of mLACP sync request TLVs received
                                    	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests>`
                                    
                                    .. attribute:: time_since_cleared
                                    
                                    	Elapsed time in nsecs since counters were last cleared
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.last_time_cleared = None
                                        self.received_sync_requests = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests()
                                        self.received_sync_requests.parent = self
                                        self.time_since_cleared = None


                                    class ReceivedSyncRequests(object):
                                        """
                                        Number of mLACP sync request TLVs received
                                        
                                        .. attribute:: all_syncs
                                        
                                        	Total number of sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: config_syncs
                                        
                                        	Number of config sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_syncs
                                        
                                        	Number of state sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.all_syncs = None
                                            self.config_syncs = None
                                            self.state_syncs = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.all_syncs is not None:
                                                return True

                                            if self.config_syncs is not None:
                                                return True

                                            if self.state_syncs is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-ports'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.last_time_cleared is not None:
                                            return True

                                        if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                            return True

                                        if self.time_since_cleared is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts']['meta_info']


                                class MlacpSyncRequestsOnAllForeignBundles(object):
                                    """
                                    Counts of mLACP sync request TLVs on all bundles
                                    
                                    .. attribute:: last_time_cleared
                                    
                                    	Time in nsecs from boot when counters were last cleared (deprecated)
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: received_sync_requests
                                    
                                    	Number of mLACP sync request TLVs received
                                    	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests>`
                                    
                                    .. attribute:: time_since_cleared
                                    
                                    	Elapsed time in nsecs since counters were last cleared
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.last_time_cleared = None
                                        self.received_sync_requests = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests()
                                        self.received_sync_requests.parent = self
                                        self.time_since_cleared = None


                                    class ReceivedSyncRequests(object):
                                        """
                                        Number of mLACP sync request TLVs received
                                        
                                        .. attribute:: all_syncs
                                        
                                        	Total number of sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: config_syncs
                                        
                                        	Number of config sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_syncs
                                        
                                        	Number of state sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.all_syncs = None
                                            self.config_syncs = None
                                            self.state_syncs = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.all_syncs is not None:
                                                return True

                                            if self.config_syncs is not None:
                                                return True

                                            if self.state_syncs is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-bundles'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.last_time_cleared is not None:
                                            return True

                                        if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                            return True

                                        if self.time_since_cleared is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.mlacp_sync_requests_on_all_foreign_bundles is not None and self.mlacp_sync_requests_on_all_foreign_bundles._has_data():
                                        return True

                                    if self.mlacp_sync_requests_on_all_foreign_ports is not None and self.mlacp_sync_requests_on_all_foreign_ports._has_data():
                                        return True

                                    if self.node_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.NodeData_']['meta_info']


                            class BundleData(object):
                                """
                                Peer device bundle mLACP TLV counter information
                                
                                .. attribute:: bundle_name
                                
                                	Bundle name
                                	**type**\:  str
                                
                                .. attribute:: mlacp_tlv_counters
                                
                                	Counts of mLACP TLVs sent and received
                                	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData.MlacpTlvCounters>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_name = None
                                    self.mlacp_tlv_counters = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData.MlacpTlvCounters()
                                    self.mlacp_tlv_counters.parent = self


                                class MlacpTlvCounters(object):
                                    """
                                    Counts of mLACP TLVs sent and received
                                    
                                    .. attribute:: last_time_cleared
                                    
                                    	Time in nsecs from boot when counters were last cleared (deprecated)
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: last_unexpected_event
                                    
                                    	Elapsed time in nsecs since last unexpected event
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: received_nak_tl_vs
                                    
                                    	Number of mLACP NAK TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_sync_requests
                                    
                                    	Number of mLACP sync request TLVs received
                                    	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests>`
                                    
                                    .. attribute:: sent_config_tl_vs
                                    
                                    	Number of mLACP config TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_state_tl_vs
                                    
                                    	Number of mLACP state TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: time_since_cleared
                                    
                                    	Elapsed time in nsecs since counters were last cleared
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.last_time_cleared = None
                                        self.last_unexpected_event = None
                                        self.received_nak_tl_vs = None
                                        self.received_priority_tl_vs = None
                                        self.received_sync_requests = BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests()
                                        self.received_sync_requests.parent = self
                                        self.sent_config_tl_vs = None
                                        self.sent_priority_tl_vs = None
                                        self.sent_state_tl_vs = None
                                        self.time_since_cleared = None


                                    class ReceivedSyncRequests(object):
                                        """
                                        Number of mLACP sync request TLVs received
                                        
                                        .. attribute:: all_syncs
                                        
                                        	Total number of sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: config_syncs
                                        
                                        	Number of config sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_syncs
                                        
                                        	Number of state sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.all_syncs = None
                                            self.config_syncs = None
                                            self.state_syncs = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.all_syncs is not None:
                                                return True

                                            if self.config_syncs is not None:
                                                return True

                                            if self.state_syncs is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.last_time_cleared is not None:
                                            return True

                                        if self.last_unexpected_event is not None:
                                            return True

                                        if self.received_nak_tl_vs is not None:
                                            return True

                                        if self.received_priority_tl_vs is not None:
                                            return True

                                        if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                            return True

                                        if self.sent_config_tl_vs is not None:
                                            return True

                                        if self.sent_priority_tl_vs is not None:
                                            return True

                                        if self.sent_state_tl_vs is not None:
                                            return True

                                        if self.time_since_cleared is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData.MlacpTlvCounters']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_name is not None:
                                        return True

                                    if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData.BundleData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_data is not None:
                                    for child_ref in self.bundle_data:
                                        if child_ref._has_data():
                                            return True

                                if self.node_data is not None and self.node_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup.NodeData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.iccp_group_data is not None and self.iccp_group_data._has_data():
                                return True

                            if self.node_data is not None:
                                for child_ref in self.node_data:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem.IccpGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group is not None:
                            for child_ref in self.iccp_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle.BundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-counters/Cisco-IOS-XR-bundlemgr-oper:bundles/Cisco-IOS-XR-bundlemgr-oper:bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.bundle_item is not None and self.bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles.Bundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-counters/Cisco-IOS-XR-bundlemgr-oper:bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bundle is not None:
                    for child_ref in self.bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpBundleCounters.Bundles']['meta_info']


        class Nodes(object):
            """
            Devices with counters of their bundle's mLACP
            events
            
            .. attribute:: node
            
            	Node ID
            	**type**\: list of    :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node = YList()
                self.node.parent = self
                self.node.name = 'node'


            class Node(object):
                """
                Node ID
                
                .. attribute:: node  <key>
                
                	For a local device the Node ID e.g. '0\_0\_CPU0', for a peer device the LDP ID followed by the ICCP Group ID e.g. '5.4.3.2 ,4'
                	**type**\:  str
                
                .. attribute:: node_item
                
                	Data for this item
                	**type**\:   :py:class:`NodeItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.node = None
                    self.node_item = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem()
                    self.node_item.parent = self


                class NodeItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: iccp_group_data
                    
                    	ICCP Group mLACP TLV counter information
                    	**type**\:   :py:class:`IccpGroupData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData>`
                    
                    .. attribute:: node_data
                    
                    	Peer device bundle mLACP counter information
                    	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group_data = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData()
                        self.iccp_group_data.parent = self
                        self.node_data = YList()
                        self.node_data.parent = self
                        self.node_data.name = 'node_data'


                    class IccpGroupData(object):
                        """
                        ICCP Group mLACP TLV counter information
                        
                        .. attribute:: bundle_data
                        
                        	Local device bundle mLACP counter information
                        	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData>`
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mlacp_sync_requests_on_all_local_bundles
                        
                        	Counts of mLACP sync request TLVs on all bundles
                        	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles>`
                        
                        .. attribute:: mlacp_sync_requests_on_all_local_ports
                        
                        	Counts of mLACP sync request TLVs on all ports
                        	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = YList()
                            self.bundle_data.parent = self
                            self.bundle_data.name = 'bundle_data'
                            self.iccp_group_id = None
                            self.mlacp_sync_requests_on_all_local_bundles = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles()
                            self.mlacp_sync_requests_on_all_local_bundles.parent = self
                            self.mlacp_sync_requests_on_all_local_ports = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts()
                            self.mlacp_sync_requests_on_all_local_ports.parent = self


                        class MlacpSyncRequestsOnAllLocalPorts(object):
                            """
                            Counts of mLACP sync request TLVs on all ports
                            
                            .. attribute:: last_time_cleared
                            
                            	Time in nsecs from boot when counters were last cleared (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of mLACP sync request TLVs received
                            	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests>`
                            
                            .. attribute:: time_since_cleared
                            
                            	Elapsed time in nsecs since counters were last cleared
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.last_time_cleared = None
                                self.received_sync_requests = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests()
                                self.received_sync_requests.parent = self
                                self.time_since_cleared = None


                            class ReceivedSyncRequests(object):
                                """
                                Number of mLACP sync request TLVs received
                                
                                .. attribute:: all_syncs
                                
                                	Total number of sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: config_syncs
                                
                                	Number of config sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_syncs
                                
                                	Number of state sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.all_syncs = None
                                    self.config_syncs = None
                                    self.state_syncs = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.all_syncs is not None:
                                        return True

                                    if self.config_syncs is not None:
                                        return True

                                    if self.state_syncs is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-ports'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.last_time_cleared is not None:
                                    return True

                                if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                    return True

                                if self.time_since_cleared is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalPorts']['meta_info']


                        class MlacpSyncRequestsOnAllLocalBundles(object):
                            """
                            Counts of mLACP sync request TLVs on all bundles
                            
                            .. attribute:: last_time_cleared
                            
                            	Time in nsecs from boot when counters were last cleared (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of mLACP sync request TLVs received
                            	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests>`
                            
                            .. attribute:: time_since_cleared
                            
                            	Elapsed time in nsecs since counters were last cleared
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.last_time_cleared = None
                                self.received_sync_requests = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests()
                                self.received_sync_requests.parent = self
                                self.time_since_cleared = None


                            class ReceivedSyncRequests(object):
                                """
                                Number of mLACP sync request TLVs received
                                
                                .. attribute:: all_syncs
                                
                                	Total number of sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: config_syncs
                                
                                	Number of config sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_syncs
                                
                                	Number of state sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.all_syncs = None
                                    self.config_syncs = None
                                    self.state_syncs = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.all_syncs is not None:
                                        return True

                                    if self.config_syncs is not None:
                                        return True

                                    if self.state_syncs is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles.ReceivedSyncRequests']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-bundles'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.last_time_cleared is not None:
                                    return True

                                if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                    return True

                                if self.time_since_cleared is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.MlacpSyncRequestsOnAllLocalBundles']['meta_info']


                        class BundleData(object):
                            """
                            Local device bundle mLACP counter information
                            
                            .. attribute:: bundle_name
                            
                            	Bundle name
                            	**type**\:  str
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData.MlacpTlvCounters>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_name = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_name is not None:
                                    return True

                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData.BundleData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None:
                                for child_ref in self.bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.mlacp_sync_requests_on_all_local_bundles is not None and self.mlacp_sync_requests_on_all_local_bundles._has_data():
                                return True

                            if self.mlacp_sync_requests_on_all_local_ports is not None and self.mlacp_sync_requests_on_all_local_ports._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.IccpGroupData']['meta_info']


                    class NodeData(object):
                        """
                        Peer device bundle mLACP counter information
                        
                        .. attribute:: bundle_data
                        
                        	Peer device bundle mLACP TLV counter information
                        	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData>`
                        
                        .. attribute:: node_data
                        
                        	Peer device mLACP TLV counter information
                        	**type**\:   :py:class:`NodeData_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = YList()
                            self.bundle_data.parent = self
                            self.bundle_data.name = 'bundle_data'
                            self.node_data = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_()
                            self.node_data.parent = self


                        class NodeData_(object):
                            """
                            Peer device mLACP TLV counter information
                            
                            .. attribute:: mlacp_sync_requests_on_all_foreign_bundles
                            
                            	Counts of mLACP sync request TLVs on all bundles
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles>`
                            
                            .. attribute:: mlacp_sync_requests_on_all_foreign_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts>`
                            
                            .. attribute:: node_id
                            
                            	Device ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mlacp_sync_requests_on_all_foreign_bundles = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles()
                                self.mlacp_sync_requests_on_all_foreign_bundles.parent = self
                                self.mlacp_sync_requests_on_all_foreign_ports = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts()
                                self.mlacp_sync_requests_on_all_foreign_ports.parent = self
                                self.node_id = None


                            class MlacpSyncRequestsOnAllForeignPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignPorts']['meta_info']


                            class MlacpSyncRequestsOnAllForeignBundles(object):
                                """
                                Counts of mLACP sync request TLVs on all bundles
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-bundles'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_.MlacpSyncRequestsOnAllForeignBundles']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mlacp_sync_requests_on_all_foreign_bundles is not None and self.mlacp_sync_requests_on_all_foreign_bundles._has_data():
                                    return True

                                if self.mlacp_sync_requests_on_all_foreign_ports is not None and self.mlacp_sync_requests_on_all_foreign_ports._has_data():
                                    return True

                                if self.node_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.NodeData_']['meta_info']


                        class BundleData(object):
                            """
                            Peer device bundle mLACP TLV counter information
                            
                            .. attribute:: bundle_name
                            
                            	Bundle name
                            	**type**\:  str
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData.MlacpTlvCounters>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_name = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_name is not None:
                                    return True

                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData.BundleData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None:
                                for child_ref in self.bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.node_data is not None and self.node_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem.NodeData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group_data is not None and self.iccp_group_data._has_data():
                            return True

                        if self.node_data is not None:
                            for child_ref in self.node_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node.NodeItem']['meta_info']

                @property
                def _common_path(self):
                    if self.node is None:
                        raise YPYModelError('Key property node is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-counters/Cisco-IOS-XR-bundlemgr-oper:nodes/Cisco-IOS-XR-bundlemgr-oper:node[Cisco-IOS-XR-bundlemgr-oper:node = ' + str(self.node) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.node is not None:
                        return True

                    if self.node_item is not None and self.node_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes.Node']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-counters/Cisco-IOS-XR-bundlemgr-oper:nodes'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node is not None:
                    for child_ref in self.node:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpBundleCounters.Nodes']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-counters'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.bundles is not None and self.bundles._has_data():
                return True

            if self.iccp_groups is not None and self.iccp_groups._has_data():
                return True

            if self.nodes is not None and self.nodes._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.MlacpBundleCounters']['meta_info']


    class Protect(object):
        """
        Information for bundles and members that are in
        the protect database
        
        .. attribute:: protect_bundles
        
        	Bundle interfaces with information in the protect database
        	**type**\:   :py:class:`ProtectBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Protect.ProtectBundles>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.protect_bundles = BundleInformation.Protect.ProtectBundles()
            self.protect_bundles.parent = self


        class ProtectBundles(object):
            """
            Bundle interfaces with information in the
            protect database
            
            .. attribute:: protect_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`ProtectBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Protect.ProtectBundles.ProtectBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.protect_bundle = YList()
                self.protect_bundle.parent = self
                self.protect_bundle.name = 'protect_bundle'


            class ProtectBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: protect_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`ProtectBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Protect.ProtectBundles.ProtectBundle.ProtectBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.protect_bundle_item = BundleInformation.Protect.ProtectBundles.ProtectBundle.ProtectBundleItem()
                    self.protect_bundle_item.parent = self


                class ProtectBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: bundle_interface_handle
                    
                    	Bundle's interface handle
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: event_type
                    
                    	Scope of the last event that impacted the bundle
                    	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                    
                    .. attribute:: interface_up
                    
                    	Whether the bundle interface is up
                    	**type**\:  bool
                    
                    .. attribute:: member_info
                    
                    	Information about the members
                    	**type**\: list of    :py:class:`MemberInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Protect.ProtectBundles.ProtectBundle.ProtectBundleItem.MemberInfo>`
                    
                    .. attribute:: minimum_active_links
                    
                    	Minimum active links threshold
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: minimum_bandwidth
                    
                    	Minimum bandwidth threshold
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: registered
                    
                    	Whether there is a client protect registration on the bundle interface
                    	**type**\:  bool
                    
                    .. attribute:: slow_path_trigger
                    
                    	Whether the last protect trigger originated in the slow path
                    	**type**\:  bool
                    
                    .. attribute:: slow_path_up
                    
                    	Bundle is up in the slow path
                    	**type**\:  bool
                    
                    .. attribute:: time_stamp
                    
                    	Last event for the bundle
                    	**type**\:  int
                    
                    	**range:** 0..18446744073709551615
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_interface_handle = None
                        self.event_type = None
                        self.interface_up = None
                        self.member_info = YList()
                        self.member_info.parent = self
                        self.member_info.name = 'member_info'
                        self.minimum_active_links = None
                        self.minimum_bandwidth = None
                        self.registered = None
                        self.slow_path_trigger = None
                        self.slow_path_up = None
                        self.time_stamp = None


                    class MemberInfo(object):
                        """
                        Information about the members
                        
                        .. attribute:: active
                        
                        	Member is active within its bundle
                        	**type**\:  bool
                        
                        .. attribute:: bandwidth
                        
                        	Member's bandwidth
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_handle
                        
                        	Member's interface handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: link_order_number
                        
                        	Member's link order number
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: node
                        
                        	Member's node ID
                        	**type**\:  str
                        
                        	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
                        
                        .. attribute:: notification_received
                        
                        	Received a notification on the member
                        	**type**\:  bool
                        
                        .. attribute:: slow_path_up
                        
                        	Member is up in the slow path
                        	**type**\:  bool
                        
                        .. attribute:: time_stamp
                        
                        	Last event for the member
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        .. attribute:: underlying_link_id
                        
                        	Member's underlying link ID
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.active = None
                            self.bandwidth = None
                            self.interface_handle = None
                            self.link_order_number = None
                            self.node = None
                            self.notification_received = None
                            self.slow_path_up = None
                            self.time_stamp = None
                            self.underlying_link_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.active is not None:
                                return True

                            if self.bandwidth is not None:
                                return True

                            if self.interface_handle is not None:
                                return True

                            if self.link_order_number is not None:
                                return True

                            if self.node is not None:
                                return True

                            if self.notification_received is not None:
                                return True

                            if self.slow_path_up is not None:
                                return True

                            if self.time_stamp is not None:
                                return True

                            if self.underlying_link_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Protect.ProtectBundles.ProtectBundle.ProtectBundleItem.MemberInfo']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:protect-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_interface_handle is not None:
                            return True

                        if self.event_type is not None:
                            return True

                        if self.interface_up is not None:
                            return True

                        if self.member_info is not None:
                            for child_ref in self.member_info:
                                if child_ref._has_data():
                                    return True

                        if self.minimum_active_links is not None:
                            return True

                        if self.minimum_bandwidth is not None:
                            return True

                        if self.registered is not None:
                            return True

                        if self.slow_path_trigger is not None:
                            return True

                        if self.slow_path_up is not None:
                            return True

                        if self.time_stamp is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Protect.ProtectBundles.ProtectBundle.ProtectBundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:protect/Cisco-IOS-XR-bundlemgr-oper:protect-bundles/Cisco-IOS-XR-bundlemgr-oper:protect-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.protect_bundle_item is not None and self.protect_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Protect.ProtectBundles.ProtectBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:protect/Cisco-IOS-XR-bundlemgr-oper:protect-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.protect_bundle is not None:
                    for child_ref in self.protect_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Protect.ProtectBundles']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:protect'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.protect_bundles is not None and self.protect_bundles._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.Protect']['meta_info']


    class MlacpBrief(object):
        """
        mLACP Information for Interchassis Groups and
        bundles
        
        .. attribute:: mlacp_brief_iccp_groups
        
        	ICCP Groups with brief mLACP information
        	**type**\:   :py:class:`MlacpBriefIccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups>`
        
        .. attribute:: mlacp_bundle_briefs
        
        	Bundle interfaces with brief mLACP information
        	**type**\:   :py:class:`MlacpBundleBriefs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.mlacp_brief_iccp_groups = BundleInformation.MlacpBrief.MlacpBriefIccpGroups()
            self.mlacp_brief_iccp_groups.parent = self
            self.mlacp_bundle_briefs = BundleInformation.MlacpBrief.MlacpBundleBriefs()
            self.mlacp_bundle_briefs.parent = self


        class MlacpBundleBriefs(object):
            """
            Bundle interfaces with brief mLACP information
            
            .. attribute:: mlacp_bundle_brief
            
            	Bundle interface
            	**type**\: list of    :py:class:`MlacpBundleBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.mlacp_bundle_brief = YList()
                self.mlacp_bundle_brief.parent = self
                self.mlacp_bundle_brief.name = 'mlacp_bundle_brief'


            class MlacpBundleBrief(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: mlacp_bundle_item_brief
                
                	Data for this item
                	**type**\:   :py:class:`MlacpBundleItemBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.mlacp_bundle_item_brief = BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief()
                    self.mlacp_bundle_item_brief.parent = self


                class MlacpBundleItemBrief(object):
                    """
                    Data for this item
                    
                    .. attribute:: mlacp_data
                    
                    	mLACP data for multiple ICCP Groups
                    	**type**\: list of    :py:class:`MlacpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.mlacp_data = YList()
                        self.mlacp_data.parent = self
                        self.mlacp_data.name = 'mlacp_data'


                    class MlacpData(object):
                        """
                        mLACP data for multiple ICCP Groups
                        
                        .. attribute:: bundle_data
                        
                        	Bundle information
                        	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData>`
                        
                        .. attribute:: iccp_group_data
                        
                        	ICCP Group information
                        	**type**\:   :py:class:`IccpGroupData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = YList()
                            self.bundle_data.parent = self
                            self.bundle_data.name = 'bundle_data'
                            self.iccp_group_data = BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData()
                            self.iccp_group_data.parent = self


                        class IccpGroupData(object):
                            """
                            ICCP Group information
                            
                            .. attribute:: connect_timer_running
                            
                            	Time remaining on connect timer innsecs
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group that the mLACP information is for
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: node_data
                            
                            	Information for the IG from the local and peer devices
                            	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData>`
                            
                            .. attribute:: singleton
                            
                            	Is the ICCP group in singleton mode (1 = singleton; 0 = not singleton)
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.connect_timer_running = None
                                self.iccp_group_id = None
                                self.node_data = YList()
                                self.node_data.parent = self
                                self.node_data.name = 'node_data'
                                self.singleton = None


                            class NodeData(object):
                                """
                                Information for the IG from the local and peer
                                devices
                                
                                .. attribute:: iccp_group_state
                                
                                	Node synchronization state
                                	**type**\:   :py:class:`BmdMlacpNodeSyncEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeSyncEnumEnum>`
                                
                                .. attribute:: ldp_id
                                
                                	LDP ID of the device
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: mlacp_node_id
                                
                                	mLACP Device ID
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: node_state
                                
                                	Node state
                                	**type**\:   :py:class:`BmdMlacpNodeStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeStateEnumEnum>`
                                
                                .. attribute:: system_id
                                
                                	System ID for the ICCP Group
                                	**type**\:   :py:class:`SystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData.SystemId>`
                                
                                .. attribute:: version_number
                                
                                	Version of the protocol being used
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.iccp_group_state = None
                                    self.ldp_id = None
                                    self.mlacp_node_id = None
                                    self.node_state = None
                                    self.system_id = BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData.SystemId()
                                    self.system_id.parent = self
                                    self.version_number = None


                                class SystemId(object):
                                    """
                                    System ID for the ICCP Group
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData.SystemId.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData.SystemId.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData.SystemId.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData.SystemId']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.iccp_group_state is not None:
                                        return True

                                    if self.ldp_id is not None:
                                        return True

                                    if self.mlacp_node_id is not None:
                                        return True

                                    if self.node_state is not None:
                                        return True

                                    if self.system_id is not None and self.system_id._has_data():
                                        return True

                                    if self.version_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData.NodeData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.connect_timer_running is not None:
                                    return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.node_data is not None:
                                    for child_ref in self.node_data:
                                        if child_ref._has_data():
                                            return True

                                if self.singleton is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.IccpGroupData']['meta_info']


                        class BundleData(object):
                            """
                            Bundle information
                            
                            .. attribute:: bundle_interface_key
                            
                            	Bundle interface key
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: media_type
                            
                            	The media type of the bundle interface
                            	**type**\:   :py:class:`BundleMediaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMediaEnum>`
                            
                            .. attribute:: mlacp_bundle_data
                            
                            	mLACP information for the bundle
                            	**type**\: list of    :py:class:`MlacpBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData.MlacpBundleData>`
                            
                            .. attribute:: mlacp_member_data
                            
                            	mLACP information for the member
                            	**type**\: list of    :py:class:`MlacpMemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData.MlacpMemberData>`
                            
                            .. attribute:: redundancy_object_id
                            
                            	Redundancy Object ID of the bundle
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_interface_key = None
                                self.media_type = None
                                self.mlacp_bundle_data = YList()
                                self.mlacp_bundle_data.parent = self
                                self.mlacp_bundle_data.name = 'mlacp_bundle_data'
                                self.mlacp_member_data = YList()
                                self.mlacp_member_data.parent = self
                                self.mlacp_member_data.name = 'mlacp_member_data'
                                self.redundancy_object_id = None


                            class MlacpBundleData(object):
                                """
                                mLACP information for the bundle
                                
                                .. attribute:: aggregator_id
                                
                                	Bundle aggregrator ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: bundle_name
                                
                                	Bundle name
                                	**type**\:  str
                                
                                .. attribute:: bundle_state
                                
                                	Bundle state
                                	**type**\:   :py:class:`BmdMlacpBdlStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpBdlStateEnumEnum>`
                                
                                .. attribute:: mac_address
                                
                                	Bundle MAC address
                                	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData.MlacpBundleData.MacAddress>`
                                
                                .. attribute:: mlacp_node_id
                                
                                	mLACP Device ID
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: port_priority
                                
                                	Bundle port priority
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.aggregator_id = None
                                    self.bundle_name = None
                                    self.bundle_state = None
                                    self.mac_address = BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData.MlacpBundleData.MacAddress()
                                    self.mac_address.parent = self
                                    self.mlacp_node_id = None
                                    self.port_priority = None


                                class MacAddress(object):
                                    """
                                    Bundle MAC address
                                    
                                    .. attribute:: address
                                    
                                    	MAC address
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData.MlacpBundleData.MacAddress']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.aggregator_id is not None:
                                        return True

                                    if self.bundle_name is not None:
                                        return True

                                    if self.bundle_state is not None:
                                        return True

                                    if self.mac_address is not None and self.mac_address._has_data():
                                        return True

                                    if self.mlacp_node_id is not None:
                                        return True

                                    if self.port_priority is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData.MlacpBundleData']['meta_info']


                            class MlacpMemberData(object):
                                """
                                mLACP information for the member
                                
                                .. attribute:: configured_priority
                                
                                	Configured priority of the member in the bundle
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: interface_handle
                                
                                	Member's interface handle (local device's members only)
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: member_state
                                
                                	Member state
                                	**type**\:   :py:class:`BmdMlacpMbrStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpMbrStateEnumEnum>`
                                
                                .. attribute:: mlacp_node_id
                                
                                	mLACP Device ID
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: operational_priority
                                
                                	Operational priority of the member in the bundle
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port_name
                                
                                	Port Name
                                	**type**\:  str
                                
                                .. attribute:: port_number
                                
                                	Port number of the member
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.configured_priority = None
                                    self.interface_handle = None
                                    self.member_state = None
                                    self.mlacp_node_id = None
                                    self.operational_priority = None
                                    self.port_name = None
                                    self.port_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.configured_priority is not None:
                                        return True

                                    if self.interface_handle is not None:
                                        return True

                                    if self.member_state is not None:
                                        return True

                                    if self.mlacp_node_id is not None:
                                        return True

                                    if self.operational_priority is not None:
                                        return True

                                    if self.port_name is not None:
                                        return True

                                    if self.port_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData.MlacpMemberData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_interface_key is not None:
                                    return True

                                if self.media_type is not None:
                                    return True

                                if self.mlacp_bundle_data is not None:
                                    for child_ref in self.mlacp_bundle_data:
                                        if child_ref._has_data():
                                            return True

                                if self.mlacp_member_data is not None:
                                    for child_ref in self.mlacp_member_data:
                                        if child_ref._has_data():
                                            return True

                                if self.redundancy_object_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData.BundleData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None:
                                for child_ref in self.bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.iccp_group_data is not None and self.iccp_group_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief.MlacpData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-item-brief'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.mlacp_data is not None:
                            for child_ref in self.mlacp_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief.MlacpBundleItemBrief']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-briefs/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-brief[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.mlacp_bundle_item_brief is not None and self.mlacp_bundle_item_brief._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs.MlacpBundleBrief']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-briefs'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.mlacp_bundle_brief is not None:
                    for child_ref in self.mlacp_bundle_brief:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpBrief.MlacpBundleBriefs']['meta_info']


        class MlacpBriefIccpGroups(object):
            """
            ICCP Groups with brief mLACP information
            
            .. attribute:: mlacp_brief_iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`MlacpBriefIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.mlacp_brief_iccp_group = YList()
                self.mlacp_brief_iccp_group.parent = self
                self.mlacp_brief_iccp_group.name = 'mlacp_brief_iccp_group'


            class MlacpBriefIccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: mlacp_brief_iccp_group_item
                
                	Data for this item
                	**type**\:   :py:class:`MlacpBriefIccpGroupItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.mlacp_brief_iccp_group_item = BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem()
                    self.mlacp_brief_iccp_group_item.parent = self


                class MlacpBriefIccpGroupItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: bundle_data
                    
                    	Bundle information
                    	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData>`
                    
                    .. attribute:: iccp_group_data
                    
                    	ICCP Group information
                    	**type**\:   :py:class:`IccpGroupData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_data = YList()
                        self.bundle_data.parent = self
                        self.bundle_data.name = 'bundle_data'
                        self.iccp_group_data = BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData()
                        self.iccp_group_data.parent = self


                    class IccpGroupData(object):
                        """
                        ICCP Group information
                        
                        .. attribute:: connect_timer_running
                        
                        	Time remaining on connect timer innsecs
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group that the mLACP information is for
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: node_data
                        
                        	Information for the IG from the local and peer devices
                        	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData>`
                        
                        .. attribute:: singleton
                        
                        	Is the ICCP group in singleton mode (1 = singleton; 0 = not singleton)
                        	**type**\:  bool
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.connect_timer_running = None
                            self.iccp_group_id = None
                            self.node_data = YList()
                            self.node_data.parent = self
                            self.node_data.name = 'node_data'
                            self.singleton = None


                        class NodeData(object):
                            """
                            Information for the IG from the local and peer
                            devices
                            
                            .. attribute:: iccp_group_state
                            
                            	Node synchronization state
                            	**type**\:   :py:class:`BmdMlacpNodeSyncEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeSyncEnumEnum>`
                            
                            .. attribute:: ldp_id
                            
                            	LDP ID of the device
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: mlacp_node_id
                            
                            	mLACP Device ID
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: node_state
                            
                            	Node state
                            	**type**\:   :py:class:`BmdMlacpNodeStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeStateEnumEnum>`
                            
                            .. attribute:: system_id
                            
                            	System ID for the ICCP Group
                            	**type**\:   :py:class:`SystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData.SystemId>`
                            
                            .. attribute:: version_number
                            
                            	Version of the protocol being used
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.iccp_group_state = None
                                self.ldp_id = None
                                self.mlacp_node_id = None
                                self.node_state = None
                                self.system_id = BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData.SystemId()
                                self.system_id.parent = self
                                self.version_number = None


                            class SystemId(object):
                                """
                                System ID for the ICCP Group
                                
                                .. attribute:: system_mac_addr
                                
                                	MAC Address used to identify the system
                                	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData.SystemId.SystemMacAddr>`
                                
                                .. attribute:: system_prio
                                
                                	Priority of the system
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.system_mac_addr = BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData.SystemId.SystemMacAddr()
                                    self.system_mac_addr.parent = self
                                    self.system_prio = None


                                class SystemMacAddr(object):
                                    """
                                    MAC Address used to identify the system
                                    
                                    .. attribute:: macaddr
                                    
                                    	macaddr
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.macaddr = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.macaddr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData.SystemId.SystemMacAddr']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-id'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                        return True

                                    if self.system_prio is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData.SystemId']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.iccp_group_state is not None:
                                    return True

                                if self.ldp_id is not None:
                                    return True

                                if self.mlacp_node_id is not None:
                                    return True

                                if self.node_state is not None:
                                    return True

                                if self.system_id is not None and self.system_id._has_data():
                                    return True

                                if self.version_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData.NodeData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.connect_timer_running is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.node_data is not None:
                                for child_ref in self.node_data:
                                    if child_ref._has_data():
                                        return True

                            if self.singleton is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.IccpGroupData']['meta_info']


                    class BundleData(object):
                        """
                        Bundle information
                        
                        .. attribute:: bundle_interface_key
                        
                        	Bundle interface key
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: media_type
                        
                        	The media type of the bundle interface
                        	**type**\:   :py:class:`BundleMediaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMediaEnum>`
                        
                        .. attribute:: mlacp_bundle_data
                        
                        	mLACP information for the bundle
                        	**type**\: list of    :py:class:`MlacpBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData.MlacpBundleData>`
                        
                        .. attribute:: mlacp_member_data
                        
                        	mLACP information for the member
                        	**type**\: list of    :py:class:`MlacpMemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData.MlacpMemberData>`
                        
                        .. attribute:: redundancy_object_id
                        
                        	Redundancy Object ID of the bundle
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_interface_key = None
                            self.media_type = None
                            self.mlacp_bundle_data = YList()
                            self.mlacp_bundle_data.parent = self
                            self.mlacp_bundle_data.name = 'mlacp_bundle_data'
                            self.mlacp_member_data = YList()
                            self.mlacp_member_data.parent = self
                            self.mlacp_member_data.name = 'mlacp_member_data'
                            self.redundancy_object_id = None


                        class MlacpBundleData(object):
                            """
                            mLACP information for the bundle
                            
                            .. attribute:: aggregator_id
                            
                            	Bundle aggregrator ID
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: bundle_name
                            
                            	Bundle name
                            	**type**\:  str
                            
                            .. attribute:: bundle_state
                            
                            	Bundle state
                            	**type**\:   :py:class:`BmdMlacpBdlStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpBdlStateEnumEnum>`
                            
                            .. attribute:: mac_address
                            
                            	Bundle MAC address
                            	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData.MlacpBundleData.MacAddress>`
                            
                            .. attribute:: mlacp_node_id
                            
                            	mLACP Device ID
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: port_priority
                            
                            	Bundle port priority
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.aggregator_id = None
                                self.bundle_name = None
                                self.bundle_state = None
                                self.mac_address = BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData.MlacpBundleData.MacAddress()
                                self.mac_address.parent = self
                                self.mlacp_node_id = None
                                self.port_priority = None


                            class MacAddress(object):
                                """
                                Bundle MAC address
                                
                                .. attribute:: address
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData.MlacpBundleData.MacAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.aggregator_id is not None:
                                    return True

                                if self.bundle_name is not None:
                                    return True

                                if self.bundle_state is not None:
                                    return True

                                if self.mac_address is not None and self.mac_address._has_data():
                                    return True

                                if self.mlacp_node_id is not None:
                                    return True

                                if self.port_priority is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData.MlacpBundleData']['meta_info']


                        class MlacpMemberData(object):
                            """
                            mLACP information for the member
                            
                            .. attribute:: configured_priority
                            
                            	Configured priority of the member in the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: interface_handle
                            
                            	Member's interface handle (local device's members only)
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: member_state
                            
                            	Member state
                            	**type**\:   :py:class:`BmdMlacpMbrStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpMbrStateEnumEnum>`
                            
                            .. attribute:: mlacp_node_id
                            
                            	mLACP Device ID
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: operational_priority
                            
                            	Operational priority of the member in the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: port_name
                            
                            	Port Name
                            	**type**\:  str
                            
                            .. attribute:: port_number
                            
                            	Port number of the member
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.configured_priority = None
                                self.interface_handle = None
                                self.member_state = None
                                self.mlacp_node_id = None
                                self.operational_priority = None
                                self.port_name = None
                                self.port_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.configured_priority is not None:
                                    return True

                                if self.interface_handle is not None:
                                    return True

                                if self.member_state is not None:
                                    return True

                                if self.mlacp_node_id is not None:
                                    return True

                                if self.operational_priority is not None:
                                    return True

                                if self.port_name is not None:
                                    return True

                                if self.port_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData.MlacpMemberData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_interface_key is not None:
                                return True

                            if self.media_type is not None:
                                return True

                            if self.mlacp_bundle_data is not None:
                                for child_ref in self.mlacp_bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.mlacp_member_data is not None:
                                for child_ref in self.mlacp_member_data:
                                    if child_ref._has_data():
                                        return True

                            if self.redundancy_object_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem.BundleData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief-iccp-group-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_data is not None:
                            for child_ref in self.bundle_data:
                                if child_ref._has_data():
                                    return True

                        if self.iccp_group_data is not None and self.iccp_group_data._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup.MlacpBriefIccpGroupItem']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief-iccp-groups/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief-iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.mlacp_brief_iccp_group_item is not None and self.mlacp_brief_iccp_group_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups.MlacpBriefIccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief-iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.mlacp_brief_iccp_group is not None:
                    for child_ref in self.mlacp_brief_iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpBrief.MlacpBriefIccpGroups']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-brief'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.mlacp_brief_iccp_groups is not None and self.mlacp_brief_iccp_groups._has_data():
                return True

            if self.mlacp_bundle_briefs is not None and self.mlacp_bundle_briefs._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.MlacpBrief']['meta_info']


    class Mlacp(object):
        """
        mLACP Information for Interchassis Groups and
        bundles
        
        .. attribute:: mlacp_bundles
        
        	Bundle interfaces with mLACP information
        	**type**\:   :py:class:`MlacpBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles>`
        
        .. attribute:: mlacp_iccp_groups
        
        	ICCP Groups with mLACP information
        	**type**\:   :py:class:`MlacpIccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.mlacp_bundles = BundleInformation.Mlacp.MlacpBundles()
            self.mlacp_bundles.parent = self
            self.mlacp_iccp_groups = BundleInformation.Mlacp.MlacpIccpGroups()
            self.mlacp_iccp_groups.parent = self


        class MlacpBundles(object):
            """
            Bundle interfaces with mLACP information
            
            .. attribute:: mlacp_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`MlacpBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.mlacp_bundle = YList()
                self.mlacp_bundle.parent = self
                self.mlacp_bundle.name = 'mlacp_bundle'


            class MlacpBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: mlacp_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`MlacpBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.mlacp_bundle_item = BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem()
                    self.mlacp_bundle_item.parent = self


                class MlacpBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: mlacp_data
                    
                    	mLACP data for multiple ICCP Groups
                    	**type**\: list of    :py:class:`MlacpData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.mlacp_data = YList()
                        self.mlacp_data.parent = self
                        self.mlacp_data.name = 'mlacp_data'


                    class MlacpData(object):
                        """
                        mLACP data for multiple ICCP Groups
                        
                        .. attribute:: bundle_data
                        
                        	Bundle information
                        	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData>`
                        
                        .. attribute:: iccp_group_data
                        
                        	ICCP Group information
                        	**type**\:   :py:class:`IccpGroupData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = YList()
                            self.bundle_data.parent = self
                            self.bundle_data.name = 'bundle_data'
                            self.iccp_group_data = BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData()
                            self.iccp_group_data.parent = self


                        class IccpGroupData(object):
                            """
                            ICCP Group information
                            
                            .. attribute:: connect_timer_running
                            
                            	Time remaining on connect timer innsecs
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group that the mLACP information is for
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: node_data
                            
                            	Information for the IG from the local and peer devices
                            	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData>`
                            
                            .. attribute:: singleton
                            
                            	Is the ICCP group in singleton mode (1 = singleton; 0 = not singleton)
                            	**type**\:  bool
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.connect_timer_running = None
                                self.iccp_group_id = None
                                self.node_data = YList()
                                self.node_data.parent = self
                                self.node_data.name = 'node_data'
                                self.singleton = None


                            class NodeData(object):
                                """
                                Information for the IG from the local and peer
                                devices
                                
                                .. attribute:: iccp_group_state
                                
                                	Node synchronization state
                                	**type**\:   :py:class:`BmdMlacpNodeSyncEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeSyncEnumEnum>`
                                
                                .. attribute:: ldp_id
                                
                                	LDP ID of the device
                                	**type**\:  str
                                
                                	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                                
                                .. attribute:: mlacp_node_id
                                
                                	mLACP Device ID
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: node_state
                                
                                	Node state
                                	**type**\:   :py:class:`BmdMlacpNodeStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeStateEnumEnum>`
                                
                                .. attribute:: system_id
                                
                                	System ID for the ICCP Group
                                	**type**\:   :py:class:`SystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData.SystemId>`
                                
                                .. attribute:: version_number
                                
                                	Version of the protocol being used
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.iccp_group_state = None
                                    self.ldp_id = None
                                    self.mlacp_node_id = None
                                    self.node_state = None
                                    self.system_id = BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData.SystemId()
                                    self.system_id.parent = self
                                    self.version_number = None


                                class SystemId(object):
                                    """
                                    System ID for the ICCP Group
                                    
                                    .. attribute:: system_mac_addr
                                    
                                    	MAC Address used to identify the system
                                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData.SystemId.SystemMacAddr>`
                                    
                                    .. attribute:: system_prio
                                    
                                    	Priority of the system
                                    	**type**\:  int
                                    
                                    	**range:** 0..65535
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.system_mac_addr = BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData.SystemId.SystemMacAddr()
                                        self.system_mac_addr.parent = self
                                        self.system_prio = None


                                    class SystemMacAddr(object):
                                        """
                                        MAC Address used to identify the system
                                        
                                        .. attribute:: macaddr
                                        
                                        	macaddr
                                        	**type**\:  str
                                        
                                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.macaddr = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.macaddr is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData.SystemId.SystemMacAddr']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-id'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                            return True

                                        if self.system_prio is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData.SystemId']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.iccp_group_state is not None:
                                        return True

                                    if self.ldp_id is not None:
                                        return True

                                    if self.mlacp_node_id is not None:
                                        return True

                                    if self.node_state is not None:
                                        return True

                                    if self.system_id is not None and self.system_id._has_data():
                                        return True

                                    if self.version_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData.NodeData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.connect_timer_running is not None:
                                    return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.node_data is not None:
                                    for child_ref in self.node_data:
                                        if child_ref._has_data():
                                            return True

                                if self.singleton is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.IccpGroupData']['meta_info']


                        class BundleData(object):
                            """
                            Bundle information
                            
                            .. attribute:: bundle_interface_key
                            
                            	Bundle interface key
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: media_type
                            
                            	The media type of the bundle interface
                            	**type**\:   :py:class:`BundleMediaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMediaEnum>`
                            
                            .. attribute:: mlacp_bundle_data
                            
                            	mLACP information for the bundle
                            	**type**\: list of    :py:class:`MlacpBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData.MlacpBundleData>`
                            
                            .. attribute:: mlacp_member_data
                            
                            	mLACP information for the member
                            	**type**\: list of    :py:class:`MlacpMemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData.MlacpMemberData>`
                            
                            .. attribute:: redundancy_object_id
                            
                            	Redundancy Object ID of the bundle
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_interface_key = None
                                self.media_type = None
                                self.mlacp_bundle_data = YList()
                                self.mlacp_bundle_data.parent = self
                                self.mlacp_bundle_data.name = 'mlacp_bundle_data'
                                self.mlacp_member_data = YList()
                                self.mlacp_member_data.parent = self
                                self.mlacp_member_data.name = 'mlacp_member_data'
                                self.redundancy_object_id = None


                            class MlacpBundleData(object):
                                """
                                mLACP information for the bundle
                                
                                .. attribute:: aggregator_id
                                
                                	Bundle aggregrator ID
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: bundle_name
                                
                                	Bundle name
                                	**type**\:  str
                                
                                .. attribute:: bundle_state
                                
                                	Bundle state
                                	**type**\:   :py:class:`BmdMlacpBdlStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpBdlStateEnumEnum>`
                                
                                .. attribute:: mac_address
                                
                                	Bundle MAC address
                                	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData.MlacpBundleData.MacAddress>`
                                
                                .. attribute:: mlacp_node_id
                                
                                	mLACP Device ID
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: port_priority
                                
                                	Bundle port priority
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.aggregator_id = None
                                    self.bundle_name = None
                                    self.bundle_state = None
                                    self.mac_address = BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData.MlacpBundleData.MacAddress()
                                    self.mac_address.parent = self
                                    self.mlacp_node_id = None
                                    self.port_priority = None


                                class MacAddress(object):
                                    """
                                    Bundle MAC address
                                    
                                    .. attribute:: address
                                    
                                    	MAC address
                                    	**type**\:  str
                                    
                                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.address = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.address is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData.MlacpBundleData.MacAddress']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.aggregator_id is not None:
                                        return True

                                    if self.bundle_name is not None:
                                        return True

                                    if self.bundle_state is not None:
                                        return True

                                    if self.mac_address is not None and self.mac_address._has_data():
                                        return True

                                    if self.mlacp_node_id is not None:
                                        return True

                                    if self.port_priority is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData.MlacpBundleData']['meta_info']


                            class MlacpMemberData(object):
                                """
                                mLACP information for the member
                                
                                .. attribute:: configured_priority
                                
                                	Configured priority of the member in the bundle
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: interface_handle
                                
                                	Member's interface handle (local device's members only)
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: member_state
                                
                                	Member state
                                	**type**\:   :py:class:`BmdMlacpMbrStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpMbrStateEnumEnum>`
                                
                                .. attribute:: mlacp_node_id
                                
                                	mLACP Device ID
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: operational_priority
                                
                                	Operational priority of the member in the bundle
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: port_name
                                
                                	Port Name
                                	**type**\:  str
                                
                                .. attribute:: port_number
                                
                                	Port number of the member
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.configured_priority = None
                                    self.interface_handle = None
                                    self.member_state = None
                                    self.mlacp_node_id = None
                                    self.operational_priority = None
                                    self.port_name = None
                                    self.port_number = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.configured_priority is not None:
                                        return True

                                    if self.interface_handle is not None:
                                        return True

                                    if self.member_state is not None:
                                        return True

                                    if self.mlacp_node_id is not None:
                                        return True

                                    if self.operational_priority is not None:
                                        return True

                                    if self.port_name is not None:
                                        return True

                                    if self.port_number is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData.MlacpMemberData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_interface_key is not None:
                                    return True

                                if self.media_type is not None:
                                    return True

                                if self.mlacp_bundle_data is not None:
                                    for child_ref in self.mlacp_bundle_data:
                                        if child_ref._has_data():
                                            return True

                                if self.mlacp_member_data is not None:
                                    for child_ref in self.mlacp_member_data:
                                        if child_ref._has_data():
                                            return True

                                if self.redundancy_object_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData.BundleData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None:
                                for child_ref in self.bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.iccp_group_data is not None and self.iccp_group_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem.MlacpData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.mlacp_data is not None:
                            for child_ref in self.mlacp_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle.MlacpBundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundles/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.mlacp_bundle_item is not None and self.mlacp_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Mlacp.MlacpBundles.MlacpBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.mlacp_bundle is not None:
                    for child_ref in self.mlacp_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Mlacp.MlacpBundles']['meta_info']


        class MlacpIccpGroups(object):
            """
            ICCP Groups with mLACP information
            
            .. attribute:: mlacp_iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`MlacpIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.mlacp_iccp_group = YList()
                self.mlacp_iccp_group.parent = self
                self.mlacp_iccp_group.name = 'mlacp_iccp_group'


            class MlacpIccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: mlacp_iccp_group_item
                
                	Data for this item
                	**type**\:   :py:class:`MlacpIccpGroupItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.mlacp_iccp_group_item = BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem()
                    self.mlacp_iccp_group_item.parent = self


                class MlacpIccpGroupItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: bundle_data
                    
                    	Bundle information
                    	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData>`
                    
                    .. attribute:: iccp_group_data
                    
                    	ICCP Group information
                    	**type**\:   :py:class:`IccpGroupData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_data = YList()
                        self.bundle_data.parent = self
                        self.bundle_data.name = 'bundle_data'
                        self.iccp_group_data = BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData()
                        self.iccp_group_data.parent = self


                    class IccpGroupData(object):
                        """
                        ICCP Group information
                        
                        .. attribute:: connect_timer_running
                        
                        	Time remaining on connect timer innsecs
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group that the mLACP information is for
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: node_data
                        
                        	Information for the IG from the local and peer devices
                        	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData>`
                        
                        .. attribute:: singleton
                        
                        	Is the ICCP group in singleton mode (1 = singleton; 0 = not singleton)
                        	**type**\:  bool
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.connect_timer_running = None
                            self.iccp_group_id = None
                            self.node_data = YList()
                            self.node_data.parent = self
                            self.node_data.name = 'node_data'
                            self.singleton = None


                        class NodeData(object):
                            """
                            Information for the IG from the local and peer
                            devices
                            
                            .. attribute:: iccp_group_state
                            
                            	Node synchronization state
                            	**type**\:   :py:class:`BmdMlacpNodeSyncEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeSyncEnumEnum>`
                            
                            .. attribute:: ldp_id
                            
                            	LDP ID of the device
                            	**type**\:  str
                            
                            	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                            
                            .. attribute:: mlacp_node_id
                            
                            	mLACP Device ID
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: node_state
                            
                            	Node state
                            	**type**\:   :py:class:`BmdMlacpNodeStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpNodeStateEnumEnum>`
                            
                            .. attribute:: system_id
                            
                            	System ID for the ICCP Group
                            	**type**\:   :py:class:`SystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData.SystemId>`
                            
                            .. attribute:: version_number
                            
                            	Version of the protocol being used
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.iccp_group_state = None
                                self.ldp_id = None
                                self.mlacp_node_id = None
                                self.node_state = None
                                self.system_id = BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData.SystemId()
                                self.system_id.parent = self
                                self.version_number = None


                            class SystemId(object):
                                """
                                System ID for the ICCP Group
                                
                                .. attribute:: system_mac_addr
                                
                                	MAC Address used to identify the system
                                	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData.SystemId.SystemMacAddr>`
                                
                                .. attribute:: system_prio
                                
                                	Priority of the system
                                	**type**\:  int
                                
                                	**range:** 0..65535
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.system_mac_addr = BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData.SystemId.SystemMacAddr()
                                    self.system_mac_addr.parent = self
                                    self.system_prio = None


                                class SystemMacAddr(object):
                                    """
                                    MAC Address used to identify the system
                                    
                                    .. attribute:: macaddr
                                    
                                    	macaddr
                                    	**type**\:  str
                                    
                                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.macaddr = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.macaddr is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData.SystemId.SystemMacAddr']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-id'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                        return True

                                    if self.system_prio is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData.SystemId']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.iccp_group_state is not None:
                                    return True

                                if self.ldp_id is not None:
                                    return True

                                if self.mlacp_node_id is not None:
                                    return True

                                if self.node_state is not None:
                                    return True

                                if self.system_id is not None and self.system_id._has_data():
                                    return True

                                if self.version_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData.NodeData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.connect_timer_running is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.node_data is not None:
                                for child_ref in self.node_data:
                                    if child_ref._has_data():
                                        return True

                            if self.singleton is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.IccpGroupData']['meta_info']


                    class BundleData(object):
                        """
                        Bundle information
                        
                        .. attribute:: bundle_interface_key
                        
                        	Bundle interface key
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: media_type
                        
                        	The media type of the bundle interface
                        	**type**\:   :py:class:`BundleMediaEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMediaEnum>`
                        
                        .. attribute:: mlacp_bundle_data
                        
                        	mLACP information for the bundle
                        	**type**\: list of    :py:class:`MlacpBundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData.MlacpBundleData>`
                        
                        .. attribute:: mlacp_member_data
                        
                        	mLACP information for the member
                        	**type**\: list of    :py:class:`MlacpMemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData.MlacpMemberData>`
                        
                        .. attribute:: redundancy_object_id
                        
                        	Redundancy Object ID of the bundle
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_interface_key = None
                            self.media_type = None
                            self.mlacp_bundle_data = YList()
                            self.mlacp_bundle_data.parent = self
                            self.mlacp_bundle_data.name = 'mlacp_bundle_data'
                            self.mlacp_member_data = YList()
                            self.mlacp_member_data.parent = self
                            self.mlacp_member_data.name = 'mlacp_member_data'
                            self.redundancy_object_id = None


                        class MlacpBundleData(object):
                            """
                            mLACP information for the bundle
                            
                            .. attribute:: aggregator_id
                            
                            	Bundle aggregrator ID
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: bundle_name
                            
                            	Bundle name
                            	**type**\:  str
                            
                            .. attribute:: bundle_state
                            
                            	Bundle state
                            	**type**\:   :py:class:`BmdMlacpBdlStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpBdlStateEnumEnum>`
                            
                            .. attribute:: mac_address
                            
                            	Bundle MAC address
                            	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData.MlacpBundleData.MacAddress>`
                            
                            .. attribute:: mlacp_node_id
                            
                            	mLACP Device ID
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: port_priority
                            
                            	Bundle port priority
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.aggregator_id = None
                                self.bundle_name = None
                                self.bundle_state = None
                                self.mac_address = BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData.MlacpBundleData.MacAddress()
                                self.mac_address.parent = self
                                self.mlacp_node_id = None
                                self.port_priority = None


                            class MacAddress(object):
                                """
                                Bundle MAC address
                                
                                .. attribute:: address
                                
                                	MAC address
                                	**type**\:  str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.address = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.address is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData.MlacpBundleData.MacAddress']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.aggregator_id is not None:
                                    return True

                                if self.bundle_name is not None:
                                    return True

                                if self.bundle_state is not None:
                                    return True

                                if self.mac_address is not None and self.mac_address._has_data():
                                    return True

                                if self.mlacp_node_id is not None:
                                    return True

                                if self.port_priority is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData.MlacpBundleData']['meta_info']


                        class MlacpMemberData(object):
                            """
                            mLACP information for the member
                            
                            .. attribute:: configured_priority
                            
                            	Configured priority of the member in the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: interface_handle
                            
                            	Member's interface handle (local device's members only)
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: member_state
                            
                            	Member state
                            	**type**\:   :py:class:`BmdMlacpMbrStateEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpMbrStateEnumEnum>`
                            
                            .. attribute:: mlacp_node_id
                            
                            	mLACP Device ID
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: operational_priority
                            
                            	Operational priority of the member in the bundle
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            .. attribute:: port_name
                            
                            	Port Name
                            	**type**\:  str
                            
                            .. attribute:: port_number
                            
                            	Port number of the member
                            	**type**\:  int
                            
                            	**range:** 0..65535
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.configured_priority = None
                                self.interface_handle = None
                                self.member_state = None
                                self.mlacp_node_id = None
                                self.operational_priority = None
                                self.port_name = None
                                self.port_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.configured_priority is not None:
                                    return True

                                if self.interface_handle is not None:
                                    return True

                                if self.member_state is not None:
                                    return True

                                if self.mlacp_node_id is not None:
                                    return True

                                if self.operational_priority is not None:
                                    return True

                                if self.port_name is not None:
                                    return True

                                if self.port_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData.MlacpMemberData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_interface_key is not None:
                                return True

                            if self.media_type is not None:
                                return True

                            if self.mlacp_bundle_data is not None:
                                for child_ref in self.mlacp_bundle_data:
                                    if child_ref._has_data():
                                        return True

                            if self.mlacp_member_data is not None:
                                for child_ref in self.mlacp_member_data:
                                    if child_ref._has_data():
                                        return True

                            if self.redundancy_object_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem.BundleData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-iccp-group-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_data is not None:
                            for child_ref in self.bundle_data:
                                if child_ref._has_data():
                                    return True

                        if self.iccp_group_data is not None and self.iccp_group_data._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup.MlacpIccpGroupItem']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp/Cisco-IOS-XR-bundlemgr-oper:mlacp-iccp-groups/Cisco-IOS-XR-bundlemgr-oper:mlacp-iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.mlacp_iccp_group_item is not None and self.mlacp_iccp_group_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups.MlacpIccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp/Cisco-IOS-XR-bundlemgr-oper:mlacp-iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.mlacp_iccp_group is not None:
                    for child_ref in self.mlacp_iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Mlacp.MlacpIccpGroups']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.mlacp_bundles is not None and self.mlacp_bundles._has_data():
                return True

            if self.mlacp_iccp_groups is not None and self.mlacp_iccp_groups._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.Mlacp']['meta_info']


    class MacAllocation(object):
        """
        Information about allocated MAC addresses that
        are not in use
        
        .. attribute:: mac_allocation_global
        
        	All MAC addresses that are allocated but currently not in use
        	**type**\:   :py:class:`MacAllocationGlobal <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MacAllocation.MacAllocationGlobal>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.mac_allocation_global = BundleInformation.MacAllocation.MacAllocationGlobal()
            self.mac_allocation_global.parent = self


        class MacAllocationGlobal(object):
            """
            All MAC addresses that are allocated but
            currently not in use
            
            .. attribute:: mac_allocation_global_item
            
            	Data for this item
            	**type**\:   :py:class:`MacAllocationGlobalItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MacAllocation.MacAllocationGlobal.MacAllocationGlobalItem>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.mac_allocation_global_item = BundleInformation.MacAllocation.MacAllocationGlobal.MacAllocationGlobalItem()
                self.mac_allocation_global_item.parent = self


            class MacAllocationGlobalItem(object):
                """
                Data for this item
                
                .. attribute:: mac_address
                
                	MAC addresses allocated but unused
                	**type**\: list of    :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MacAllocation.MacAllocationGlobal.MacAllocationGlobalItem.MacAddress>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.mac_address = YList()
                    self.mac_address.parent = self
                    self.mac_address.name = 'mac_address'


                class MacAddress(object):
                    """
                    MAC addresses allocated but unused
                    
                    .. attribute:: address
                    
                    	MAC address
                    	**type**\:  str
                    
                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.address = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mac-allocation/Cisco-IOS-XR-bundlemgr-oper:mac-allocation-global/Cisco-IOS-XR-bundlemgr-oper:mac-allocation-global-item/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MacAllocation.MacAllocationGlobal.MacAllocationGlobalItem.MacAddress']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mac-allocation/Cisco-IOS-XR-bundlemgr-oper:mac-allocation-global/Cisco-IOS-XR-bundlemgr-oper:mac-allocation-global-item'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.mac_address is not None:
                        for child_ref in self.mac_address:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MacAllocation.MacAllocationGlobal.MacAllocationGlobalItem']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mac-allocation/Cisco-IOS-XR-bundlemgr-oper:mac-allocation-global'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.mac_allocation_global_item is not None and self.mac_allocation_global_item._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MacAllocation.MacAllocationGlobal']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mac-allocation'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.mac_allocation_global is not None and self.mac_allocation_global._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.MacAllocation']['meta_info']


    class Events(object):
        """
        Events information for bundles and members
        
        .. attribute:: events_bundles
        
        	Bundle interfaces with events information
        	**type**\:   :py:class:`EventsBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles>`
        
        .. attribute:: events_members
        
        	Member interfaces with events information
        	**type**\:   :py:class:`EventsMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.events_bundles = BundleInformation.Events.EventsBundles()
            self.events_bundles.parent = self
            self.events_members = BundleInformation.Events.EventsMembers()
            self.events_members.parent = self


        class EventsMembers(object):
            """
            Member interfaces with events information
            
            .. attribute:: events_member
            
            	Member interface
            	**type**\: list of    :py:class:`EventsMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_member = YList()
                self.events_member.parent = self
                self.events_member.name = 'events_member'


            class EventsMember(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: events_member_ancestor
                
                	Data for this item and its parent bundle
                	**type**\:   :py:class:`EventsMemberAncestor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor>`
                
                .. attribute:: events_member_item
                
                	Data for this item
                	**type**\:   :py:class:`EventsMemberItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.events_member_ancestor = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor()
                    self.events_member_ancestor.parent = self
                    self.events_member_item = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem()
                    self.events_member_item.parent = self


                class EventsMemberItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-member-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberItem']['meta_info']


                class EventsMemberAncestor(object):
                    """
                    Data for this item and its parent bundle
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-member-ancestor'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember.EventsMemberAncestor']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events/Cisco-IOS-XR-bundlemgr-oper:events-members/Cisco-IOS-XR-bundlemgr-oper:events-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.events_member_ancestor is not None and self.events_member_ancestor._has_data():
                        return True

                    if self.events_member_item is not None and self.events_member_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Events.EventsMembers.EventsMember']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events/Cisco-IOS-XR-bundlemgr-oper:events-members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_member is not None:
                    for child_ref in self.events_member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Events.EventsMembers']['meta_info']


        class EventsBundles(object):
            """
            Bundle interfaces with events information
            
            .. attribute:: events_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`EventsBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_bundle = YList()
                self.events_bundle.parent = self
                self.events_bundle.name = 'events_bundle'


            class EventsBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: events_bundle_ancestor
                
                	Data for this item and its parent bundle
                	**type**\:   :py:class:`EventsBundleAncestor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor>`
                
                .. attribute:: events_bundle_children_members
                
                	Children of bundle with events information
                	**type**\:   :py:class:`EventsBundleChildrenMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers>`
                
                .. attribute:: events_bundle_descendant
                
                	Data for this item and all its members
                	**type**\:   :py:class:`EventsBundleDescendant <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant>`
                
                .. attribute:: events_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`EventsBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.events_bundle_ancestor = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor()
                    self.events_bundle_ancestor.parent = self
                    self.events_bundle_children_members = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers()
                    self.events_bundle_children_members.parent = self
                    self.events_bundle_descendant = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant()
                    self.events_bundle_descendant.parent = self
                    self.events_bundle_item = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem()
                    self.events_bundle_item.parent = self


                class EventsBundleAncestor(object):
                    """
                    Data for this item and its parent bundle
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bundle-ancestor'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleAncestor']['meta_info']


                class EventsBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleItem']['meta_info']


                class EventsBundleDescendant(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: events_item
                    
                    	Event items
                    	**type**\: list of    :py:class:`EventsItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.events_item = YList()
                        self.events_item.parent = self
                        self.events_item.name = 'events_item'


                    class EventsItem(object):
                        """
                        Event items
                        
                        .. attribute:: item_name
                        
                        	Name for the current item to use
                        	**type**\:  str
                        
                        .. attribute:: items
                        
                        	Event items
                        	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.item_name = None
                            self.items = YList()
                            self.items.parent = self
                            self.items.name = 'items'


                        class Items(object):
                            """
                            Event items
                            
                            .. attribute:: bundle_evt_info
                            
                            	Event information for a bundle
                            	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.BundleEvtInfo>`
                            
                            .. attribute:: event_type
                            
                            	EventType
                            	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                            
                            .. attribute:: member_evt_info
                            
                            	Event information for a member
                            	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.MemberEvtInfo>`
                            
                            .. attribute:: rg_evt_info
                            
                            	Event information for an RG
                            	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.RgEvtInfo>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.BundleEvtInfo()
                                self.bundle_evt_info.parent = self
                                self.event_type = None
                                self.member_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.MemberEvtInfo()
                                self.member_evt_info.parent = self
                                self.rg_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.RgEvtInfo()
                                self.rg_evt_info.parent = self


                            class MemberEvtInfo(object):
                                """
                                Event information for a member
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.MemberEvtInfo.Data>`
                                
                                .. attribute:: member_event_type
                                
                                	Type of event for member
                                	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.MemberEvtInfo.Data()
                                    self.data.parent = self
                                    self.member_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.MemberEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.member_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.MemberEvtInfo']['meta_info']


                            class BundleEvtInfo(object):
                                """
                                Event information for a bundle
                                
                                .. attribute:: bundle_event_type
                                
                                	Type of event for bundle
                                	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.BundleEvtInfo.Data>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_event_type = None
                                    self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.BundleEvtInfo.Data()
                                    self.data.parent = self
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.BundleEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_event_type is not None:
                                        return True

                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.BundleEvtInfo']['meta_info']


                            class RgEvtInfo(object):
                                """
                                Event information for an RG
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.RgEvtInfo.Data>`
                                
                                .. attribute:: rg_event_type
                                
                                	Type of event for RG
                                	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.RgEvtInfo.Data()
                                    self.data.parent = self
                                    self.rg_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.RgEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.rg_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items.RgEvtInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                    return True

                                if self.event_type is not None:
                                    return True

                                if self.member_evt_info is not None and self.member_evt_info._has_data():
                                    return True

                                if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem.Items']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-item'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.item_name is not None:
                                return True

                            if self.items is not None:
                                for child_ref in self.items:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant.EventsItem']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bundle-descendant'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.events_item is not None:
                            for child_ref in self.events_item:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleDescendant']['meta_info']


                class EventsBundleChildrenMembers(object):
                    """
                    Children of bundle with events information
                    
                    .. attribute:: events_bundle_children_member
                    
                    	Bundle member item with events information
                    	**type**\: list of    :py:class:`EventsBundleChildrenMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.events_bundle_children_member = YList()
                        self.events_bundle_children_member.parent = self
                        self.events_bundle_children_member.name = 'events_bundle_children_member'


                    class EventsBundleChildrenMember(object):
                        """
                        Bundle member item with events information
                        
                        .. attribute:: member_interface  <key>
                        
                        	Member interface
                        	**type**\:  str
                        
                        .. attribute:: item_name
                        
                        	Name for the current item to use
                        	**type**\:  str
                        
                        .. attribute:: items
                        
                        	Event items
                        	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interface = None
                            self.item_name = None
                            self.items = YList()
                            self.items.parent = self
                            self.items.name = 'items'


                        class Items(object):
                            """
                            Event items
                            
                            .. attribute:: bundle_evt_info
                            
                            	Event information for a bundle
                            	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.BundleEvtInfo>`
                            
                            .. attribute:: event_type
                            
                            	EventType
                            	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                            
                            .. attribute:: member_evt_info
                            
                            	Event information for a member
                            	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.MemberEvtInfo>`
                            
                            .. attribute:: rg_evt_info
                            
                            	Event information for an RG
                            	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.RgEvtInfo>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.BundleEvtInfo()
                                self.bundle_evt_info.parent = self
                                self.event_type = None
                                self.member_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.MemberEvtInfo()
                                self.member_evt_info.parent = self
                                self.rg_evt_info = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.RgEvtInfo()
                                self.rg_evt_info.parent = self


                            class MemberEvtInfo(object):
                                """
                                Event information for a member
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.MemberEvtInfo.Data>`
                                
                                .. attribute:: member_event_type
                                
                                	Type of event for member
                                	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.MemberEvtInfo.Data()
                                    self.data.parent = self
                                    self.member_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.MemberEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.member_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.MemberEvtInfo']['meta_info']


                            class BundleEvtInfo(object):
                                """
                                Event information for a bundle
                                
                                .. attribute:: bundle_event_type
                                
                                	Type of event for bundle
                                	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.BundleEvtInfo.Data>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_event_type = None
                                    self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.BundleEvtInfo.Data()
                                    self.data.parent = self
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.BundleEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_event_type is not None:
                                        return True

                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.BundleEvtInfo']['meta_info']


                            class RgEvtInfo(object):
                                """
                                Event information for an RG
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.RgEvtInfo.Data>`
                                
                                .. attribute:: rg_event_type
                                
                                	Type of event for RG
                                	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.RgEvtInfo.Data()
                                    self.data.parent = self
                                    self.rg_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.RgEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.rg_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items.RgEvtInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                    return True

                                if self.event_type is not None:
                                    return True

                                if self.member_evt_info is not None and self.member_evt_info._has_data():
                                    return True

                                if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember.Items']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.member_interface is None:
                                raise YPYModelError('Key property member_interface is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bundle-children-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interface is not None:
                                return True

                            if self.item_name is not None:
                                return True

                            if self.items is not None:
                                for child_ref in self.items:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers.EventsBundleChildrenMember']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bundle-children-members'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.events_bundle_children_member is not None:
                            for child_ref in self.events_bundle_children_member:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle.EventsBundleChildrenMembers']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events/Cisco-IOS-XR-bundlemgr-oper:events-bundles/Cisco-IOS-XR-bundlemgr-oper:events-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.events_bundle_ancestor is not None and self.events_bundle_ancestor._has_data():
                        return True

                    if self.events_bundle_children_members is not None and self.events_bundle_children_members._has_data():
                        return True

                    if self.events_bundle_descendant is not None and self.events_bundle_descendant._has_data():
                        return True

                    if self.events_bundle_item is not None and self.events_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.Events.EventsBundles.EventsBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events/Cisco-IOS-XR-bundlemgr-oper:events-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_bundle is not None:
                    for child_ref in self.events_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.Events.EventsBundles']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.events_bundles is not None and self.events_bundles._has_data():
                return True

            if self.events_members is not None and self.events_members._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.Events']['meta_info']


    class EventsBdl(object):
        """
        Bundle events information for bundles and
        members
        
        .. attribute:: events_bdl_bundles
        
        	Bundle interfaces with bundle events information
        	**type**\:   :py:class:`EventsBdlBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles>`
        
        .. attribute:: events_bdl_iccp_groups
        
        	Bundle events for all ICCP Groups
        	**type**\:   :py:class:`EventsBdlIccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups>`
        
        .. attribute:: events_bdl_members
        
        	Member interfaces with bundle events information
        	**type**\:   :py:class:`EventsBdlMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.events_bdl_bundles = BundleInformation.EventsBdl.EventsBdlBundles()
            self.events_bdl_bundles.parent = self
            self.events_bdl_iccp_groups = BundleInformation.EventsBdl.EventsBdlIccpGroups()
            self.events_bdl_iccp_groups.parent = self
            self.events_bdl_members = BundleInformation.EventsBdl.EventsBdlMembers()
            self.events_bdl_members.parent = self


        class EventsBdlMembers(object):
            """
            Member interfaces with bundle events
            information
            
            .. attribute:: events_bdl_member
            
            	Member interface
            	**type**\: list of    :py:class:`EventsBdlMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_bdl_member = YList()
                self.events_bdl_member.parent = self
                self.events_bdl_member.name = 'events_bdl_member'


            class EventsBdlMember(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: events_bdl_member_ancestor
                
                	Data for this item and its parent bundle
                	**type**\:   :py:class:`EventsBdlMemberAncestor <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.events_bdl_member_ancestor = BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor()
                    self.events_bdl_member_ancestor.parent = self


                class EventsBdlMemberAncestor(object):
                    """
                    Data for this item and its parent bundle
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bdl-member-ancestor'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember.EventsBdlMemberAncestor']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-bdl/Cisco-IOS-XR-bundlemgr-oper:events-bdl-members/Cisco-IOS-XR-bundlemgr-oper:events-bdl-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.events_bdl_member_ancestor is not None and self.events_bdl_member_ancestor._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers.EventsBdlMember']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-bdl/Cisco-IOS-XR-bundlemgr-oper:events-bdl-members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_bdl_member is not None:
                    for child_ref in self.events_bdl_member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlMembers']['meta_info']


        class EventsBdlBundles(object):
            """
            Bundle interfaces with bundle events
            information
            
            .. attribute:: events_bdl_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`EventsBdlBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_bdl_bundle = YList()
                self.events_bdl_bundle.parent = self
                self.events_bdl_bundle.name = 'events_bdl_bundle'


            class EventsBdlBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: events_bdl_bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`EventsBdlBundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.events_bdl_bundle_item = BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem()
                    self.events_bdl_bundle_item.parent = self


                class EventsBdlBundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bdl-bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle.EventsBdlBundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-bdl/Cisco-IOS-XR-bundlemgr-oper:events-bdl-bundles/Cisco-IOS-XR-bundlemgr-oper:events-bdl-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.events_bdl_bundle_item is not None and self.events_bdl_bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles.EventsBdlBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-bdl/Cisco-IOS-XR-bundlemgr-oper:events-bdl-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_bdl_bundle is not None:
                    for child_ref in self.events_bdl_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlBundles']['meta_info']


        class EventsBdlIccpGroups(object):
            """
            Bundle events for all ICCP Groups
            
            .. attribute:: events_bdl_iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`EventsBdlIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_bdl_iccp_group = YList()
                self.events_bdl_iccp_group.parent = self
                self.events_bdl_iccp_group.name = 'events_bdl_iccp_group'


            class EventsBdlIccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: events_bdl_bundle_descendant_iccp_group
                
                	Data for this item and all its members
                	**type**\:   :py:class:`EventsBdlBundleDescendantIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.events_bdl_bundle_descendant_iccp_group = BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup()
                    self.events_bdl_bundle_descendant_iccp_group.parent = self


                class EventsBdlBundleDescendantIccpGroup(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: events_item
                    
                    	Event items
                    	**type**\: list of    :py:class:`EventsItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.events_item = YList()
                        self.events_item.parent = self
                        self.events_item.name = 'events_item'


                    class EventsItem(object):
                        """
                        Event items
                        
                        .. attribute:: item_name
                        
                        	Name for the current item to use
                        	**type**\:  str
                        
                        .. attribute:: items
                        
                        	Event items
                        	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.item_name = None
                            self.items = YList()
                            self.items.parent = self
                            self.items.name = 'items'


                        class Items(object):
                            """
                            Event items
                            
                            .. attribute:: bundle_evt_info
                            
                            	Event information for a bundle
                            	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo>`
                            
                            .. attribute:: event_type
                            
                            	EventType
                            	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                            
                            .. attribute:: member_evt_info
                            
                            	Event information for a member
                            	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo>`
                            
                            .. attribute:: rg_evt_info
                            
                            	Event information for an RG
                            	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_evt_info = BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo()
                                self.bundle_evt_info.parent = self
                                self.event_type = None
                                self.member_evt_info = BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo()
                                self.member_evt_info.parent = self
                                self.rg_evt_info = BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo()
                                self.rg_evt_info.parent = self


                            class MemberEvtInfo(object):
                                """
                                Event information for a member
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo.Data>`
                                
                                .. attribute:: member_event_type
                                
                                	Type of event for member
                                	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo.Data()
                                    self.data.parent = self
                                    self.member_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.member_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo']['meta_info']


                            class BundleEvtInfo(object):
                                """
                                Event information for a bundle
                                
                                .. attribute:: bundle_event_type
                                
                                	Type of event for bundle
                                	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo.Data>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_event_type = None
                                    self.data = BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo.Data()
                                    self.data.parent = self
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_event_type is not None:
                                        return True

                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo']['meta_info']


                            class RgEvtInfo(object):
                                """
                                Event information for an RG
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo.Data>`
                                
                                .. attribute:: rg_event_type
                                
                                	Type of event for RG
                                	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo.Data()
                                    self.data.parent = self
                                    self.rg_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.rg_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                    return True

                                if self.event_type is not None:
                                    return True

                                if self.member_evt_info is not None and self.member_evt_info._has_data():
                                    return True

                                if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem.Items']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-item'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.item_name is not None:
                                return True

                            if self.items is not None:
                                for child_ref in self.items:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup.EventsItem']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-bdl-bundle-descendant-iccp-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.events_item is not None:
                            for child_ref in self.events_item:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup.EventsBdlBundleDescendantIccpGroup']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-bdl/Cisco-IOS-XR-bundlemgr-oper:events-bdl-iccp-groups/Cisco-IOS-XR-bundlemgr-oper:events-bdl-iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.events_bdl_bundle_descendant_iccp_group is not None and self.events_bdl_bundle_descendant_iccp_group._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups.EventsBdlIccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-bdl/Cisco-IOS-XR-bundlemgr-oper:events-bdl-iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_bdl_iccp_group is not None:
                    for child_ref in self.events_bdl_iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsBdl.EventsBdlIccpGroups']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-bdl'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.events_bdl_bundles is not None and self.events_bdl_bundles._has_data():
                return True

            if self.events_bdl_iccp_groups is not None and self.events_bdl_iccp_groups._has_data():
                return True

            if self.events_bdl_members is not None and self.events_bdl_members._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.EventsBdl']['meta_info']


    class BundleBriefs(object):
        """
        Bundle interfaces with common bundle information
        
        .. attribute:: bundle_brief
        
        	Bundle interface
        	**type**\: list of    :py:class:`BundleBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BundleBriefs.BundleBrief>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.bundle_brief = YList()
            self.bundle_brief.parent = self
            self.bundle_brief.name = 'bundle_brief'


        class BundleBrief(object):
            """
            Bundle interface
            
            .. attribute:: bundle_interface  <key>
            
            	Bundle interface
            	**type**\:  str
            
            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
            
            .. attribute:: bundle_brief_item
            
            	Data for this item
            	**type**\:   :py:class:`BundleBriefItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bundle_interface = None
                self.bundle_brief_item = BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem()
                self.bundle_brief_item.parent = self


            class BundleBriefItem(object):
                """
                Data for this item
                
                .. attribute:: active_foreign_member_count
                
                	The number of active foreign members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: active_member_count
                
                	The number of active local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: available_bandwidth
                
                	Bandwidth available to the bundle interface (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: bfd_config
                
                	Configuration values for BFD on bundle members
                	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.BfdConfig>`
                
                .. attribute:: bundle_interface_name
                
                	Bundle interface name
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: bundle_status
                
                	The state of the bundle
                	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                
                .. attribute:: cisco_extensions
                
                	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                	**type**\:  bool
                
                .. attribute:: collector_max_delay
                
                	Collector Max Delay
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: configured_bandwidth
                
                	Bandwidth configured on the bundle interface (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: configured_foreign_member_count
                
                	The number of configured local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: configured_member_count
                
                	The number of configured local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: effective_bandwidth
                
                	Effective bandwidth on the bundle interface (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: iccp_group_id
                
                	ICCP Group that the bundle is configured to
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: inter_chassis
                
                	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                	**type**\:  bool
                
                .. attribute:: ipv4bfd_status
                
                	The status of the BFD (IPv4) feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: ipv6bfd_status
                
                	The status of the BFD (IPv6) feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: is_active
                
                	Indicates the active/standby redundancy state of the device for the bundle
                	**type**\:  bool
                
                .. attribute:: lacp_nonrevertive
                
                	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                	**type**\:  bool
                
                .. attribute:: lacp_status
                
                	The status of the LACP feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: link_order_status
                
                	The status of the link order signaling feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: load_balance_hash_type
                
                	The type of hash to use for load balancing
                	**type**\:  str
                
                .. attribute:: load_balance_locality_threshold
                
                	The number of links required per rack for localized load balancing
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: mac_address
                
                	MAC address of this member
                	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.MacAddress>`
                
                .. attribute:: mac_source
                
                	The source of the MAC Address
                	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                
                .. attribute:: mac_source_member
                
                	The name of the member that supplied the MAC address
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: maximize_threshold_value_band_width
                
                	Attempt to maximize the bundle if bandwidth is below this value
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: maximize_threshold_value_links
                
                	Attempt to maximize the bundle if links are below this value
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: maximum_active_links
                
                	Maximum number of active links in the bundle
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: maximum_active_links_source
                
                	Source of maximum active links value
                	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                
                .. attribute:: minimum_active_links
                
                	Minimum number of active links for bundle to go up
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: minimum_bandwidth
                
                	Minimum bundle bandwidth for bundle to go up (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: mlacp_mode
                
                	Indicates the mode of the device for the bundle
                	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                
                .. attribute:: mlacp_status
                
                	The status of the mLACP feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: primary_member
                
                	Primary bundle member (no longer applicable)
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: recovery_delay
                
                	Number of seconds to wait before becoming active after recovering from a failure
                	**type**\:  int
                
                	**range:** 0..65535
                
                	**units**\: second
                
                .. attribute:: singleton
                
                	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                	**type**\:  bool
                
                .. attribute:: standby_member_count
                
                	The number of standby local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: suppression_timer
                
                	Timer for suppressing bundle state flaps
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: switchover_type
                
                	How a switchover of the bundle from this device will occur
                	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                
                .. attribute:: wait_while_timer
                
                	The wait while time used for member ports
                	**type**\:  int
                
                	**range:** 0..65535
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.active_foreign_member_count = None
                    self.active_member_count = None
                    self.available_bandwidth = None
                    self.bfd_config = YList()
                    self.bfd_config.parent = self
                    self.bfd_config.name = 'bfd_config'
                    self.bundle_interface_name = None
                    self.bundle_status = None
                    self.cisco_extensions = None
                    self.collector_max_delay = None
                    self.configured_bandwidth = None
                    self.configured_foreign_member_count = None
                    self.configured_member_count = None
                    self.effective_bandwidth = None
                    self.iccp_group_id = None
                    self.inter_chassis = None
                    self.ipv4bfd_status = None
                    self.ipv6bfd_status = None
                    self.is_active = None
                    self.lacp_nonrevertive = None
                    self.lacp_status = None
                    self.link_order_status = None
                    self.load_balance_hash_type = None
                    self.load_balance_locality_threshold = None
                    self.mac_address = BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.MacAddress()
                    self.mac_address.parent = self
                    self.mac_source = None
                    self.mac_source_member = None
                    self.maximize_threshold_value_band_width = None
                    self.maximize_threshold_value_links = None
                    self.maximum_active_links = None
                    self.maximum_active_links_source = None
                    self.minimum_active_links = None
                    self.minimum_bandwidth = None
                    self.mlacp_mode = None
                    self.mlacp_status = None
                    self.primary_member = None
                    self.recovery_delay = None
                    self.singleton = None
                    self.standby_member_count = None
                    self.suppression_timer = None
                    self.switchover_type = None
                    self.wait_while_timer = None


                class MacAddress(object):
                    """
                    MAC address of this member
                    
                    .. attribute:: address
                    
                    	MAC address
                    	**type**\:  str
                    
                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.address = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.MacAddress']['meta_info']


                class BfdConfig(object):
                    """
                    Configuration values for BFD on bundle members
                    
                    .. attribute:: bundle_status
                    
                    	Status of BFD on the bundle
                    	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                    
                    .. attribute:: destination_address
                    
                    	Configured destination address for BFD session
                    	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.BfdConfig.DestinationAddress>`
                    
                    .. attribute:: fast_detect
                    
                    	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                    	**type**\:  bool
                    
                    .. attribute:: mode_info
                    
                    	Standard used for per\-member BFD
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: nbr_unconfig_timer
                    
                    	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: pref_echo_min_interval
                    
                    	Preferred echo minimum interval for the BFD session (ms)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: pref_min_interval
                    
                    	Preferred minimum interval for the BFD session (ms)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: pref_multiplier
                    
                    	Preferred multiplier for the BFD session
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: start_timer
                    
                    	Time to wait on session start before declaring DOWN
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_status = None
                        self.destination_address = BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.BfdConfig.DestinationAddress()
                        self.destination_address.parent = self
                        self.fast_detect = None
                        self.mode_info = None
                        self.nbr_unconfig_timer = None
                        self.pref_echo_min_interval = None
                        self.pref_min_interval = None
                        self.pref_multiplier = None
                        self.start_timer = None


                    class DestinationAddress(object):
                        """
                        Configured destination address for BFD session
                        
                        .. attribute:: af
                        
                        	AF
                        	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                        
                        .. attribute:: ipv4
                        
                        	IPv4 address type
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6
                        
                        	IPv6 address type
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af = None
                            self.ipv4 = None
                            self.ipv6 = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.af is not None:
                                return True

                            if self.ipv4 is not None:
                                return True

                            if self.ipv6 is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.BfdConfig.DestinationAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_status is not None:
                            return True

                        if self.destination_address is not None and self.destination_address._has_data():
                            return True

                        if self.fast_detect is not None:
                            return True

                        if self.mode_info is not None:
                            return True

                        if self.nbr_unconfig_timer is not None:
                            return True

                        if self.pref_echo_min_interval is not None:
                            return True

                        if self.pref_min_interval is not None:
                            return True

                        if self.pref_multiplier is not None:
                            return True

                        if self.start_timer is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem.BfdConfig']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-brief-item'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.active_foreign_member_count is not None:
                        return True

                    if self.active_member_count is not None:
                        return True

                    if self.available_bandwidth is not None:
                        return True

                    if self.bfd_config is not None:
                        for child_ref in self.bfd_config:
                            if child_ref._has_data():
                                return True

                    if self.bundle_interface_name is not None:
                        return True

                    if self.bundle_status is not None:
                        return True

                    if self.cisco_extensions is not None:
                        return True

                    if self.collector_max_delay is not None:
                        return True

                    if self.configured_bandwidth is not None:
                        return True

                    if self.configured_foreign_member_count is not None:
                        return True

                    if self.configured_member_count is not None:
                        return True

                    if self.effective_bandwidth is not None:
                        return True

                    if self.iccp_group_id is not None:
                        return True

                    if self.inter_chassis is not None:
                        return True

                    if self.ipv4bfd_status is not None:
                        return True

                    if self.ipv6bfd_status is not None:
                        return True

                    if self.is_active is not None:
                        return True

                    if self.lacp_nonrevertive is not None:
                        return True

                    if self.lacp_status is not None:
                        return True

                    if self.link_order_status is not None:
                        return True

                    if self.load_balance_hash_type is not None:
                        return True

                    if self.load_balance_locality_threshold is not None:
                        return True

                    if self.mac_address is not None and self.mac_address._has_data():
                        return True

                    if self.mac_source is not None:
                        return True

                    if self.mac_source_member is not None:
                        return True

                    if self.maximize_threshold_value_band_width is not None:
                        return True

                    if self.maximize_threshold_value_links is not None:
                        return True

                    if self.maximum_active_links is not None:
                        return True

                    if self.maximum_active_links_source is not None:
                        return True

                    if self.minimum_active_links is not None:
                        return True

                    if self.minimum_bandwidth is not None:
                        return True

                    if self.mlacp_mode is not None:
                        return True

                    if self.mlacp_status is not None:
                        return True

                    if self.primary_member is not None:
                        return True

                    if self.recovery_delay is not None:
                        return True

                    if self.singleton is not None:
                        return True

                    if self.standby_member_count is not None:
                        return True

                    if self.suppression_timer is not None:
                        return True

                    if self.switchover_type is not None:
                        return True

                    if self.wait_while_timer is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.BundleBriefs.BundleBrief.BundleBriefItem']['meta_info']

            @property
            def _common_path(self):
                if self.bundle_interface is None:
                    raise YPYModelError('Key property bundle_interface is None')

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bundle-briefs/Cisco-IOS-XR-bundlemgr-oper:bundle-brief[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bundle_interface is not None:
                    return True

                if self.bundle_brief_item is not None and self.bundle_brief_item._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.BundleBriefs.BundleBrief']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:bundle-briefs'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.bundle_brief is not None:
                for child_ref in self.bundle_brief:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.BundleBriefs']['meta_info']


    class EventsMbr(object):
        """
        Bundle member events information for bundles and
        members
        
        .. attribute:: events_mbr_bundles
        
        	Bundle interfaces with member events information
        	**type**\:   :py:class:`EventsMbrBundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles>`
        
        .. attribute:: events_mbr_iccp_groups
        
        	Member events for all ICCP Groups
        	**type**\:   :py:class:`EventsMbrIccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups>`
        
        .. attribute:: events_mbr_members
        
        	Member interfaces with bundle member events information
        	**type**\:   :py:class:`EventsMbrMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.events_mbr_bundles = BundleInformation.EventsMbr.EventsMbrBundles()
            self.events_mbr_bundles.parent = self
            self.events_mbr_iccp_groups = BundleInformation.EventsMbr.EventsMbrIccpGroups()
            self.events_mbr_iccp_groups.parent = self
            self.events_mbr_members = BundleInformation.EventsMbr.EventsMbrMembers()
            self.events_mbr_members.parent = self


        class EventsMbrBundles(object):
            """
            Bundle interfaces with member events
            information
            
            .. attribute:: events_mbr_bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`EventsMbrBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_mbr_bundle = YList()
                self.events_mbr_bundle.parent = self
                self.events_mbr_bundle.name = 'events_mbr_bundle'


            class EventsMbrBundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: events_mbr_bundle_children_members
                
                	Children of bundle with member events information
                	**type**\:   :py:class:`EventsMbrBundleChildrenMembers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers>`
                
                .. attribute:: events_mbr_bundle_descendant
                
                	Data for this item and all its members
                	**type**\:   :py:class:`EventsMbrBundleDescendant <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.events_mbr_bundle_children_members = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers()
                    self.events_mbr_bundle_children_members.parent = self
                    self.events_mbr_bundle_descendant = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant()
                    self.events_mbr_bundle_descendant.parent = self


                class EventsMbrBundleChildrenMembers(object):
                    """
                    Children of bundle with member events
                    information
                    
                    .. attribute:: events_mbr_bundle_children_member
                    
                    	Bundle member item with member events information
                    	**type**\: list of    :py:class:`EventsMbrBundleChildrenMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.events_mbr_bundle_children_member = YList()
                        self.events_mbr_bundle_children_member.parent = self
                        self.events_mbr_bundle_children_member.name = 'events_mbr_bundle_children_member'


                    class EventsMbrBundleChildrenMember(object):
                        """
                        Bundle member item with member events
                        information
                        
                        .. attribute:: member_interface  <key>
                        
                        	Member interface
                        	**type**\:  str
                        
                        .. attribute:: item_name
                        
                        	Name for the current item to use
                        	**type**\:  str
                        
                        .. attribute:: items
                        
                        	Event items
                        	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interface = None
                            self.item_name = None
                            self.items = YList()
                            self.items.parent = self
                            self.items.name = 'items'


                        class Items(object):
                            """
                            Event items
                            
                            .. attribute:: bundle_evt_info
                            
                            	Event information for a bundle
                            	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.BundleEvtInfo>`
                            
                            .. attribute:: event_type
                            
                            	EventType
                            	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                            
                            .. attribute:: member_evt_info
                            
                            	Event information for a member
                            	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.MemberEvtInfo>`
                            
                            .. attribute:: rg_evt_info
                            
                            	Event information for an RG
                            	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.RgEvtInfo>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_evt_info = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.BundleEvtInfo()
                                self.bundle_evt_info.parent = self
                                self.event_type = None
                                self.member_evt_info = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.MemberEvtInfo()
                                self.member_evt_info.parent = self
                                self.rg_evt_info = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.RgEvtInfo()
                                self.rg_evt_info.parent = self


                            class MemberEvtInfo(object):
                                """
                                Event information for a member
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.MemberEvtInfo.Data>`
                                
                                .. attribute:: member_event_type
                                
                                	Type of event for member
                                	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.MemberEvtInfo.Data()
                                    self.data.parent = self
                                    self.member_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.MemberEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.member_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.MemberEvtInfo']['meta_info']


                            class BundleEvtInfo(object):
                                """
                                Event information for a bundle
                                
                                .. attribute:: bundle_event_type
                                
                                	Type of event for bundle
                                	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.BundleEvtInfo.Data>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_event_type = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.BundleEvtInfo.Data()
                                    self.data.parent = self
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.BundleEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_event_type is not None:
                                        return True

                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.BundleEvtInfo']['meta_info']


                            class RgEvtInfo(object):
                                """
                                Event information for an RG
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.RgEvtInfo.Data>`
                                
                                .. attribute:: rg_event_type
                                
                                	Type of event for RG
                                	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.RgEvtInfo.Data()
                                    self.data.parent = self
                                    self.rg_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.RgEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.rg_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items.RgEvtInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                    return True

                                if self.event_type is not None:
                                    return True

                                if self.member_evt_info is not None and self.member_evt_info._has_data():
                                    return True

                                if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember.Items']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.member_interface is None:
                                raise YPYModelError('Key property member_interface is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundle-children-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interface is not None:
                                return True

                            if self.item_name is not None:
                                return True

                            if self.items is not None:
                                for child_ref in self.items:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers.EventsMbrBundleChildrenMember']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundle-children-members'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.events_mbr_bundle_children_member is not None:
                            for child_ref in self.events_mbr_bundle_children_member:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleChildrenMembers']['meta_info']


                class EventsMbrBundleDescendant(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: events_item
                    
                    	Event items
                    	**type**\: list of    :py:class:`EventsItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.events_item = YList()
                        self.events_item.parent = self
                        self.events_item.name = 'events_item'


                    class EventsItem(object):
                        """
                        Event items
                        
                        .. attribute:: item_name
                        
                        	Name for the current item to use
                        	**type**\:  str
                        
                        .. attribute:: items
                        
                        	Event items
                        	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.item_name = None
                            self.items = YList()
                            self.items.parent = self
                            self.items.name = 'items'


                        class Items(object):
                            """
                            Event items
                            
                            .. attribute:: bundle_evt_info
                            
                            	Event information for a bundle
                            	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.BundleEvtInfo>`
                            
                            .. attribute:: event_type
                            
                            	EventType
                            	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                            
                            .. attribute:: member_evt_info
                            
                            	Event information for a member
                            	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.MemberEvtInfo>`
                            
                            .. attribute:: rg_evt_info
                            
                            	Event information for an RG
                            	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.RgEvtInfo>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_evt_info = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.BundleEvtInfo()
                                self.bundle_evt_info.parent = self
                                self.event_type = None
                                self.member_evt_info = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.MemberEvtInfo()
                                self.member_evt_info.parent = self
                                self.rg_evt_info = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.RgEvtInfo()
                                self.rg_evt_info.parent = self


                            class MemberEvtInfo(object):
                                """
                                Event information for a member
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.MemberEvtInfo.Data>`
                                
                                .. attribute:: member_event_type
                                
                                	Type of event for member
                                	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.MemberEvtInfo.Data()
                                    self.data.parent = self
                                    self.member_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.MemberEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.member_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.MemberEvtInfo']['meta_info']


                            class BundleEvtInfo(object):
                                """
                                Event information for a bundle
                                
                                .. attribute:: bundle_event_type
                                
                                	Type of event for bundle
                                	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.BundleEvtInfo.Data>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_event_type = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.BundleEvtInfo.Data()
                                    self.data.parent = self
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.BundleEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_event_type is not None:
                                        return True

                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.BundleEvtInfo']['meta_info']


                            class RgEvtInfo(object):
                                """
                                Event information for an RG
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.RgEvtInfo.Data>`
                                
                                .. attribute:: rg_event_type
                                
                                	Type of event for RG
                                	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.RgEvtInfo.Data()
                                    self.data.parent = self
                                    self.rg_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.RgEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.rg_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items.RgEvtInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                    return True

                                if self.event_type is not None:
                                    return True

                                if self.member_evt_info is not None and self.member_evt_info._has_data():
                                    return True

                                if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem.Items']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-item'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.item_name is not None:
                                return True

                            if self.items is not None:
                                for child_ref in self.items:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant.EventsItem']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundle-descendant'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.events_item is not None:
                            for child_ref in self.events_item:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle.EventsMbrBundleDescendant']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-mbr/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundles/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.events_mbr_bundle_children_members is not None and self.events_mbr_bundle_children_members._has_data():
                        return True

                    if self.events_mbr_bundle_descendant is not None and self.events_mbr_bundle_descendant._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles.EventsMbrBundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-mbr/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_mbr_bundle is not None:
                    for child_ref in self.events_mbr_bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrBundles']['meta_info']


        class EventsMbrMembers(object):
            """
            Member interfaces with bundle member events
            information
            
            .. attribute:: events_mbr_member
            
            	Member interface
            	**type**\: list of    :py:class:`EventsMbrMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_mbr_member = YList()
                self.events_mbr_member.parent = self
                self.events_mbr_member.name = 'events_mbr_member'


            class EventsMbrMember(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: events_mbr_member_item
                
                	Data for this item
                	**type**\:   :py:class:`EventsMbrMemberItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.events_mbr_member_item = BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem()
                    self.events_mbr_member_item.parent = self


                class EventsMbrMemberItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: item_name
                    
                    	Name for the current item to use
                    	**type**\:  str
                    
                    .. attribute:: items
                    
                    	Event items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.item_name = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        Event items
                        
                        .. attribute:: bundle_evt_info
                        
                        	Event information for a bundle
                        	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.BundleEvtInfo>`
                        
                        .. attribute:: event_type
                        
                        	EventType
                        	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                        
                        .. attribute:: member_evt_info
                        
                        	Event information for a member
                        	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.MemberEvtInfo>`
                        
                        .. attribute:: rg_evt_info
                        
                        	Event information for an RG
                        	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.RgEvtInfo>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_evt_info = BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.BundleEvtInfo()
                            self.bundle_evt_info.parent = self
                            self.event_type = None
                            self.member_evt_info = BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.MemberEvtInfo()
                            self.member_evt_info.parent = self
                            self.rg_evt_info = BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.RgEvtInfo()
                            self.rg_evt_info.parent = self


                        class MemberEvtInfo(object):
                            """
                            Event information for a member
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.MemberEvtInfo.Data>`
                            
                            .. attribute:: member_event_type
                            
                            	Type of event for member
                            	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.MemberEvtInfo.Data()
                                self.data.parent = self
                                self.member_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.MemberEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.member_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.MemberEvtInfo']['meta_info']


                        class BundleEvtInfo(object):
                            """
                            Event information for a bundle
                            
                            .. attribute:: bundle_event_type
                            
                            	Type of event for bundle
                            	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.BundleEvtInfo.Data>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_event_type = None
                                self.data = BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.BundleEvtInfo.Data()
                                self.data.parent = self
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.BundleEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_event_type is not None:
                                    return True

                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.BundleEvtInfo']['meta_info']


                        class RgEvtInfo(object):
                            """
                            Event information for an RG
                            
                            .. attribute:: data
                            
                            	Additional data for the event
                            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.RgEvtInfo.Data>`
                            
                            .. attribute:: rg_event_type
                            
                            	Type of event for RG
                            	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                            
                            .. attribute:: time_stamp
                            
                            	Time stamp of the event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.data = BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.RgEvtInfo.Data()
                                self.data.parent = self
                                self.rg_event_type = None
                                self.time_stamp = None


                            class Data(object):
                                """
                                Additional data for the event
                                
                                .. attribute:: data_type
                                
                                	DataType
                                	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                
                                .. attribute:: error
                                
                                	Error
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: no_data
                                
                                	NoData
                                	**type**\:  int
                                
                                	**range:** 0..255
                                
                                .. attribute:: string_data
                                
                                	StringData
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data_type = None
                                    self.error = None
                                    self.no_data = None
                                    self.string_data = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data_type is not None:
                                        return True

                                    if self.error is not None:
                                        return True

                                    if self.no_data is not None:
                                        return True

                                    if self.string_data is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.RgEvtInfo.Data']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.data is not None and self.data._has_data():
                                    return True

                                if self.rg_event_type is not None:
                                    return True

                                if self.time_stamp is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items.RgEvtInfo']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                return True

                            if self.event_type is not None:
                                return True

                            if self.member_evt_info is not None and self.member_evt_info._has_data():
                                return True

                            if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-mbr-member-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.item_name is not None:
                            return True

                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember.EventsMbrMemberItem']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-mbr/Cisco-IOS-XR-bundlemgr-oper:events-mbr-members/Cisco-IOS-XR-bundlemgr-oper:events-mbr-member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.events_mbr_member_item is not None and self.events_mbr_member_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers.EventsMbrMember']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-mbr/Cisco-IOS-XR-bundlemgr-oper:events-mbr-members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_mbr_member is not None:
                    for child_ref in self.events_mbr_member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrMembers']['meta_info']


        class EventsMbrIccpGroups(object):
            """
            Member events for all ICCP Groups
            
            .. attribute:: events_mbr_iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`EventsMbrIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.events_mbr_iccp_group = YList()
                self.events_mbr_iccp_group.parent = self
                self.events_mbr_iccp_group.name = 'events_mbr_iccp_group'


            class EventsMbrIccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: events_mbr_bundle_children_member_iccp_groups
                
                	Children of bundle with member events information
                	**type**\:   :py:class:`EventsMbrBundleChildrenMemberIccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups>`
                
                .. attribute:: events_mbr_bundle_descendant_iccp_group
                
                	Data for this item and all its members
                	**type**\:   :py:class:`EventsMbrBundleDescendantIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.events_mbr_bundle_children_member_iccp_groups = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups()
                    self.events_mbr_bundle_children_member_iccp_groups.parent = self
                    self.events_mbr_bundle_descendant_iccp_group = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup()
                    self.events_mbr_bundle_descendant_iccp_group.parent = self


                class EventsMbrBundleChildrenMemberIccpGroups(object):
                    """
                    Children of bundle with member events
                    information
                    
                    .. attribute:: events_mbr_bundle_children_member_iccp_group
                    
                    	Bundle member item with ICCP events information
                    	**type**\: list of    :py:class:`EventsMbrBundleChildrenMemberIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.events_mbr_bundle_children_member_iccp_group = YList()
                        self.events_mbr_bundle_children_member_iccp_group.parent = self
                        self.events_mbr_bundle_children_member_iccp_group.name = 'events_mbr_bundle_children_member_iccp_group'


                    class EventsMbrBundleChildrenMemberIccpGroup(object):
                        """
                        Bundle member item with ICCP events
                        information
                        
                        .. attribute:: member_interface  <key>
                        
                        	Member interface
                        	**type**\:  str
                        
                        .. attribute:: item_name
                        
                        	Name for the current item to use
                        	**type**\:  str
                        
                        .. attribute:: items
                        
                        	Event items
                        	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_interface = None
                            self.item_name = None
                            self.items = YList()
                            self.items.parent = self
                            self.items.name = 'items'


                        class Items(object):
                            """
                            Event items
                            
                            .. attribute:: bundle_evt_info
                            
                            	Event information for a bundle
                            	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.BundleEvtInfo>`
                            
                            .. attribute:: event_type
                            
                            	EventType
                            	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                            
                            .. attribute:: member_evt_info
                            
                            	Event information for a member
                            	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.MemberEvtInfo>`
                            
                            .. attribute:: rg_evt_info
                            
                            	Event information for an RG
                            	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.RgEvtInfo>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_evt_info = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.BundleEvtInfo()
                                self.bundle_evt_info.parent = self
                                self.event_type = None
                                self.member_evt_info = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.MemberEvtInfo()
                                self.member_evt_info.parent = self
                                self.rg_evt_info = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.RgEvtInfo()
                                self.rg_evt_info.parent = self


                            class MemberEvtInfo(object):
                                """
                                Event information for a member
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.MemberEvtInfo.Data>`
                                
                                .. attribute:: member_event_type
                                
                                	Type of event for member
                                	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.MemberEvtInfo.Data()
                                    self.data.parent = self
                                    self.member_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.MemberEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.member_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.MemberEvtInfo']['meta_info']


                            class BundleEvtInfo(object):
                                """
                                Event information for a bundle
                                
                                .. attribute:: bundle_event_type
                                
                                	Type of event for bundle
                                	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.BundleEvtInfo.Data>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_event_type = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.BundleEvtInfo.Data()
                                    self.data.parent = self
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.BundleEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_event_type is not None:
                                        return True

                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.BundleEvtInfo']['meta_info']


                            class RgEvtInfo(object):
                                """
                                Event information for an RG
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.RgEvtInfo.Data>`
                                
                                .. attribute:: rg_event_type
                                
                                	Type of event for RG
                                	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.RgEvtInfo.Data()
                                    self.data.parent = self
                                    self.rg_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.RgEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.rg_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items.RgEvtInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                    return True

                                if self.event_type is not None:
                                    return True

                                if self.member_evt_info is not None and self.member_evt_info._has_data():
                                    return True

                                if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup.Items']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')
                            if self.member_interface is None:
                                raise YPYModelError('Key property member_interface is None')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundle-children-member-iccp-group[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_interface is not None:
                                return True

                            if self.item_name is not None:
                                return True

                            if self.items is not None:
                                for child_ref in self.items:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups.EventsMbrBundleChildrenMemberIccpGroup']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundle-children-member-iccp-groups'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.events_mbr_bundle_children_member_iccp_group is not None:
                            for child_ref in self.events_mbr_bundle_children_member_iccp_group:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleChildrenMemberIccpGroups']['meta_info']


                class EventsMbrBundleDescendantIccpGroup(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: events_item
                    
                    	Event items
                    	**type**\: list of    :py:class:`EventsItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.events_item = YList()
                        self.events_item.parent = self
                        self.events_item.name = 'events_item'


                    class EventsItem(object):
                        """
                        Event items
                        
                        .. attribute:: item_name
                        
                        	Name for the current item to use
                        	**type**\:  str
                        
                        .. attribute:: items
                        
                        	Event items
                        	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.item_name = None
                            self.items = YList()
                            self.items.parent = self
                            self.items.name = 'items'


                        class Items(object):
                            """
                            Event items
                            
                            .. attribute:: bundle_evt_info
                            
                            	Event information for a bundle
                            	**type**\:   :py:class:`BundleEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo>`
                            
                            .. attribute:: event_type
                            
                            	EventType
                            	**type**\:   :py:class:`BmdBagTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagTargetEnum>`
                            
                            .. attribute:: member_evt_info
                            
                            	Event information for a member
                            	**type**\:   :py:class:`MemberEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo>`
                            
                            .. attribute:: rg_evt_info
                            
                            	Event information for an RG
                            	**type**\:   :py:class:`RgEvtInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_evt_info = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo()
                                self.bundle_evt_info.parent = self
                                self.event_type = None
                                self.member_evt_info = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo()
                                self.member_evt_info.parent = self
                                self.rg_evt_info = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo()
                                self.rg_evt_info.parent = self


                            class MemberEvtInfo(object):
                                """
                                Event information for a member
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo.Data>`
                                
                                .. attribute:: member_event_type
                                
                                	Type of event for member
                                	**type**\:   :py:class:`BmdBagEventMbrItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventMbrItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo.Data()
                                    self.data.parent = self
                                    self.member_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.member_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.MemberEvtInfo']['meta_info']


                            class BundleEvtInfo(object):
                                """
                                Event information for a bundle
                                
                                .. attribute:: bundle_event_type
                                
                                	Type of event for bundle
                                	**type**\:   :py:class:`BmdBagEventBdlItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventBdlItemEnum>`
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo.Data>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.bundle_event_type = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo.Data()
                                    self.data.parent = self
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.bundle_event_type is not None:
                                        return True

                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.BundleEvtInfo']['meta_info']


                            class RgEvtInfo(object):
                                """
                                Event information for an RG
                                
                                .. attribute:: data
                                
                                	Additional data for the event
                                	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo.Data>`
                                
                                .. attribute:: rg_event_type
                                
                                	Type of event for RG
                                	**type**\:   :py:class:`BmdBagEventRgItemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventRgItemEnum>`
                                
                                .. attribute:: time_stamp
                                
                                	Time stamp of the event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.data = BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo.Data()
                                    self.data.parent = self
                                    self.rg_event_type = None
                                    self.time_stamp = None


                                class Data(object):
                                    """
                                    Additional data for the event
                                    
                                    .. attribute:: data_type
                                    
                                    	DataType
                                    	**type**\:   :py:class:`BmdBagEventDataEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBagEventDataEnum>`
                                    
                                    .. attribute:: error
                                    
                                    	Error
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: no_data
                                    
                                    	NoData
                                    	**type**\:  int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: string_data
                                    
                                    	StringData
                                    	**type**\:  str
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.data_type = None
                                        self.error = None
                                        self.no_data = None
                                        self.string_data = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.data_type is not None:
                                            return True

                                        if self.error is not None:
                                            return True

                                        if self.no_data is not None:
                                            return True

                                        if self.string_data is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo.Data']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:rg-evt-info'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.data is not None and self.data._has_data():
                                        return True

                                    if self.rg_event_type is not None:
                                        return True

                                    if self.time_stamp is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items.RgEvtInfo']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_evt_info is not None and self.bundle_evt_info._has_data():
                                    return True

                                if self.event_type is not None:
                                    return True

                                if self.member_evt_info is not None and self.member_evt_info._has_data():
                                    return True

                                if self.rg_evt_info is not None and self.rg_evt_info._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem.Items']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-item'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.item_name is not None:
                                return True

                            if self.items is not None:
                                for child_ref in self.items:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup.EventsItem']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:events-mbr-bundle-descendant-iccp-group'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.events_item is not None:
                            for child_ref in self.events_item:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup.EventsMbrBundleDescendantIccpGroup']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-mbr/Cisco-IOS-XR-bundlemgr-oper:events-mbr-iccp-groups/Cisco-IOS-XR-bundlemgr-oper:events-mbr-iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.events_mbr_bundle_children_member_iccp_groups is not None and self.events_mbr_bundle_children_member_iccp_groups._has_data():
                        return True

                    if self.events_mbr_bundle_descendant_iccp_group is not None and self.events_mbr_bundle_descendant_iccp_group._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups.EventsMbrIccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-mbr/Cisco-IOS-XR-bundlemgr-oper:events-mbr-iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.events_mbr_iccp_group is not None:
                    for child_ref in self.events_mbr_iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.EventsMbr.EventsMbrIccpGroups']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:events-mbr'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.events_mbr_bundles is not None and self.events_mbr_bundles._has_data():
                return True

            if self.events_mbr_iccp_groups is not None and self.events_mbr_iccp_groups._has_data():
                return True

            if self.events_mbr_members is not None and self.events_mbr_members._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.EventsMbr']['meta_info']


    class MlacpIccpGroupCounters(object):
        """
        ICCP Group specific counters of mLACP events
        
        .. attribute:: iccp_groups
        
        	ICCP Groups with counters of mLACP events
        	**type**\:   :py:class:`IccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.iccp_groups = BundleInformation.MlacpIccpGroupCounters.IccpGroups()
            self.iccp_groups.parent = self


        class IccpGroups(object):
            """
            ICCP Groups with counters of mLACP events
            
            .. attribute:: iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`IccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.iccp_group = YList()
                self.iccp_group.parent = self
                self.iccp_group.name = 'iccp_group'


            class IccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: iccp_group_ancestor_bundle
                
                	Data for this item and its parent RG
                	**type**\:   :py:class:`IccpGroupAncestorBundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle>`
                
                .. attribute:: iccp_group_ancestor_member
                
                	Data for this item and its parent RG
                	**type**\:   :py:class:`IccpGroupAncestorMember <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember>`
                
                .. attribute:: iccp_group_ancestor_node
                
                	Data for this item and its parent RG
                	**type**\:   :py:class:`IccpGroupAncestorNode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode>`
                
                .. attribute:: iccp_group_item
                
                	Data for this item
                	**type**\:   :py:class:`IccpGroupItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.iccp_group_ancestor_bundle = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle()
                    self.iccp_group_ancestor_bundle.parent = self
                    self.iccp_group_ancestor_member = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember()
                    self.iccp_group_ancestor_member.parent = self
                    self.iccp_group_ancestor_node = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode()
                    self.iccp_group_ancestor_node.parent = self
                    self.iccp_group_item = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem()
                    self.iccp_group_item.parent = self


                class IccpGroupAncestorBundle(object):
                    """
                    Data for this item and its parent RG
                    
                    .. attribute:: iccp_group_counters
                    
                    	ICCP Group counters
                    	**type**\:   :py:class:`IccpGroupCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters>`
                    
                    .. attribute:: iccp_group_id
                    
                    	ICCP Group ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group_counters = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters()
                        self.iccp_group_counters.parent = self
                        self.iccp_group_id = None


                    class IccpGroupCounters(object):
                        """
                        ICCP Group counters
                        
                        .. attribute:: connection
                        
                        	Number of connection events
                        	**type**\:   :py:class:`Connection <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.Connection>`
                        
                        .. attribute:: iccp_events
                        
                        	Number of ICCP events
                        	**type**\:   :py:class:`IccpEvents <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.IccpEvents>`
                        
                        .. attribute:: iccp_messages
                        
                        	Number ICCP messages sent and received
                        	**type**\:   :py:class:`IccpMessages <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.IccpMessages>`
                        
                        .. attribute:: invalid_tl_vs
                        
                        	Number invalid TLVs received
                        	**type**\:   :py:class:`InvalidTlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.InvalidTlVs>`
                        
                        .. attribute:: last_time_cleared
                        
                        	Time in nsecs from boot when counters were last cleared (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: last_unexpected_event
                        
                        	Elapsed time in nsecs since last unexpected event
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: time_since_cleared
                        
                        	Elapsed time in nsecs since counters were last cleared
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: tl_vs
                        
                        	Number TLVs sent and received
                        	**type**\:   :py:class:`TlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.TlVs>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.connection = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.Connection()
                            self.connection.parent = self
                            self.iccp_events = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.IccpEvents()
                            self.iccp_events.parent = self
                            self.iccp_messages = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.IccpMessages()
                            self.iccp_messages.parent = self
                            self.invalid_tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.InvalidTlVs()
                            self.invalid_tl_vs.parent = self
                            self.last_time_cleared = None
                            self.last_unexpected_event = None
                            self.time_since_cleared = None
                            self.tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.TlVs()
                            self.tl_vs.parent = self


                        class Connection(object):
                            """
                            Number of connection events
                            
                            .. attribute:: iccp_config_connect_errors
                            
                            	Number of ICCP connection errors due to config
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_count_connect_errors
                            
                            	Number of ICCP connection errors due to max ICCP group count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_connects
                            
                            	Number of invalid ICCP connects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_disconnects
                            
                            	Number of invalid ICCP disconnects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_connects
                            
                            	Number of connect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_disconnects
                            
                            	Number of disconnect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_wrong_versions
                            
                            	Number of wrong version TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_connects
                            
                            	Number of connect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_disconnects
                            
                            	Number of disconnect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_wrong_versions
                            
                            	Number of wrong version TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.iccp_config_connect_errors = None
                                self.iccp_count_connect_errors = None
                                self.iccp_invalid_connects = None
                                self.iccp_invalid_disconnects = None
                                self.received_connects = None
                                self.received_disconnects = None
                                self.received_wrong_versions = None
                                self.sent_connects = None
                                self.sent_disconnects = None
                                self.sent_wrong_versions = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:connection'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.iccp_config_connect_errors is not None:
                                    return True

                                if self.iccp_count_connect_errors is not None:
                                    return True

                                if self.iccp_invalid_connects is not None:
                                    return True

                                if self.iccp_invalid_disconnects is not None:
                                    return True

                                if self.received_connects is not None:
                                    return True

                                if self.received_disconnects is not None:
                                    return True

                                if self.received_wrong_versions is not None:
                                    return True

                                if self.sent_connects is not None:
                                    return True

                                if self.sent_disconnects is not None:
                                    return True

                                if self.sent_wrong_versions is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.Connection']['meta_info']


                        class TlVs(object):
                            """
                            Number TLVs sent and received
                            
                            .. attribute:: received_config
                            
                            	Number of config TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_config_sync_requests
                            
                            	Number of state config request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_na_ks
                            
                            	Number of NAK TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_solicited_sync_data
                            
                            	Number of solicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state
                            
                            	Number of state TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state_sync_requests
                            
                            	Number of state sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config
                            
                            	Number of config TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config_sync_requests
                            
                            	Number of config sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_na_ks
                            
                            	Number of NAK TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_solicited_sync_data
                            
                            	Number of solicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state
                            
                            	Number of state TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state_sync_requests
                            
                            	Number of state sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_sync_requests
                            
                            	Number of sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_config = None
                                self.received_config_sync_requests = None
                                self.received_na_ks = None
                                self.received_solicited_sync_data = None
                                self.received_state = None
                                self.received_state_sync_requests = None
                                self.received_sync_requests = None
                                self.received_unsolicited_sync_data = None
                                self.sent_config = None
                                self.sent_config_sync_requests = None
                                self.sent_na_ks = None
                                self.sent_solicited_sync_data = None
                                self.sent_state = None
                                self.sent_state_sync_requests = None
                                self.sent_sync_requests = None
                                self.sent_unsolicited_sync_data = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_config is not None:
                                    return True

                                if self.received_config_sync_requests is not None:
                                    return True

                                if self.received_na_ks is not None:
                                    return True

                                if self.received_solicited_sync_data is not None:
                                    return True

                                if self.received_state is not None:
                                    return True

                                if self.received_state_sync_requests is not None:
                                    return True

                                if self.received_sync_requests is not None:
                                    return True

                                if self.received_unsolicited_sync_data is not None:
                                    return True

                                if self.sent_config is not None:
                                    return True

                                if self.sent_config_sync_requests is not None:
                                    return True

                                if self.sent_na_ks is not None:
                                    return True

                                if self.sent_solicited_sync_data is not None:
                                    return True

                                if self.sent_state is not None:
                                    return True

                                if self.sent_state_sync_requests is not None:
                                    return True

                                if self.sent_sync_requests is not None:
                                    return True

                                if self.sent_unsolicited_sync_data is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.TlVs']['meta_info']


                        class InvalidTlVs(object):
                            """
                            Number invalid TLVs received
                            
                            .. attribute:: incorrect_length
                            
                            	Number of messages received of an incorrect length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_data
                            
                            	Number of messages received containing invalid data
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_type
                            
                            	Number of messages received with an invalid mLACP TLV type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_bundle
                            
                            	Number of messages received for an unknown bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_port
                            
                            	Number of messages received for an unknown port
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.incorrect_length = None
                                self.invalid_data = None
                                self.invalid_type = None
                                self.unknown_bundle = None
                                self.unknown_port = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:invalid-tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.incorrect_length is not None:
                                    return True

                                if self.invalid_data is not None:
                                    return True

                                if self.invalid_type is not None:
                                    return True

                                if self.unknown_bundle is not None:
                                    return True

                                if self.unknown_port is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.InvalidTlVs']['meta_info']


                        class IccpMessages(object):
                            """
                            Number ICCP messages sent and received
                            
                            .. attribute:: received_messages
                            
                            	Number of messages received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_buffer_messages
                            
                            	Number of buffers sent (may be multiple per message)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_messages
                            
                            	Number of messages sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transmission_errors
                            
                            	Number of transmission errors
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_messages = None
                                self.sent_buffer_messages = None
                                self.sent_messages = None
                                self.transmission_errors = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-messages'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_messages is not None:
                                    return True

                                if self.sent_buffer_messages is not None:
                                    return True

                                if self.sent_messages is not None:
                                    return True

                                if self.transmission_errors is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.IccpMessages']['meta_info']


                        class IccpEvents(object):
                            """
                            Number of ICCP events
                            
                            .. attribute:: configured_clear
                            
                            	Number of unconfigure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: configured_set
                            
                            	Number of configure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_down
                            
                            	Number of member status down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_up
                            
                            	Number of member status up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated
                            
                            	Number of PE isolation events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated_clear
                            
                            	Number of PE isolation cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_cleared
                            
                            	Number of reachability cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_set
                            
                            	Number of reachability events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_down
                            
                            	Number of transport down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_unavailable
                            
                            	Number of transport unavailable events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_up
                            
                            	Number of transport up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.configured_clear = None
                                self.configured_set = None
                                self.member_status_down = None
                                self.member_status_up = None
                                self.pe_isolated = None
                                self.pe_isolated_clear = None
                                self.reachability_cleared = None
                                self.reachability_set = None
                                self.transport_down = None
                                self.transport_unavailable = None
                                self.transport_up = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-events'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.configured_clear is not None:
                                    return True

                                if self.configured_set is not None:
                                    return True

                                if self.member_status_down is not None:
                                    return True

                                if self.member_status_up is not None:
                                    return True

                                if self.pe_isolated is not None:
                                    return True

                                if self.pe_isolated_clear is not None:
                                    return True

                                if self.reachability_cleared is not None:
                                    return True

                                if self.reachability_set is not None:
                                    return True

                                if self.transport_down is not None:
                                    return True

                                if self.transport_unavailable is not None:
                                    return True

                                if self.transport_up is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters.IccpEvents']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-counters'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.connection is not None and self.connection._has_data():
                                return True

                            if self.iccp_events is not None and self.iccp_events._has_data():
                                return True

                            if self.iccp_messages is not None and self.iccp_messages._has_data():
                                return True

                            if self.invalid_tl_vs is not None and self.invalid_tl_vs._has_data():
                                return True

                            if self.last_time_cleared is not None:
                                return True

                            if self.last_unexpected_event is not None:
                                return True

                            if self.time_since_cleared is not None:
                                return True

                            if self.tl_vs is not None and self.tl_vs._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle.IccpGroupCounters']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-ancestor-bundle'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group_counters is not None and self.iccp_group_counters._has_data():
                            return True

                        if self.iccp_group_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorBundle']['meta_info']


                class IccpGroupAncestorMember(object):
                    """
                    Data for this item and its parent RG
                    
                    .. attribute:: iccp_group_counters
                    
                    	ICCP Group counters
                    	**type**\:   :py:class:`IccpGroupCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters>`
                    
                    .. attribute:: iccp_group_id
                    
                    	ICCP Group ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group_counters = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters()
                        self.iccp_group_counters.parent = self
                        self.iccp_group_id = None


                    class IccpGroupCounters(object):
                        """
                        ICCP Group counters
                        
                        .. attribute:: connection
                        
                        	Number of connection events
                        	**type**\:   :py:class:`Connection <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.Connection>`
                        
                        .. attribute:: iccp_events
                        
                        	Number of ICCP events
                        	**type**\:   :py:class:`IccpEvents <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.IccpEvents>`
                        
                        .. attribute:: iccp_messages
                        
                        	Number ICCP messages sent and received
                        	**type**\:   :py:class:`IccpMessages <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.IccpMessages>`
                        
                        .. attribute:: invalid_tl_vs
                        
                        	Number invalid TLVs received
                        	**type**\:   :py:class:`InvalidTlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.InvalidTlVs>`
                        
                        .. attribute:: last_time_cleared
                        
                        	Time in nsecs from boot when counters were last cleared (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: last_unexpected_event
                        
                        	Elapsed time in nsecs since last unexpected event
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: time_since_cleared
                        
                        	Elapsed time in nsecs since counters were last cleared
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: tl_vs
                        
                        	Number TLVs sent and received
                        	**type**\:   :py:class:`TlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.TlVs>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.connection = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.Connection()
                            self.connection.parent = self
                            self.iccp_events = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.IccpEvents()
                            self.iccp_events.parent = self
                            self.iccp_messages = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.IccpMessages()
                            self.iccp_messages.parent = self
                            self.invalid_tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.InvalidTlVs()
                            self.invalid_tl_vs.parent = self
                            self.last_time_cleared = None
                            self.last_unexpected_event = None
                            self.time_since_cleared = None
                            self.tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.TlVs()
                            self.tl_vs.parent = self


                        class Connection(object):
                            """
                            Number of connection events
                            
                            .. attribute:: iccp_config_connect_errors
                            
                            	Number of ICCP connection errors due to config
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_count_connect_errors
                            
                            	Number of ICCP connection errors due to max ICCP group count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_connects
                            
                            	Number of invalid ICCP connects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_disconnects
                            
                            	Number of invalid ICCP disconnects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_connects
                            
                            	Number of connect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_disconnects
                            
                            	Number of disconnect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_wrong_versions
                            
                            	Number of wrong version TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_connects
                            
                            	Number of connect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_disconnects
                            
                            	Number of disconnect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_wrong_versions
                            
                            	Number of wrong version TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.iccp_config_connect_errors = None
                                self.iccp_count_connect_errors = None
                                self.iccp_invalid_connects = None
                                self.iccp_invalid_disconnects = None
                                self.received_connects = None
                                self.received_disconnects = None
                                self.received_wrong_versions = None
                                self.sent_connects = None
                                self.sent_disconnects = None
                                self.sent_wrong_versions = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:connection'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.iccp_config_connect_errors is not None:
                                    return True

                                if self.iccp_count_connect_errors is not None:
                                    return True

                                if self.iccp_invalid_connects is not None:
                                    return True

                                if self.iccp_invalid_disconnects is not None:
                                    return True

                                if self.received_connects is not None:
                                    return True

                                if self.received_disconnects is not None:
                                    return True

                                if self.received_wrong_versions is not None:
                                    return True

                                if self.sent_connects is not None:
                                    return True

                                if self.sent_disconnects is not None:
                                    return True

                                if self.sent_wrong_versions is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.Connection']['meta_info']


                        class TlVs(object):
                            """
                            Number TLVs sent and received
                            
                            .. attribute:: received_config
                            
                            	Number of config TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_config_sync_requests
                            
                            	Number of state config request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_na_ks
                            
                            	Number of NAK TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_solicited_sync_data
                            
                            	Number of solicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state
                            
                            	Number of state TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state_sync_requests
                            
                            	Number of state sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config
                            
                            	Number of config TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config_sync_requests
                            
                            	Number of config sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_na_ks
                            
                            	Number of NAK TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_solicited_sync_data
                            
                            	Number of solicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state
                            
                            	Number of state TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state_sync_requests
                            
                            	Number of state sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_sync_requests
                            
                            	Number of sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_config = None
                                self.received_config_sync_requests = None
                                self.received_na_ks = None
                                self.received_solicited_sync_data = None
                                self.received_state = None
                                self.received_state_sync_requests = None
                                self.received_sync_requests = None
                                self.received_unsolicited_sync_data = None
                                self.sent_config = None
                                self.sent_config_sync_requests = None
                                self.sent_na_ks = None
                                self.sent_solicited_sync_data = None
                                self.sent_state = None
                                self.sent_state_sync_requests = None
                                self.sent_sync_requests = None
                                self.sent_unsolicited_sync_data = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_config is not None:
                                    return True

                                if self.received_config_sync_requests is not None:
                                    return True

                                if self.received_na_ks is not None:
                                    return True

                                if self.received_solicited_sync_data is not None:
                                    return True

                                if self.received_state is not None:
                                    return True

                                if self.received_state_sync_requests is not None:
                                    return True

                                if self.received_sync_requests is not None:
                                    return True

                                if self.received_unsolicited_sync_data is not None:
                                    return True

                                if self.sent_config is not None:
                                    return True

                                if self.sent_config_sync_requests is not None:
                                    return True

                                if self.sent_na_ks is not None:
                                    return True

                                if self.sent_solicited_sync_data is not None:
                                    return True

                                if self.sent_state is not None:
                                    return True

                                if self.sent_state_sync_requests is not None:
                                    return True

                                if self.sent_sync_requests is not None:
                                    return True

                                if self.sent_unsolicited_sync_data is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.TlVs']['meta_info']


                        class InvalidTlVs(object):
                            """
                            Number invalid TLVs received
                            
                            .. attribute:: incorrect_length
                            
                            	Number of messages received of an incorrect length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_data
                            
                            	Number of messages received containing invalid data
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_type
                            
                            	Number of messages received with an invalid mLACP TLV type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_bundle
                            
                            	Number of messages received for an unknown bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_port
                            
                            	Number of messages received for an unknown port
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.incorrect_length = None
                                self.invalid_data = None
                                self.invalid_type = None
                                self.unknown_bundle = None
                                self.unknown_port = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:invalid-tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.incorrect_length is not None:
                                    return True

                                if self.invalid_data is not None:
                                    return True

                                if self.invalid_type is not None:
                                    return True

                                if self.unknown_bundle is not None:
                                    return True

                                if self.unknown_port is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.InvalidTlVs']['meta_info']


                        class IccpMessages(object):
                            """
                            Number ICCP messages sent and received
                            
                            .. attribute:: received_messages
                            
                            	Number of messages received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_buffer_messages
                            
                            	Number of buffers sent (may be multiple per message)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_messages
                            
                            	Number of messages sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transmission_errors
                            
                            	Number of transmission errors
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_messages = None
                                self.sent_buffer_messages = None
                                self.sent_messages = None
                                self.transmission_errors = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-messages'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_messages is not None:
                                    return True

                                if self.sent_buffer_messages is not None:
                                    return True

                                if self.sent_messages is not None:
                                    return True

                                if self.transmission_errors is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.IccpMessages']['meta_info']


                        class IccpEvents(object):
                            """
                            Number of ICCP events
                            
                            .. attribute:: configured_clear
                            
                            	Number of unconfigure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: configured_set
                            
                            	Number of configure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_down
                            
                            	Number of member status down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_up
                            
                            	Number of member status up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated
                            
                            	Number of PE isolation events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated_clear
                            
                            	Number of PE isolation cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_cleared
                            
                            	Number of reachability cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_set
                            
                            	Number of reachability events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_down
                            
                            	Number of transport down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_unavailable
                            
                            	Number of transport unavailable events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_up
                            
                            	Number of transport up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.configured_clear = None
                                self.configured_set = None
                                self.member_status_down = None
                                self.member_status_up = None
                                self.pe_isolated = None
                                self.pe_isolated_clear = None
                                self.reachability_cleared = None
                                self.reachability_set = None
                                self.transport_down = None
                                self.transport_unavailable = None
                                self.transport_up = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-events'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.configured_clear is not None:
                                    return True

                                if self.configured_set is not None:
                                    return True

                                if self.member_status_down is not None:
                                    return True

                                if self.member_status_up is not None:
                                    return True

                                if self.pe_isolated is not None:
                                    return True

                                if self.pe_isolated_clear is not None:
                                    return True

                                if self.reachability_cleared is not None:
                                    return True

                                if self.reachability_set is not None:
                                    return True

                                if self.transport_down is not None:
                                    return True

                                if self.transport_unavailable is not None:
                                    return True

                                if self.transport_up is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters.IccpEvents']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-counters'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.connection is not None and self.connection._has_data():
                                return True

                            if self.iccp_events is not None and self.iccp_events._has_data():
                                return True

                            if self.iccp_messages is not None and self.iccp_messages._has_data():
                                return True

                            if self.invalid_tl_vs is not None and self.invalid_tl_vs._has_data():
                                return True

                            if self.last_time_cleared is not None:
                                return True

                            if self.last_unexpected_event is not None:
                                return True

                            if self.time_since_cleared is not None:
                                return True

                            if self.tl_vs is not None and self.tl_vs._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember.IccpGroupCounters']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-ancestor-member'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group_counters is not None and self.iccp_group_counters._has_data():
                            return True

                        if self.iccp_group_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorMember']['meta_info']


                class IccpGroupAncestorNode(object):
                    """
                    Data for this item and its parent RG
                    
                    .. attribute:: iccp_group_counters
                    
                    	ICCP Group counters
                    	**type**\:   :py:class:`IccpGroupCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters>`
                    
                    .. attribute:: iccp_group_id
                    
                    	ICCP Group ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group_counters = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters()
                        self.iccp_group_counters.parent = self
                        self.iccp_group_id = None


                    class IccpGroupCounters(object):
                        """
                        ICCP Group counters
                        
                        .. attribute:: connection
                        
                        	Number of connection events
                        	**type**\:   :py:class:`Connection <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.Connection>`
                        
                        .. attribute:: iccp_events
                        
                        	Number of ICCP events
                        	**type**\:   :py:class:`IccpEvents <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.IccpEvents>`
                        
                        .. attribute:: iccp_messages
                        
                        	Number ICCP messages sent and received
                        	**type**\:   :py:class:`IccpMessages <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.IccpMessages>`
                        
                        .. attribute:: invalid_tl_vs
                        
                        	Number invalid TLVs received
                        	**type**\:   :py:class:`InvalidTlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.InvalidTlVs>`
                        
                        .. attribute:: last_time_cleared
                        
                        	Time in nsecs from boot when counters were last cleared (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: last_unexpected_event
                        
                        	Elapsed time in nsecs since last unexpected event
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: time_since_cleared
                        
                        	Elapsed time in nsecs since counters were last cleared
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: tl_vs
                        
                        	Number TLVs sent and received
                        	**type**\:   :py:class:`TlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.TlVs>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.connection = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.Connection()
                            self.connection.parent = self
                            self.iccp_events = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.IccpEvents()
                            self.iccp_events.parent = self
                            self.iccp_messages = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.IccpMessages()
                            self.iccp_messages.parent = self
                            self.invalid_tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.InvalidTlVs()
                            self.invalid_tl_vs.parent = self
                            self.last_time_cleared = None
                            self.last_unexpected_event = None
                            self.time_since_cleared = None
                            self.tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.TlVs()
                            self.tl_vs.parent = self


                        class Connection(object):
                            """
                            Number of connection events
                            
                            .. attribute:: iccp_config_connect_errors
                            
                            	Number of ICCP connection errors due to config
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_count_connect_errors
                            
                            	Number of ICCP connection errors due to max ICCP group count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_connects
                            
                            	Number of invalid ICCP connects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_disconnects
                            
                            	Number of invalid ICCP disconnects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_connects
                            
                            	Number of connect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_disconnects
                            
                            	Number of disconnect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_wrong_versions
                            
                            	Number of wrong version TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_connects
                            
                            	Number of connect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_disconnects
                            
                            	Number of disconnect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_wrong_versions
                            
                            	Number of wrong version TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.iccp_config_connect_errors = None
                                self.iccp_count_connect_errors = None
                                self.iccp_invalid_connects = None
                                self.iccp_invalid_disconnects = None
                                self.received_connects = None
                                self.received_disconnects = None
                                self.received_wrong_versions = None
                                self.sent_connects = None
                                self.sent_disconnects = None
                                self.sent_wrong_versions = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:connection'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.iccp_config_connect_errors is not None:
                                    return True

                                if self.iccp_count_connect_errors is not None:
                                    return True

                                if self.iccp_invalid_connects is not None:
                                    return True

                                if self.iccp_invalid_disconnects is not None:
                                    return True

                                if self.received_connects is not None:
                                    return True

                                if self.received_disconnects is not None:
                                    return True

                                if self.received_wrong_versions is not None:
                                    return True

                                if self.sent_connects is not None:
                                    return True

                                if self.sent_disconnects is not None:
                                    return True

                                if self.sent_wrong_versions is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.Connection']['meta_info']


                        class TlVs(object):
                            """
                            Number TLVs sent and received
                            
                            .. attribute:: received_config
                            
                            	Number of config TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_config_sync_requests
                            
                            	Number of state config request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_na_ks
                            
                            	Number of NAK TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_solicited_sync_data
                            
                            	Number of solicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state
                            
                            	Number of state TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state_sync_requests
                            
                            	Number of state sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config
                            
                            	Number of config TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config_sync_requests
                            
                            	Number of config sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_na_ks
                            
                            	Number of NAK TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_solicited_sync_data
                            
                            	Number of solicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state
                            
                            	Number of state TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state_sync_requests
                            
                            	Number of state sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_sync_requests
                            
                            	Number of sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_config = None
                                self.received_config_sync_requests = None
                                self.received_na_ks = None
                                self.received_solicited_sync_data = None
                                self.received_state = None
                                self.received_state_sync_requests = None
                                self.received_sync_requests = None
                                self.received_unsolicited_sync_data = None
                                self.sent_config = None
                                self.sent_config_sync_requests = None
                                self.sent_na_ks = None
                                self.sent_solicited_sync_data = None
                                self.sent_state = None
                                self.sent_state_sync_requests = None
                                self.sent_sync_requests = None
                                self.sent_unsolicited_sync_data = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_config is not None:
                                    return True

                                if self.received_config_sync_requests is not None:
                                    return True

                                if self.received_na_ks is not None:
                                    return True

                                if self.received_solicited_sync_data is not None:
                                    return True

                                if self.received_state is not None:
                                    return True

                                if self.received_state_sync_requests is not None:
                                    return True

                                if self.received_sync_requests is not None:
                                    return True

                                if self.received_unsolicited_sync_data is not None:
                                    return True

                                if self.sent_config is not None:
                                    return True

                                if self.sent_config_sync_requests is not None:
                                    return True

                                if self.sent_na_ks is not None:
                                    return True

                                if self.sent_solicited_sync_data is not None:
                                    return True

                                if self.sent_state is not None:
                                    return True

                                if self.sent_state_sync_requests is not None:
                                    return True

                                if self.sent_sync_requests is not None:
                                    return True

                                if self.sent_unsolicited_sync_data is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.TlVs']['meta_info']


                        class InvalidTlVs(object):
                            """
                            Number invalid TLVs received
                            
                            .. attribute:: incorrect_length
                            
                            	Number of messages received of an incorrect length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_data
                            
                            	Number of messages received containing invalid data
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_type
                            
                            	Number of messages received with an invalid mLACP TLV type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_bundle
                            
                            	Number of messages received for an unknown bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_port
                            
                            	Number of messages received for an unknown port
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.incorrect_length = None
                                self.invalid_data = None
                                self.invalid_type = None
                                self.unknown_bundle = None
                                self.unknown_port = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:invalid-tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.incorrect_length is not None:
                                    return True

                                if self.invalid_data is not None:
                                    return True

                                if self.invalid_type is not None:
                                    return True

                                if self.unknown_bundle is not None:
                                    return True

                                if self.unknown_port is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.InvalidTlVs']['meta_info']


                        class IccpMessages(object):
                            """
                            Number ICCP messages sent and received
                            
                            .. attribute:: received_messages
                            
                            	Number of messages received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_buffer_messages
                            
                            	Number of buffers sent (may be multiple per message)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_messages
                            
                            	Number of messages sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transmission_errors
                            
                            	Number of transmission errors
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_messages = None
                                self.sent_buffer_messages = None
                                self.sent_messages = None
                                self.transmission_errors = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-messages'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_messages is not None:
                                    return True

                                if self.sent_buffer_messages is not None:
                                    return True

                                if self.sent_messages is not None:
                                    return True

                                if self.transmission_errors is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.IccpMessages']['meta_info']


                        class IccpEvents(object):
                            """
                            Number of ICCP events
                            
                            .. attribute:: configured_clear
                            
                            	Number of unconfigure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: configured_set
                            
                            	Number of configure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_down
                            
                            	Number of member status down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_up
                            
                            	Number of member status up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated
                            
                            	Number of PE isolation events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated_clear
                            
                            	Number of PE isolation cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_cleared
                            
                            	Number of reachability cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_set
                            
                            	Number of reachability events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_down
                            
                            	Number of transport down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_unavailable
                            
                            	Number of transport unavailable events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_up
                            
                            	Number of transport up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.configured_clear = None
                                self.configured_set = None
                                self.member_status_down = None
                                self.member_status_up = None
                                self.pe_isolated = None
                                self.pe_isolated_clear = None
                                self.reachability_cleared = None
                                self.reachability_set = None
                                self.transport_down = None
                                self.transport_unavailable = None
                                self.transport_up = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-events'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.configured_clear is not None:
                                    return True

                                if self.configured_set is not None:
                                    return True

                                if self.member_status_down is not None:
                                    return True

                                if self.member_status_up is not None:
                                    return True

                                if self.pe_isolated is not None:
                                    return True

                                if self.pe_isolated_clear is not None:
                                    return True

                                if self.reachability_cleared is not None:
                                    return True

                                if self.reachability_set is not None:
                                    return True

                                if self.transport_down is not None:
                                    return True

                                if self.transport_unavailable is not None:
                                    return True

                                if self.transport_up is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters.IccpEvents']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-counters'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.connection is not None and self.connection._has_data():
                                return True

                            if self.iccp_events is not None and self.iccp_events._has_data():
                                return True

                            if self.iccp_messages is not None and self.iccp_messages._has_data():
                                return True

                            if self.invalid_tl_vs is not None and self.invalid_tl_vs._has_data():
                                return True

                            if self.last_time_cleared is not None:
                                return True

                            if self.last_unexpected_event is not None:
                                return True

                            if self.time_since_cleared is not None:
                                return True

                            if self.tl_vs is not None and self.tl_vs._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode.IccpGroupCounters']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-ancestor-node'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group_counters is not None and self.iccp_group_counters._has_data():
                            return True

                        if self.iccp_group_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupAncestorNode']['meta_info']


                class IccpGroupItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: iccp_group_counters
                    
                    	ICCP Group counters
                    	**type**\:   :py:class:`IccpGroupCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters>`
                    
                    .. attribute:: iccp_group_id
                    
                    	ICCP Group ID
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group_counters = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters()
                        self.iccp_group_counters.parent = self
                        self.iccp_group_id = None


                    class IccpGroupCounters(object):
                        """
                        ICCP Group counters
                        
                        .. attribute:: connection
                        
                        	Number of connection events
                        	**type**\:   :py:class:`Connection <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.Connection>`
                        
                        .. attribute:: iccp_events
                        
                        	Number of ICCP events
                        	**type**\:   :py:class:`IccpEvents <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.IccpEvents>`
                        
                        .. attribute:: iccp_messages
                        
                        	Number ICCP messages sent and received
                        	**type**\:   :py:class:`IccpMessages <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.IccpMessages>`
                        
                        .. attribute:: invalid_tl_vs
                        
                        	Number invalid TLVs received
                        	**type**\:   :py:class:`InvalidTlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.InvalidTlVs>`
                        
                        .. attribute:: last_time_cleared
                        
                        	Time in nsecs from boot when counters were last cleared (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: last_unexpected_event
                        
                        	Elapsed time in nsecs since last unexpected event
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: time_since_cleared
                        
                        	Elapsed time in nsecs since counters were last cleared
                        	**type**\:  int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**units**\: nanosecond
                        
                        .. attribute:: tl_vs
                        
                        	Number TLVs sent and received
                        	**type**\:   :py:class:`TlVs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.TlVs>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.connection = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.Connection()
                            self.connection.parent = self
                            self.iccp_events = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.IccpEvents()
                            self.iccp_events.parent = self
                            self.iccp_messages = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.IccpMessages()
                            self.iccp_messages.parent = self
                            self.invalid_tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.InvalidTlVs()
                            self.invalid_tl_vs.parent = self
                            self.last_time_cleared = None
                            self.last_unexpected_event = None
                            self.time_since_cleared = None
                            self.tl_vs = BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.TlVs()
                            self.tl_vs.parent = self


                        class Connection(object):
                            """
                            Number of connection events
                            
                            .. attribute:: iccp_config_connect_errors
                            
                            	Number of ICCP connection errors due to config
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_count_connect_errors
                            
                            	Number of ICCP connection errors due to max ICCP group count
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_connects
                            
                            	Number of invalid ICCP connects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: iccp_invalid_disconnects
                            
                            	Number of invalid ICCP disconnects
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_connects
                            
                            	Number of connect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_disconnects
                            
                            	Number of disconnect TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_wrong_versions
                            
                            	Number of wrong version TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_connects
                            
                            	Number of connect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_disconnects
                            
                            	Number of disconnect TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_wrong_versions
                            
                            	Number of wrong version TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.iccp_config_connect_errors = None
                                self.iccp_count_connect_errors = None
                                self.iccp_invalid_connects = None
                                self.iccp_invalid_disconnects = None
                                self.received_connects = None
                                self.received_disconnects = None
                                self.received_wrong_versions = None
                                self.sent_connects = None
                                self.sent_disconnects = None
                                self.sent_wrong_versions = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:connection'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.iccp_config_connect_errors is not None:
                                    return True

                                if self.iccp_count_connect_errors is not None:
                                    return True

                                if self.iccp_invalid_connects is not None:
                                    return True

                                if self.iccp_invalid_disconnects is not None:
                                    return True

                                if self.received_connects is not None:
                                    return True

                                if self.received_disconnects is not None:
                                    return True

                                if self.received_wrong_versions is not None:
                                    return True

                                if self.sent_connects is not None:
                                    return True

                                if self.sent_disconnects is not None:
                                    return True

                                if self.sent_wrong_versions is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.Connection']['meta_info']


                        class TlVs(object):
                            """
                            Number TLVs sent and received
                            
                            .. attribute:: received_config
                            
                            	Number of config TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_config_sync_requests
                            
                            	Number of state config request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_na_ks
                            
                            	Number of NAK TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_solicited_sync_data
                            
                            	Number of solicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state
                            
                            	Number of state TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_state_sync_requests
                            
                            	Number of state sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of sync request TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config
                            
                            	Number of config TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_config_sync_requests
                            
                            	Number of config sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_na_ks
                            
                            	Number of NAK TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_solicited_sync_data
                            
                            	Number of solicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state
                            
                            	Number of state TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state_sync_requests
                            
                            	Number of state sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_sync_requests
                            
                            	Number of sync request TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_unsolicited_sync_data
                            
                            	Number of unsolicited sync data TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_config = None
                                self.received_config_sync_requests = None
                                self.received_na_ks = None
                                self.received_solicited_sync_data = None
                                self.received_state = None
                                self.received_state_sync_requests = None
                                self.received_sync_requests = None
                                self.received_unsolicited_sync_data = None
                                self.sent_config = None
                                self.sent_config_sync_requests = None
                                self.sent_na_ks = None
                                self.sent_solicited_sync_data = None
                                self.sent_state = None
                                self.sent_state_sync_requests = None
                                self.sent_sync_requests = None
                                self.sent_unsolicited_sync_data = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_config is not None:
                                    return True

                                if self.received_config_sync_requests is not None:
                                    return True

                                if self.received_na_ks is not None:
                                    return True

                                if self.received_solicited_sync_data is not None:
                                    return True

                                if self.received_state is not None:
                                    return True

                                if self.received_state_sync_requests is not None:
                                    return True

                                if self.received_sync_requests is not None:
                                    return True

                                if self.received_unsolicited_sync_data is not None:
                                    return True

                                if self.sent_config is not None:
                                    return True

                                if self.sent_config_sync_requests is not None:
                                    return True

                                if self.sent_na_ks is not None:
                                    return True

                                if self.sent_solicited_sync_data is not None:
                                    return True

                                if self.sent_state is not None:
                                    return True

                                if self.sent_state_sync_requests is not None:
                                    return True

                                if self.sent_sync_requests is not None:
                                    return True

                                if self.sent_unsolicited_sync_data is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.TlVs']['meta_info']


                        class InvalidTlVs(object):
                            """
                            Number invalid TLVs received
                            
                            .. attribute:: incorrect_length
                            
                            	Number of messages received of an incorrect length
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_data
                            
                            	Number of messages received containing invalid data
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: invalid_type
                            
                            	Number of messages received with an invalid mLACP TLV type
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_bundle
                            
                            	Number of messages received for an unknown bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: unknown_port
                            
                            	Number of messages received for an unknown port
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.incorrect_length = None
                                self.invalid_data = None
                                self.invalid_type = None
                                self.unknown_bundle = None
                                self.unknown_port = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:invalid-tl-vs'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.incorrect_length is not None:
                                    return True

                                if self.invalid_data is not None:
                                    return True

                                if self.invalid_type is not None:
                                    return True

                                if self.unknown_bundle is not None:
                                    return True

                                if self.unknown_port is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.InvalidTlVs']['meta_info']


                        class IccpMessages(object):
                            """
                            Number ICCP messages sent and received
                            
                            .. attribute:: received_messages
                            
                            	Number of messages received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_buffer_messages
                            
                            	Number of buffers sent (may be multiple per message)
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_messages
                            
                            	Number of messages sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transmission_errors
                            
                            	Number of transmission errors
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.received_messages = None
                                self.sent_buffer_messages = None
                                self.sent_messages = None
                                self.transmission_errors = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-messages'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.received_messages is not None:
                                    return True

                                if self.sent_buffer_messages is not None:
                                    return True

                                if self.sent_messages is not None:
                                    return True

                                if self.transmission_errors is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.IccpMessages']['meta_info']


                        class IccpEvents(object):
                            """
                            Number of ICCP events
                            
                            .. attribute:: configured_clear
                            
                            	Number of unconfigure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: configured_set
                            
                            	Number of configure events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_down
                            
                            	Number of member status down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: member_status_up
                            
                            	Number of member status up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated
                            
                            	Number of PE isolation events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: pe_isolated_clear
                            
                            	Number of PE isolation cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_cleared
                            
                            	Number of reachability cleared events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: reachability_set
                            
                            	Number of reachability events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_down
                            
                            	Number of transport down events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_unavailable
                            
                            	Number of transport unavailable events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: transport_up
                            
                            	Number of transport up events
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.configured_clear = None
                                self.configured_set = None
                                self.member_status_down = None
                                self.member_status_up = None
                                self.pe_isolated = None
                                self.pe_isolated_clear = None
                                self.reachability_cleared = None
                                self.reachability_set = None
                                self.transport_down = None
                                self.transport_unavailable = None
                                self.transport_up = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-events'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.configured_clear is not None:
                                    return True

                                if self.configured_set is not None:
                                    return True

                                if self.member_status_down is not None:
                                    return True

                                if self.member_status_up is not None:
                                    return True

                                if self.pe_isolated is not None:
                                    return True

                                if self.pe_isolated_clear is not None:
                                    return True

                                if self.reachability_cleared is not None:
                                    return True

                                if self.reachability_set is not None:
                                    return True

                                if self.transport_down is not None:
                                    return True

                                if self.transport_unavailable is not None:
                                    return True

                                if self.transport_up is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters.IccpEvents']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-counters'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.connection is not None and self.connection._has_data():
                                return True

                            if self.iccp_events is not None and self.iccp_events._has_data():
                                return True

                            if self.iccp_messages is not None and self.iccp_messages._has_data():
                                return True

                            if self.invalid_tl_vs is not None and self.invalid_tl_vs._has_data():
                                return True

                            if self.last_time_cleared is not None:
                                return True

                            if self.last_unexpected_event is not None:
                                return True

                            if self.time_since_cleared is not None:
                                return True

                            if self.tl_vs is not None and self.tl_vs._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem.IccpGroupCounters']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group_counters is not None and self.iccp_group_counters._has_data():
                            return True

                        if self.iccp_group_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup.IccpGroupItem']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-iccp-group-counters/Cisco-IOS-XR-bundlemgr-oper:iccp-groups/Cisco-IOS-XR-bundlemgr-oper:iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.iccp_group_ancestor_bundle is not None and self.iccp_group_ancestor_bundle._has_data():
                        return True

                    if self.iccp_group_ancestor_member is not None and self.iccp_group_ancestor_member._has_data():
                        return True

                    if self.iccp_group_ancestor_node is not None and self.iccp_group_ancestor_node._has_data():
                        return True

                    if self.iccp_group_item is not None and self.iccp_group_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups.IccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-iccp-group-counters/Cisco-IOS-XR-bundlemgr-oper:iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.iccp_group is not None:
                    for child_ref in self.iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpIccpGroupCounters.IccpGroups']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-iccp-group-counters'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.iccp_groups is not None and self.iccp_groups._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.MlacpIccpGroupCounters']['meta_info']


    class SystemId(object):
        """
        System Identifiers for the local system and all
        ICCP Groups
        
        .. attribute:: system_id_global
        
        	System Identifier for the local system
        	**type**\:   :py:class:`SystemIdGlobal <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdGlobal>`
        
        .. attribute:: system_id_iccp_groups
        
        	System Identifiers for all ICCP Groups
        	**type**\:   :py:class:`SystemIdIccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdIccpGroups>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.system_id_global = BundleInformation.SystemId.SystemIdGlobal()
            self.system_id_global.parent = self
            self.system_id_iccp_groups = BundleInformation.SystemId.SystemIdIccpGroups()
            self.system_id_iccp_groups.parent = self


        class SystemIdGlobal(object):
            """
            System Identifier for the local system
            
            .. attribute:: system_id_global_item
            
            	Data for this item
            	**type**\:   :py:class:`SystemIdGlobalItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.system_id_global_item = BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem()
                self.system_id_global_item.parent = self


            class SystemIdGlobalItem(object):
                """
                Data for this item
                
                .. attribute:: iccp_group_id
                
                	ICCP Group that the system ID is for
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: system_id
                
                	System ID
                	**type**\:   :py:class:`SystemId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem.SystemId_>`
                
                .. attribute:: system_mac_address
                
                	MAC Address used to identify the system (deprecated)
                	**type**\:  str
                
                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                
                .. attribute:: system_priority
                
                	Priority of the system (deprecated)
                	**type**\:  int
                
                	**range:** 0..65535
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group_id = None
                    self.system_id = BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem.SystemId_()
                    self.system_id.parent = self
                    self.system_mac_address = None
                    self.system_priority = None


                class SystemId_(object):
                    """
                    System ID
                    
                    .. attribute:: system_mac_addr
                    
                    	MAC Address used to identify the system
                    	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem.SystemId_.SystemMacAddr>`
                    
                    .. attribute:: system_prio
                    
                    	Priority of the system
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.system_mac_addr = BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem.SystemId_.SystemMacAddr()
                        self.system_mac_addr.parent = self
                        self.system_prio = None


                    class SystemMacAddr(object):
                        """
                        MAC Address used to identify the system
                        
                        .. attribute:: macaddr
                        
                        	macaddr
                        	**type**\:  str
                        
                        	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.macaddr = None

                        @property
                        def _common_path(self):

                            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id-global/Cisco-IOS-XR-bundlemgr-oper:system-id-global-item/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.macaddr is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem.SystemId_.SystemMacAddr']['meta_info']

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id-global/Cisco-IOS-XR-bundlemgr-oper:system-id-global-item/Cisco-IOS-XR-bundlemgr-oper:system-id'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                            return True

                        if self.system_prio is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem.SystemId_']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id-global/Cisco-IOS-XR-bundlemgr-oper:system-id-global-item'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group_id is not None:
                        return True

                    if self.system_id is not None and self.system_id._has_data():
                        return True

                    if self.system_mac_address is not None:
                        return True

                    if self.system_priority is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.SystemId.SystemIdGlobal.SystemIdGlobalItem']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id-global'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.system_id_global_item is not None and self.system_id_global_item._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.SystemId.SystemIdGlobal']['meta_info']


        class SystemIdIccpGroups(object):
            """
            System Identifiers for all ICCP Groups
            
            .. attribute:: system_id_iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`SystemIdIccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.system_id_iccp_group = YList()
                self.system_id_iccp_group.parent = self
                self.system_id_iccp_group.name = 'system_id_iccp_group'


            class SystemIdIccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: system_id_iccp_group_item
                
                	Data for this item
                	**type**\:   :py:class:`SystemIdIccpGroupItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.system_id_iccp_group_item = BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem()
                    self.system_id_iccp_group_item.parent = self


                class SystemIdIccpGroupItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: iccp_group_id
                    
                    	ICCP Group that the system ID is for
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: system_id
                    
                    	System ID
                    	**type**\:   :py:class:`SystemId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem.SystemId_>`
                    
                    .. attribute:: system_mac_address
                    
                    	MAC Address used to identify the system (deprecated)
                    	**type**\:  str
                    
                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                    
                    .. attribute:: system_priority
                    
                    	Priority of the system (deprecated)
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.iccp_group_id = None
                        self.system_id = BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem.SystemId_()
                        self.system_id.parent = self
                        self.system_mac_address = None
                        self.system_priority = None


                    class SystemId_(object):
                        """
                        System ID
                        
                        .. attribute:: system_mac_addr
                        
                        	MAC Address used to identify the system
                        	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem.SystemId_.SystemMacAddr>`
                        
                        .. attribute:: system_prio
                        
                        	Priority of the system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.system_mac_addr = BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem.SystemId_.SystemMacAddr()
                            self.system_mac_addr.parent = self
                            self.system_prio = None


                        class SystemMacAddr(object):
                            """
                            MAC Address used to identify the system
                            
                            .. attribute:: macaddr
                            
                            	macaddr
                            	**type**\:  str
                            
                            	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.macaddr = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.macaddr is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem.SystemId_.SystemMacAddr']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-id'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                                return True

                            if self.system_prio is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem.SystemId_']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:system-id-iccp-group-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.iccp_group_id is not None:
                            return True

                        if self.system_id is not None and self.system_id._has_data():
                            return True

                        if self.system_mac_address is not None:
                            return True

                        if self.system_priority is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup.SystemIdIccpGroupItem']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id-iccp-groups/Cisco-IOS-XR-bundlemgr-oper:system-id-iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.system_id_iccp_group_item is not None and self.system_id_iccp_group_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.SystemId.SystemIdIccpGroups.SystemIdIccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id-iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.system_id_iccp_group is not None:
                    for child_ref in self.system_id_iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.SystemId.SystemIdIccpGroups']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:system-id'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.system_id_global is not None and self.system_id_global._has_data():
                return True

            if self.system_id_iccp_groups is not None and self.system_id_iccp_groups._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.SystemId']['meta_info']


    class MlacpMemberCounters(object):
        """
        Member specific counters of mLACP events
        
        .. attribute:: bundles
        
        	Bundle interfaces with counters of their member's mLACP events
        	**type**\:   :py:class:`Bundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles>`
        
        .. attribute:: iccp_groups
        
        	ICCP Groups with counters of their member's mLACP events
        	**type**\:   :py:class:`IccpGroups <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups>`
        
        .. attribute:: members
        
        	Member interfaces with counters of mLACP events
        	**type**\:   :py:class:`Members <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members>`
        
        .. attribute:: nodes
        
        	Devices with counters of their member's mLACP events
        	**type**\:   :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.bundles = BundleInformation.MlacpMemberCounters.Bundles()
            self.bundles.parent = self
            self.iccp_groups = BundleInformation.MlacpMemberCounters.IccpGroups()
            self.iccp_groups.parent = self
            self.members = BundleInformation.MlacpMemberCounters.Members()
            self.members.parent = self
            self.nodes = BundleInformation.MlacpMemberCounters.Nodes()
            self.nodes.parent = self


        class IccpGroups(object):
            """
            ICCP Groups with counters of their member's
            mLACP events
            
            .. attribute:: iccp_group
            
            	ICCP Group ID
            	**type**\: list of    :py:class:`IccpGroup <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.iccp_group = YList()
                self.iccp_group.parent = self
                self.iccp_group.name = 'iccp_group'


            class IccpGroup(object):
                """
                ICCP Group ID
                
                .. attribute:: iccp_group  <key>
                
                	ICCP Group ID
                	**type**\:  int
                
                	**range:** 1..4294967295
                
                .. attribute:: iccp_group_item
                
                	Data for this item and all its members
                	**type**\:   :py:class:`IccpGroupItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.iccp_group = None
                    self.iccp_group_item = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem()
                    self.iccp_group_item.parent = self


                class IccpGroupItem(object):
                    """
                    Data for this item and all its members
                    
                    .. attribute:: items
                    
                    	mLACP counter information items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        mLACP counter information items
                        
                        .. attribute:: bundle_data
                        
                        	Bundle mLACP TLV counter information
                        	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData>`
                        
                        .. attribute:: member_data
                        
                        	Local member mLACP TLV counter information
                        	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData>`
                        
                        .. attribute:: node_data
                        
                        	Peer device mLACP TLV counter information
                        	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData()
                            self.bundle_data.parent = self
                            self.member_data = YList()
                            self.member_data.parent = self
                            self.member_data.name = 'member_data'
                            self.node_data = YList()
                            self.node_data.parent = self
                            self.node_data.name = 'node_data'


                        class BundleData(object):
                            """
                            Bundle mLACP TLV counter information
                            
                            .. attribute:: bundle_name
                            
                            	Name of the bundle
                            	**type**\:  str
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mlacp_sync_requests_on_all_local_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_name = None
                                self.iccp_group_id = None
                                self.mlacp_sync_requests_on_all_local_ports = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts()
                                self.mlacp_sync_requests_on_all_local_ports.parent = self


                            class MlacpSyncRequestsOnAllLocalPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_name is not None:
                                    return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.mlacp_sync_requests_on_all_local_ports is not None and self.mlacp_sync_requests_on_all_local_ports._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.BundleData']['meta_info']


                        class NodeData(object):
                            """
                            Peer device mLACP TLV counter information
                            
                            .. attribute:: member_data
                            
                            	Member mLACP TLV counter information
                            	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData>`
                            
                            .. attribute:: mlacp_sync_requests_on_all_foreign_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts>`
                            
                            .. attribute:: node_data
                            
                            	Peer device mLACP TLV counter information
                            	**type**\:   :py:class:`NodeData_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.NodeData_>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.member_data = YList()
                                self.member_data.parent = self
                                self.member_data.name = 'member_data'
                                self.mlacp_sync_requests_on_all_foreign_ports = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts()
                                self.mlacp_sync_requests_on_all_foreign_ports.parent = self
                                self.node_data = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.NodeData_()
                                self.node_data.parent = self


                            class NodeData_(object):
                                """
                                Peer device mLACP TLV counter information
                                
                                .. attribute:: iccp_group_id
                                
                                	ICCP Group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: node_id
                                
                                	Device ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.iccp_group_id = None
                                    self.node_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.iccp_group_id is not None:
                                        return True

                                    if self.node_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.NodeData_']['meta_info']


                            class MlacpSyncRequestsOnAllForeignPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts']['meta_info']


                            class MemberData(object):
                                """
                                Member mLACP TLV counter information
                                
                                .. attribute:: mlacp_tlv_counters
                                
                                	Counts of mLACP TLVs sent and received
                                	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData.MlacpTlvCounters>`
                                
                                .. attribute:: port_name
                                
                                	Port name of member
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData.MlacpTlvCounters()
                                    self.mlacp_tlv_counters.parent = self
                                    self.port_name = None


                                class MlacpTlvCounters(object):
                                    """
                                    Counts of mLACP TLVs sent and received
                                    
                                    .. attribute:: last_time_cleared
                                    
                                    	Time in nsecs from boot when counters were last cleared (deprecated)
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: last_unexpected_event
                                    
                                    	Elapsed time in nsecs since last unexpected event
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: received_nak_tl_vs
                                    
                                    	Number of mLACP NAK TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_sync_requests
                                    
                                    	Number of mLACP sync request TLVs received
                                    	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                                    
                                    .. attribute:: sent_config_tl_vs
                                    
                                    	Number of mLACP config TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_state_tl_vs
                                    
                                    	Number of mLACP state TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: time_since_cleared
                                    
                                    	Elapsed time in nsecs since counters were last cleared
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.last_time_cleared = None
                                        self.last_unexpected_event = None
                                        self.received_nak_tl_vs = None
                                        self.received_priority_tl_vs = None
                                        self.received_sync_requests = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                        self.received_sync_requests.parent = self
                                        self.sent_config_tl_vs = None
                                        self.sent_priority_tl_vs = None
                                        self.sent_state_tl_vs = None
                                        self.time_since_cleared = None


                                    class ReceivedSyncRequests(object):
                                        """
                                        Number of mLACP sync request TLVs received
                                        
                                        .. attribute:: all_syncs
                                        
                                        	Total number of sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: config_syncs
                                        
                                        	Number of config sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_syncs
                                        
                                        	Number of state sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.all_syncs = None
                                            self.config_syncs = None
                                            self.state_syncs = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.all_syncs is not None:
                                                return True

                                            if self.config_syncs is not None:
                                                return True

                                            if self.state_syncs is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.last_time_cleared is not None:
                                            return True

                                        if self.last_unexpected_event is not None:
                                            return True

                                        if self.received_nak_tl_vs is not None:
                                            return True

                                        if self.received_priority_tl_vs is not None:
                                            return True

                                        if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                            return True

                                        if self.sent_config_tl_vs is not None:
                                            return True

                                        if self.sent_priority_tl_vs is not None:
                                            return True

                                        if self.sent_state_tl_vs is not None:
                                            return True

                                        if self.time_since_cleared is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData.MlacpTlvCounters']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                        return True

                                    if self.port_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData.MemberData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.member_data is not None:
                                    for child_ref in self.member_data:
                                        if child_ref._has_data():
                                            return True

                                if self.mlacp_sync_requests_on_all_foreign_ports is not None and self.mlacp_sync_requests_on_all_foreign_ports._has_data():
                                    return True

                                if self.node_data is not None and self.node_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.NodeData']['meta_info']


                        class MemberData(object):
                            """
                            Local member mLACP TLV counter information
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData.MlacpTlvCounters>`
                            
                            .. attribute:: port_name
                            
                            	Port name of member
                            	**type**\:  str
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self
                                self.port_name = None


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                if self.port_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items.MemberData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None and self.bundle_data._has_data():
                                return True

                            if self.member_data is not None:
                                for child_ref in self.member_data:
                                    if child_ref._has_data():
                                        return True

                            if self.node_data is not None:
                                for child_ref in self.node_data:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:iccp-group-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup.IccpGroupItem']['meta_info']

                @property
                def _common_path(self):
                    if self.iccp_group is None:
                        raise YPYModelError('Key property iccp_group is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:iccp-groups/Cisco-IOS-XR-bundlemgr-oper:iccp-group[Cisco-IOS-XR-bundlemgr-oper:iccp-group = ' + str(self.iccp_group) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.iccp_group is not None:
                        return True

                    if self.iccp_group_item is not None and self.iccp_group_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups.IccpGroup']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:iccp-groups'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.iccp_group is not None:
                    for child_ref in self.iccp_group:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpMemberCounters.IccpGroups']['meta_info']


        class Members(object):
            """
            Member interfaces with counters of mLACP events
            
            .. attribute:: member
            
            	Member interface
            	**type**\: list of    :py:class:`Member <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.member = YList()
                self.member.parent = self
                self.member.name = 'member'


            class Member(object):
                """
                Member interface
                
                .. attribute:: member_interface  <key>
                
                	Member interface
                	**type**\:  str
                
                .. attribute:: member_item
                
                	Data for this item
                	**type**\:   :py:class:`MemberItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member_interface = None
                    self.member_item = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem()
                    self.member_item.parent = self


                class MemberItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: items
                    
                    	mLACP counter information items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        mLACP counter information items
                        
                        .. attribute:: bundle_data
                        
                        	Bundle mLACP TLV counter information
                        	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData>`
                        
                        .. attribute:: member_data
                        
                        	Local member mLACP TLV counter information
                        	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData>`
                        
                        .. attribute:: node_data
                        
                        	Peer device mLACP TLV counter information
                        	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData()
                            self.bundle_data.parent = self
                            self.member_data = YList()
                            self.member_data.parent = self
                            self.member_data.name = 'member_data'
                            self.node_data = YList()
                            self.node_data.parent = self
                            self.node_data.name = 'node_data'


                        class BundleData(object):
                            """
                            Bundle mLACP TLV counter information
                            
                            .. attribute:: bundle_name
                            
                            	Name of the bundle
                            	**type**\:  str
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mlacp_sync_requests_on_all_local_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_name = None
                                self.iccp_group_id = None
                                self.mlacp_sync_requests_on_all_local_ports = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts()
                                self.mlacp_sync_requests_on_all_local_ports.parent = self


                            class MlacpSyncRequestsOnAllLocalPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_name is not None:
                                    return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.mlacp_sync_requests_on_all_local_ports is not None and self.mlacp_sync_requests_on_all_local_ports._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.BundleData']['meta_info']


                        class NodeData(object):
                            """
                            Peer device mLACP TLV counter information
                            
                            .. attribute:: member_data
                            
                            	Member mLACP TLV counter information
                            	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData>`
                            
                            .. attribute:: mlacp_sync_requests_on_all_foreign_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts>`
                            
                            .. attribute:: node_data
                            
                            	Peer device mLACP TLV counter information
                            	**type**\:   :py:class:`NodeData_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.NodeData_>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.member_data = YList()
                                self.member_data.parent = self
                                self.member_data.name = 'member_data'
                                self.mlacp_sync_requests_on_all_foreign_ports = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts()
                                self.mlacp_sync_requests_on_all_foreign_ports.parent = self
                                self.node_data = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.NodeData_()
                                self.node_data.parent = self


                            class NodeData_(object):
                                """
                                Peer device mLACP TLV counter information
                                
                                .. attribute:: iccp_group_id
                                
                                	ICCP Group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: node_id
                                
                                	Device ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.iccp_group_id = None
                                    self.node_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.iccp_group_id is not None:
                                        return True

                                    if self.node_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.NodeData_']['meta_info']


                            class MlacpSyncRequestsOnAllForeignPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts']['meta_info']


                            class MemberData(object):
                                """
                                Member mLACP TLV counter information
                                
                                .. attribute:: mlacp_tlv_counters
                                
                                	Counts of mLACP TLVs sent and received
                                	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData.MlacpTlvCounters>`
                                
                                .. attribute:: port_name
                                
                                	Port name of member
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData.MlacpTlvCounters()
                                    self.mlacp_tlv_counters.parent = self
                                    self.port_name = None


                                class MlacpTlvCounters(object):
                                    """
                                    Counts of mLACP TLVs sent and received
                                    
                                    .. attribute:: last_time_cleared
                                    
                                    	Time in nsecs from boot when counters were last cleared (deprecated)
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: last_unexpected_event
                                    
                                    	Elapsed time in nsecs since last unexpected event
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: received_nak_tl_vs
                                    
                                    	Number of mLACP NAK TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_sync_requests
                                    
                                    	Number of mLACP sync request TLVs received
                                    	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                                    
                                    .. attribute:: sent_config_tl_vs
                                    
                                    	Number of mLACP config TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_state_tl_vs
                                    
                                    	Number of mLACP state TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: time_since_cleared
                                    
                                    	Elapsed time in nsecs since counters were last cleared
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.last_time_cleared = None
                                        self.last_unexpected_event = None
                                        self.received_nak_tl_vs = None
                                        self.received_priority_tl_vs = None
                                        self.received_sync_requests = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                        self.received_sync_requests.parent = self
                                        self.sent_config_tl_vs = None
                                        self.sent_priority_tl_vs = None
                                        self.sent_state_tl_vs = None
                                        self.time_since_cleared = None


                                    class ReceivedSyncRequests(object):
                                        """
                                        Number of mLACP sync request TLVs received
                                        
                                        .. attribute:: all_syncs
                                        
                                        	Total number of sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: config_syncs
                                        
                                        	Number of config sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_syncs
                                        
                                        	Number of state sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.all_syncs = None
                                            self.config_syncs = None
                                            self.state_syncs = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.all_syncs is not None:
                                                return True

                                            if self.config_syncs is not None:
                                                return True

                                            if self.state_syncs is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.last_time_cleared is not None:
                                            return True

                                        if self.last_unexpected_event is not None:
                                            return True

                                        if self.received_nak_tl_vs is not None:
                                            return True

                                        if self.received_priority_tl_vs is not None:
                                            return True

                                        if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                            return True

                                        if self.sent_config_tl_vs is not None:
                                            return True

                                        if self.sent_priority_tl_vs is not None:
                                            return True

                                        if self.sent_state_tl_vs is not None:
                                            return True

                                        if self.time_since_cleared is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData.MlacpTlvCounters']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                        return True

                                    if self.port_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData.MemberData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.member_data is not None:
                                    for child_ref in self.member_data:
                                        if child_ref._has_data():
                                            return True

                                if self.mlacp_sync_requests_on_all_foreign_ports is not None and self.mlacp_sync_requests_on_all_foreign_ports._has_data():
                                    return True

                                if self.node_data is not None and self.node_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.NodeData']['meta_info']


                        class MemberData(object):
                            """
                            Local member mLACP TLV counter information
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData.MlacpTlvCounters>`
                            
                            .. attribute:: port_name
                            
                            	Port name of member
                            	**type**\:  str
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self
                                self.port_name = None


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                if self.port_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items.MemberData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None and self.bundle_data._has_data():
                                return True

                            if self.member_data is not None:
                                for child_ref in self.member_data:
                                    if child_ref._has_data():
                                        return True

                            if self.node_data is not None:
                                for child_ref in self.node_data:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member.MemberItem']['meta_info']

                @property
                def _common_path(self):
                    if self.member_interface is None:
                        raise YPYModelError('Key property member_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:members/Cisco-IOS-XR-bundlemgr-oper:member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member_interface is not None:
                        return True

                    if self.member_item is not None and self.member_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Members.Member']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:members'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.member is not None:
                    for child_ref in self.member:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpMemberCounters.Members']['meta_info']


        class Bundles(object):
            """
            Bundle interfaces with counters of their
            member's mLACP events
            
            .. attribute:: bundle
            
            	Bundle interface
            	**type**\: list of    :py:class:`Bundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bundle = YList()
                self.bundle.parent = self
                self.bundle.name = 'bundle'


            class Bundle(object):
                """
                Bundle interface
                
                .. attribute:: bundle_interface  <key>
                
                	Bundle interface
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: bundle_item
                
                	Data for this item
                	**type**\:   :py:class:`BundleItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_interface = None
                    self.bundle_item = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem()
                    self.bundle_item.parent = self


                class BundleItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: bundle_data
                    
                    	Bundle mLACP TLV counter information
                    	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData>`
                    
                    .. attribute:: member_data
                    
                    	Local member mLACP TLV counter information
                    	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData>`
                    
                    .. attribute:: node_data
                    
                    	Peer device mLACP TLV counter information
                    	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_data = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData()
                        self.bundle_data.parent = self
                        self.member_data = YList()
                        self.member_data.parent = self
                        self.member_data.name = 'member_data'
                        self.node_data = YList()
                        self.node_data.parent = self
                        self.node_data.name = 'node_data'


                    class BundleData(object):
                        """
                        Bundle mLACP TLV counter information
                        
                        .. attribute:: bundle_name
                        
                        	Name of the bundle
                        	**type**\:  str
                        
                        .. attribute:: iccp_group_id
                        
                        	ICCP Group ID
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: mlacp_sync_requests_on_all_local_ports
                        
                        	Counts of mLACP sync request TLVs on all ports
                        	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData.MlacpSyncRequestsOnAllLocalPorts>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_name = None
                            self.iccp_group_id = None
                            self.mlacp_sync_requests_on_all_local_ports = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData.MlacpSyncRequestsOnAllLocalPorts()
                            self.mlacp_sync_requests_on_all_local_ports.parent = self


                        class MlacpSyncRequestsOnAllLocalPorts(object):
                            """
                            Counts of mLACP sync request TLVs on all ports
                            
                            .. attribute:: last_time_cleared
                            
                            	Time in nsecs from boot when counters were last cleared (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of mLACP sync request TLVs received
                            	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests>`
                            
                            .. attribute:: time_since_cleared
                            
                            	Elapsed time in nsecs since counters were last cleared
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.last_time_cleared = None
                                self.received_sync_requests = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests()
                                self.received_sync_requests.parent = self
                                self.time_since_cleared = None


                            class ReceivedSyncRequests(object):
                                """
                                Number of mLACP sync request TLVs received
                                
                                .. attribute:: all_syncs
                                
                                	Total number of sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: config_syncs
                                
                                	Number of config sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_syncs
                                
                                	Number of state sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.all_syncs = None
                                    self.config_syncs = None
                                    self.state_syncs = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.all_syncs is not None:
                                        return True

                                    if self.config_syncs is not None:
                                        return True

                                    if self.state_syncs is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-ports'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.last_time_cleared is not None:
                                    return True

                                if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                    return True

                                if self.time_since_cleared is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData.MlacpSyncRequestsOnAllLocalPorts']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_name is not None:
                                return True

                            if self.iccp_group_id is not None:
                                return True

                            if self.mlacp_sync_requests_on_all_local_ports is not None and self.mlacp_sync_requests_on_all_local_ports._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.BundleData']['meta_info']


                    class NodeData(object):
                        """
                        Peer device mLACP TLV counter information
                        
                        .. attribute:: member_data
                        
                        	Member mLACP TLV counter information
                        	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData>`
                        
                        .. attribute:: mlacp_sync_requests_on_all_foreign_ports
                        
                        	Counts of mLACP sync request TLVs on all ports
                        	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MlacpSyncRequestsOnAllForeignPorts>`
                        
                        .. attribute:: node_data
                        
                        	Peer device mLACP TLV counter information
                        	**type**\:   :py:class:`NodeData_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.NodeData_>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.member_data = YList()
                            self.member_data.parent = self
                            self.member_data.name = 'member_data'
                            self.mlacp_sync_requests_on_all_foreign_ports = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MlacpSyncRequestsOnAllForeignPorts()
                            self.mlacp_sync_requests_on_all_foreign_ports.parent = self
                            self.node_data = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.NodeData_()
                            self.node_data.parent = self


                        class NodeData_(object):
                            """
                            Peer device mLACP TLV counter information
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: node_id
                            
                            	Device ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.iccp_group_id = None
                                self.node_id = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.iccp_group_id is not None:
                                    return True

                                if self.node_id is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.NodeData_']['meta_info']


                        class MlacpSyncRequestsOnAllForeignPorts(object):
                            """
                            Counts of mLACP sync request TLVs on all ports
                            
                            .. attribute:: last_time_cleared
                            
                            	Time in nsecs from boot when counters were last cleared (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of mLACP sync request TLVs received
                            	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests>`
                            
                            .. attribute:: time_since_cleared
                            
                            	Elapsed time in nsecs since counters were last cleared
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.last_time_cleared = None
                                self.received_sync_requests = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests()
                                self.received_sync_requests.parent = self
                                self.time_since_cleared = None


                            class ReceivedSyncRequests(object):
                                """
                                Number of mLACP sync request TLVs received
                                
                                .. attribute:: all_syncs
                                
                                	Total number of sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: config_syncs
                                
                                	Number of config sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_syncs
                                
                                	Number of state sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.all_syncs = None
                                    self.config_syncs = None
                                    self.state_syncs = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.all_syncs is not None:
                                        return True

                                    if self.config_syncs is not None:
                                        return True

                                    if self.state_syncs is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-ports'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.last_time_cleared is not None:
                                    return True

                                if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                    return True

                                if self.time_since_cleared is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MlacpSyncRequestsOnAllForeignPorts']['meta_info']


                        class MemberData(object):
                            """
                            Member mLACP TLV counter information
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData.MlacpTlvCounters>`
                            
                            .. attribute:: port_name
                            
                            	Port name of member
                            	**type**\:  str
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self
                                self.port_name = None


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                if self.port_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData.MemberData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.member_data is not None:
                                for child_ref in self.member_data:
                                    if child_ref._has_data():
                                        return True

                            if self.mlacp_sync_requests_on_all_foreign_ports is not None and self.mlacp_sync_requests_on_all_foreign_ports._has_data():
                                return True

                            if self.node_data is not None and self.node_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.NodeData']['meta_info']


                    class MemberData(object):
                        """
                        Local member mLACP TLV counter information
                        
                        .. attribute:: mlacp_tlv_counters
                        
                        	Counts of mLACP TLVs sent and received
                        	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData.MlacpTlvCounters>`
                        
                        .. attribute:: port_name
                        
                        	Port name of member
                        	**type**\:  str
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData.MlacpTlvCounters()
                            self.mlacp_tlv_counters.parent = self
                            self.port_name = None


                        class MlacpTlvCounters(object):
                            """
                            Counts of mLACP TLVs sent and received
                            
                            .. attribute:: last_time_cleared
                            
                            	Time in nsecs from boot when counters were last cleared (deprecated)
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: last_unexpected_event
                            
                            	Elapsed time in nsecs since last unexpected event
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            .. attribute:: received_nak_tl_vs
                            
                            	Number of mLACP NAK TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_priority_tl_vs
                            
                            	Number of mLACP priority TLVs received
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: received_sync_requests
                            
                            	Number of mLACP sync request TLVs received
                            	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                            
                            .. attribute:: sent_config_tl_vs
                            
                            	Number of mLACP config TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_priority_tl_vs
                            
                            	Number of mLACP priority TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sent_state_tl_vs
                            
                            	Number of mLACP state TLVs sent
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: time_since_cleared
                            
                            	Elapsed time in nsecs since counters were last cleared
                            	**type**\:  int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**units**\: nanosecond
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.last_time_cleared = None
                                self.last_unexpected_event = None
                                self.received_nak_tl_vs = None
                                self.received_priority_tl_vs = None
                                self.received_sync_requests = BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                self.received_sync_requests.parent = self
                                self.sent_config_tl_vs = None
                                self.sent_priority_tl_vs = None
                                self.sent_state_tl_vs = None
                                self.time_since_cleared = None


                            class ReceivedSyncRequests(object):
                                """
                                Number of mLACP sync request TLVs received
                                
                                .. attribute:: all_syncs
                                
                                	Total number of sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: config_syncs
                                
                                	Number of config sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: state_syncs
                                
                                	Number of state sync requests received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.all_syncs = None
                                    self.config_syncs = None
                                    self.state_syncs = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.all_syncs is not None:
                                        return True

                                    if self.config_syncs is not None:
                                        return True

                                    if self.state_syncs is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.last_time_cleared is not None:
                                    return True

                                if self.last_unexpected_event is not None:
                                    return True

                                if self.received_nak_tl_vs is not None:
                                    return True

                                if self.received_priority_tl_vs is not None:
                                    return True

                                if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                    return True

                                if self.sent_config_tl_vs is not None:
                                    return True

                                if self.sent_priority_tl_vs is not None:
                                    return True

                                if self.sent_state_tl_vs is not None:
                                    return True

                                if self.time_since_cleared is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData.MlacpTlvCounters']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                return True

                            if self.port_name is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem.MemberData']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_data is not None and self.bundle_data._has_data():
                            return True

                        if self.member_data is not None:
                            for child_ref in self.member_data:
                                if child_ref._has_data():
                                    return True

                        if self.node_data is not None:
                            for child_ref in self.node_data:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle.BundleItem']['meta_info']

                @property
                def _common_path(self):
                    if self.bundle_interface is None:
                        raise YPYModelError('Key property bundle_interface is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:bundles/Cisco-IOS-XR-bundlemgr-oper:bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_interface is not None:
                        return True

                    if self.bundle_item is not None and self.bundle_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles.Bundle']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:bundles'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bundle is not None:
                    for child_ref in self.bundle:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpMemberCounters.Bundles']['meta_info']


        class Nodes(object):
            """
            Devices with counters of their member's mLACP
            events
            
            .. attribute:: node
            
            	Node ID
            	**type**\: list of    :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node = YList()
                self.node.parent = self
                self.node.name = 'node'


            class Node(object):
                """
                Node ID
                
                .. attribute:: node  <key>
                
                	For a local device the Node ID e.g. '0\_0\_CPU0', for a peer device the LDP ID followed by the ICCP Group ID e.g. '5.4.3.2 ,4'
                	**type**\:  str
                
                .. attribute:: node_item
                
                	Data for this item
                	**type**\:   :py:class:`NodeItem <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.node = None
                    self.node_item = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem()
                    self.node_item.parent = self


                class NodeItem(object):
                    """
                    Data for this item
                    
                    .. attribute:: items
                    
                    	mLACP counter information items
                    	**type**\: list of    :py:class:`Items <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.items = YList()
                        self.items.parent = self
                        self.items.name = 'items'


                    class Items(object):
                        """
                        mLACP counter information items
                        
                        .. attribute:: bundle_data
                        
                        	Bundle mLACP TLV counter information
                        	**type**\:   :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData>`
                        
                        .. attribute:: member_data
                        
                        	Local member mLACP TLV counter information
                        	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData>`
                        
                        .. attribute:: node_data
                        
                        	Peer device mLACP TLV counter information
                        	**type**\: list of    :py:class:`NodeData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.bundle_data = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData()
                            self.bundle_data.parent = self
                            self.member_data = YList()
                            self.member_data.parent = self
                            self.member_data.name = 'member_data'
                            self.node_data = YList()
                            self.node_data.parent = self
                            self.node_data.name = 'node_data'


                        class BundleData(object):
                            """
                            Bundle mLACP TLV counter information
                            
                            .. attribute:: bundle_name
                            
                            	Name of the bundle
                            	**type**\:  str
                            
                            .. attribute:: iccp_group_id
                            
                            	ICCP Group ID
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: mlacp_sync_requests_on_all_local_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllLocalPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bundle_name = None
                                self.iccp_group_id = None
                                self.mlacp_sync_requests_on_all_local_ports = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts()
                                self.mlacp_sync_requests_on_all_local_ports.parent = self


                            class MlacpSyncRequestsOnAllLocalPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-local-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData.MlacpSyncRequestsOnAllLocalPorts']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bundle_name is not None:
                                    return True

                                if self.iccp_group_id is not None:
                                    return True

                                if self.mlacp_sync_requests_on_all_local_ports is not None and self.mlacp_sync_requests_on_all_local_ports._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.BundleData']['meta_info']


                        class NodeData(object):
                            """
                            Peer device mLACP TLV counter information
                            
                            .. attribute:: member_data
                            
                            	Member mLACP TLV counter information
                            	**type**\: list of    :py:class:`MemberData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData>`
                            
                            .. attribute:: mlacp_sync_requests_on_all_foreign_ports
                            
                            	Counts of mLACP sync request TLVs on all ports
                            	**type**\:   :py:class:`MlacpSyncRequestsOnAllForeignPorts <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts>`
                            
                            .. attribute:: node_data
                            
                            	Peer device mLACP TLV counter information
                            	**type**\:   :py:class:`NodeData_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.NodeData_>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.member_data = YList()
                                self.member_data.parent = self
                                self.member_data.name = 'member_data'
                                self.mlacp_sync_requests_on_all_foreign_ports = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts()
                                self.mlacp_sync_requests_on_all_foreign_ports.parent = self
                                self.node_data = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.NodeData_()
                                self.node_data.parent = self


                            class NodeData_(object):
                                """
                                Peer device mLACP TLV counter information
                                
                                .. attribute:: iccp_group_id
                                
                                	ICCP Group ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: node_id
                                
                                	Device ID
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.iccp_group_id = None
                                    self.node_id = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.iccp_group_id is not None:
                                        return True

                                    if self.node_id is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.NodeData_']['meta_info']


                            class MlacpSyncRequestsOnAllForeignPorts(object):
                                """
                                Counts of mLACP sync request TLVs on all ports
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests>`
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-sync-requests-on-all-foreign-ports'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MlacpSyncRequestsOnAllForeignPorts']['meta_info']


                            class MemberData(object):
                                """
                                Member mLACP TLV counter information
                                
                                .. attribute:: mlacp_tlv_counters
                                
                                	Counts of mLACP TLVs sent and received
                                	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData.MlacpTlvCounters>`
                                
                                .. attribute:: port_name
                                
                                	Port name of member
                                	**type**\:  str
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData.MlacpTlvCounters()
                                    self.mlacp_tlv_counters.parent = self
                                    self.port_name = None


                                class MlacpTlvCounters(object):
                                    """
                                    Counts of mLACP TLVs sent and received
                                    
                                    .. attribute:: last_time_cleared
                                    
                                    	Time in nsecs from boot when counters were last cleared (deprecated)
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: last_unexpected_event
                                    
                                    	Elapsed time in nsecs since last unexpected event
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    .. attribute:: received_nak_tl_vs
                                    
                                    	Number of mLACP NAK TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: received_sync_requests
                                    
                                    	Number of mLACP sync request TLVs received
                                    	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                                    
                                    .. attribute:: sent_config_tl_vs
                                    
                                    	Number of mLACP config TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_priority_tl_vs
                                    
                                    	Number of mLACP priority TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: sent_state_tl_vs
                                    
                                    	Number of mLACP state TLVs sent
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: time_since_cleared
                                    
                                    	Elapsed time in nsecs since counters were last cleared
                                    	**type**\:  int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**units**\: nanosecond
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.last_time_cleared = None
                                        self.last_unexpected_event = None
                                        self.received_nak_tl_vs = None
                                        self.received_priority_tl_vs = None
                                        self.received_sync_requests = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                        self.received_sync_requests.parent = self
                                        self.sent_config_tl_vs = None
                                        self.sent_priority_tl_vs = None
                                        self.sent_state_tl_vs = None
                                        self.time_since_cleared = None


                                    class ReceivedSyncRequests(object):
                                        """
                                        Number of mLACP sync request TLVs received
                                        
                                        .. attribute:: all_syncs
                                        
                                        	Total number of sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: config_syncs
                                        
                                        	Number of config sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: state_syncs
                                        
                                        	Number of state sync requests received
                                        	**type**\:  int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'bundlemgr-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            self.parent = None
                                            self.all_syncs = None
                                            self.config_syncs = None
                                            self.state_syncs = None

                                        @property
                                        def _common_path(self):
                                            if self.parent is None:
                                                raise YPYModelError('parent is not set . Cannot derive path.')

                                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                        def is_config(self):
                                            ''' Returns True if this instance represents config data else returns False '''
                                            return False

                                        def _has_data(self):
                                            if not self.is_config():
                                                return False
                                            if self.all_syncs is not None:
                                                return True

                                            if self.config_syncs is not None:
                                                return True

                                            if self.state_syncs is not None:
                                                return True

                                            return False

                                        @staticmethod
                                        def _meta_info():
                                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                            return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.last_time_cleared is not None:
                                            return True

                                        if self.last_unexpected_event is not None:
                                            return True

                                        if self.received_nak_tl_vs is not None:
                                            return True

                                        if self.received_priority_tl_vs is not None:
                                            return True

                                        if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                            return True

                                        if self.sent_config_tl_vs is not None:
                                            return True

                                        if self.sent_priority_tl_vs is not None:
                                            return True

                                        if self.sent_state_tl_vs is not None:
                                            return True

                                        if self.time_since_cleared is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData.MlacpTlvCounters']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                        return True

                                    if self.port_name is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData.MemberData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.member_data is not None:
                                    for child_ref in self.member_data:
                                        if child_ref._has_data():
                                            return True

                                if self.mlacp_sync_requests_on_all_foreign_ports is not None and self.mlacp_sync_requests_on_all_foreign_ports._has_data():
                                    return True

                                if self.node_data is not None and self.node_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.NodeData']['meta_info']


                        class MemberData(object):
                            """
                            Local member mLACP TLV counter information
                            
                            .. attribute:: mlacp_tlv_counters
                            
                            	Counts of mLACP TLVs sent and received
                            	**type**\:   :py:class:`MlacpTlvCounters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData.MlacpTlvCounters>`
                            
                            .. attribute:: port_name
                            
                            	Port name of member
                            	**type**\:  str
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.mlacp_tlv_counters = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData.MlacpTlvCounters()
                                self.mlacp_tlv_counters.parent = self
                                self.port_name = None


                            class MlacpTlvCounters(object):
                                """
                                Counts of mLACP TLVs sent and received
                                
                                .. attribute:: last_time_cleared
                                
                                	Time in nsecs from boot when counters were last cleared (deprecated)
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: last_unexpected_event
                                
                                	Elapsed time in nsecs since last unexpected event
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                .. attribute:: received_nak_tl_vs
                                
                                	Number of mLACP NAK TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_priority_tl_vs
                                
                                	Number of mLACP priority TLVs received
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: received_sync_requests
                                
                                	Number of mLACP sync request TLVs received
                                	**type**\:   :py:class:`ReceivedSyncRequests <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests>`
                                
                                .. attribute:: sent_config_tl_vs
                                
                                	Number of mLACP config TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_priority_tl_vs
                                
                                	Number of mLACP priority TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: sent_state_tl_vs
                                
                                	Number of mLACP state TLVs sent
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: time_since_cleared
                                
                                	Elapsed time in nsecs since counters were last cleared
                                	**type**\:  int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**units**\: nanosecond
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.last_time_cleared = None
                                    self.last_unexpected_event = None
                                    self.received_nak_tl_vs = None
                                    self.received_priority_tl_vs = None
                                    self.received_sync_requests = BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests()
                                    self.received_sync_requests.parent = self
                                    self.sent_config_tl_vs = None
                                    self.sent_priority_tl_vs = None
                                    self.sent_state_tl_vs = None
                                    self.time_since_cleared = None


                                class ReceivedSyncRequests(object):
                                    """
                                    Number of mLACP sync request TLVs received
                                    
                                    .. attribute:: all_syncs
                                    
                                    	Total number of sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: config_syncs
                                    
                                    	Number of config sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: state_syncs
                                    
                                    	Number of state sync requests received
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.all_syncs = None
                                        self.config_syncs = None
                                        self.state_syncs = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:received-sync-requests'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.all_syncs is not None:
                                            return True

                                        if self.config_syncs is not None:
                                            return True

                                        if self.state_syncs is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData.MlacpTlvCounters.ReceivedSyncRequests']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mlacp-tlv-counters'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.last_time_cleared is not None:
                                        return True

                                    if self.last_unexpected_event is not None:
                                        return True

                                    if self.received_nak_tl_vs is not None:
                                        return True

                                    if self.received_priority_tl_vs is not None:
                                        return True

                                    if self.received_sync_requests is not None and self.received_sync_requests._has_data():
                                        return True

                                    if self.sent_config_tl_vs is not None:
                                        return True

                                    if self.sent_priority_tl_vs is not None:
                                        return True

                                    if self.sent_state_tl_vs is not None:
                                        return True

                                    if self.time_since_cleared is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData.MlacpTlvCounters']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.mlacp_tlv_counters is not None and self.mlacp_tlv_counters._has_data():
                                    return True

                                if self.port_name is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items.MemberData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:items'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.bundle_data is not None and self.bundle_data._has_data():
                                return True

                            if self.member_data is not None:
                                for child_ref in self.member_data:
                                    if child_ref._has_data():
                                        return True

                            if self.node_data is not None:
                                for child_ref in self.node_data:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem.Items']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:node-item'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.items is not None:
                            for child_ref in self.items:
                                if child_ref._has_data():
                                    return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node.NodeItem']['meta_info']

                @property
                def _common_path(self):
                    if self.node is None:
                        raise YPYModelError('Key property node is None')

                    return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:nodes/Cisco-IOS-XR-bundlemgr-oper:node[Cisco-IOS-XR-bundlemgr-oper:node = ' + str(self.node) + ']'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.node is not None:
                        return True

                    if self.node_item is not None and self.node_item._has_data():
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes.Node']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters/Cisco-IOS-XR-bundlemgr-oper:nodes'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node is not None:
                    for child_ref in self.node:
                        if child_ref._has_data():
                            return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundleInformation.MlacpMemberCounters.Nodes']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information/Cisco-IOS-XR-bundlemgr-oper:mlacp-member-counters'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.bundles is not None and self.bundles._has_data():
                return True

            if self.iccp_groups is not None and self.iccp_groups._has_data():
                return True

            if self.members is not None and self.members._has_data():
                return True

            if self.nodes is not None and self.nodes._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundleInformation.MlacpMemberCounters']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-bundlemgr-oper:bundle-information'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.bfd_counters is not None and self.bfd_counters._has_data():
            return True

        if self.bundle is not None and self.bundle._has_data():
            return True

        if self.bundle_briefs is not None and self.bundle_briefs._has_data():
            return True

        if self.events is not None and self.events._has_data():
            return True

        if self.events_bdl is not None and self.events_bdl._has_data():
            return True

        if self.events_mbr is not None and self.events_mbr._has_data():
            return True

        if self.events_rg is not None and self.events_rg._has_data():
            return True

        if self.lacp is not None and self.lacp._has_data():
            return True

        if self.mac_allocation is not None and self.mac_allocation._has_data():
            return True

        if self.mlacp is not None and self.mlacp._has_data():
            return True

        if self.mlacp_brief is not None and self.mlacp_brief._has_data():
            return True

        if self.mlacp_bundle_counters is not None and self.mlacp_bundle_counters._has_data():
            return True

        if self.mlacp_iccp_group_counters is not None and self.mlacp_iccp_group_counters._has_data():
            return True

        if self.mlacp_member_counters is not None and self.mlacp_member_counters._has_data():
            return True

        if self.protect is not None and self.protect._has_data():
            return True

        if self.scheduled_actions is not None and self.scheduled_actions._has_data():
            return True

        if self.system_id is not None and self.system_id._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BundleInformation']['meta_info']


class LacpData(object):
    """
    lacp data
    
    .. attribute:: global_
    
    	Global LACP data
    	**type**\:   :py:class:`Global_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpData.Global_>`
    
    

    """

    _prefix = 'bundlemgr-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.global_ = LacpData.Global_()
        self.global_.parent = self


    class Global_(object):
        """
        Global LACP data
        
        .. attribute:: system_id
        
        	LACP System ID
        	**type**\:   :py:class:`SystemId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpData.Global_.SystemId>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.system_id = LacpData.Global_.SystemId()
            self.system_id.parent = self


        class SystemId(object):
            """
            LACP System ID
            
            .. attribute:: iccp_group_id
            
            	ICCP Group that the system ID is for
            	**type**\:  int
            
            	**range:** 0..4294967295
            
            .. attribute:: system_id
            
            	System ID
            	**type**\:   :py:class:`SystemId_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpData.Global_.SystemId.SystemId_>`
            
            .. attribute:: system_mac_address
            
            	MAC Address used to identify the system (deprecated)
            	**type**\:  str
            
            	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
            
            .. attribute:: system_priority
            
            	Priority of the system (deprecated)
            	**type**\:  int
            
            	**range:** 0..65535
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.iccp_group_id = None
                self.system_id = LacpData.Global_.SystemId.SystemId_()
                self.system_id.parent = self
                self.system_mac_address = None
                self.system_priority = None


            class SystemId_(object):
                """
                System ID
                
                .. attribute:: system_mac_addr
                
                	MAC Address used to identify the system
                	**type**\:   :py:class:`SystemMacAddr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpData.Global_.SystemId.SystemId_.SystemMacAddr>`
                
                .. attribute:: system_prio
                
                	Priority of the system
                	**type**\:  int
                
                	**range:** 0..65535
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.system_mac_addr = LacpData.Global_.SystemId.SystemId_.SystemMacAddr()
                    self.system_mac_addr.parent = self
                    self.system_prio = None


                class SystemMacAddr(object):
                    """
                    MAC Address used to identify the system
                    
                    .. attribute:: macaddr
                    
                    	macaddr
                    	**type**\:  str
                    
                    	**pattern:** ([0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2})\*)?
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.macaddr = None

                    @property
                    def _common_path(self):

                        return '/Cisco-IOS-XR-bundlemgr-oper:lacp-data/Cisco-IOS-XR-bundlemgr-oper:global/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-mac-addr'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.macaddr is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['LacpData.Global_.SystemId.SystemId_.SystemMacAddr']['meta_info']

                @property
                def _common_path(self):

                    return '/Cisco-IOS-XR-bundlemgr-oper:lacp-data/Cisco-IOS-XR-bundlemgr-oper:global/Cisco-IOS-XR-bundlemgr-oper:system-id/Cisco-IOS-XR-bundlemgr-oper:system-id'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.system_mac_addr is not None and self.system_mac_addr._has_data():
                        return True

                    if self.system_prio is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['LacpData.Global_.SystemId.SystemId_']['meta_info']

            @property
            def _common_path(self):

                return '/Cisco-IOS-XR-bundlemgr-oper:lacp-data/Cisco-IOS-XR-bundlemgr-oper:global/Cisco-IOS-XR-bundlemgr-oper:system-id'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.iccp_group_id is not None:
                    return True

                if self.system_id is not None and self.system_id._has_data():
                    return True

                if self.system_mac_address is not None:
                    return True

                if self.system_priority is not None:
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['LacpData.Global_.SystemId']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:lacp-data/Cisco-IOS-XR-bundlemgr-oper:global'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.system_id is not None and self.system_id._has_data():
                return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['LacpData.Global_']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-bundlemgr-oper:lacp-data'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.global_ is not None and self.global_._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['LacpData']['meta_info']


class Bundles(object):
    """
    bundles
    
    .. attribute:: bundles
    
    	Per bundle operational data
    	**type**\:   :py:class:`Bundles_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_>`
    
    

    """

    _prefix = 'bundlemgr-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.bundles = Bundles.Bundles_()
        self.bundles.parent = self


    class Bundles_(object):
        """
        Per bundle operational data
        
        .. attribute:: bundle
        
        	Bundle interface
        	**type**\: list of    :py:class:`Bundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.bundle = YList()
            self.bundle.parent = self
            self.bundle.name = 'bundle'


        class Bundle(object):
            """
            Bundle interface
            
            .. attribute:: bundle_interface  <key>
            
            	Bundle interface
            	**type**\:  str
            
            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
            
            .. attribute:: data
            
            	Data for each Bundle
            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Data>`
            
            .. attribute:: members
            
            	Member interface
            	**type**\:   :py:class:`Members <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Members>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.bundle_interface = None
                self.data = Bundles.Bundles_.Bundle.Data()
                self.data.parent = self
                self.members = Bundles.Bundles_.Bundle.Members()
                self.members.parent = self


            class Data(object):
                """
                Data for each Bundle
                
                .. attribute:: active_foreign_member_count
                
                	The number of active foreign members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: active_member_count
                
                	The number of active local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: available_bandwidth
                
                	Bandwidth available to the bundle interface (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: bfd_config
                
                	Configuration values for BFD on bundle members
                	**type**\: list of    :py:class:`BfdConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Data.BfdConfig>`
                
                .. attribute:: bundle_interface_name
                
                	Bundle interface name
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: bundle_status
                
                	The state of the bundle
                	**type**\:   :py:class:`BmBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlStateEnum>`
                
                .. attribute:: cisco_extensions
                
                	The status of the Cisco Extensions feature (1 = enabled, 0 = not enabled)
                	**type**\:  bool
                
                .. attribute:: collector_max_delay
                
                	Collector Max Delay
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: configured_bandwidth
                
                	Bandwidth configured on the bundle interface (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: configured_foreign_member_count
                
                	The number of configured local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: configured_member_count
                
                	The number of configured local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: effective_bandwidth
                
                	Effective bandwidth on the bundle interface (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: iccp_group_id
                
                	ICCP Group that the bundle is configured to
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: inter_chassis
                
                	Indicates if this bundle is operating as an inter\-chassis link (1 = I\-C link, 0 = normal)
                	**type**\:  bool
                
                .. attribute:: ipv4bfd_status
                
                	The status of the BFD (IPv4) feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: ipv6bfd_status
                
                	The status of the BFD (IPv6) feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: is_active
                
                	Indicates the active/standby redundancy state of the device for the bundle
                	**type**\:  bool
                
                .. attribute:: lacp_nonrevertive
                
                	The status of the LACP nonrevertive feature (1 = enable, 0 = not enabled)
                	**type**\:  bool
                
                .. attribute:: lacp_status
                
                	The status of the LACP feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: link_order_status
                
                	The status of the link order signaling feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: load_balance_hash_type
                
                	The type of hash to use for load balancing
                	**type**\:  str
                
                .. attribute:: load_balance_locality_threshold
                
                	The number of links required per rack for localized load balancing
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: mac_address
                
                	MAC address of this member
                	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Data.MacAddress>`
                
                .. attribute:: mac_source
                
                	The source of the MAC Address
                	**type**\:   :py:class:`BmBdlMacSourceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmBdlMacSourceEnum>`
                
                .. attribute:: mac_source_member
                
                	The name of the member that supplied the MAC address
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: maximize_threshold_value_band_width
                
                	Attempt to maximize the bundle if bandwidth is below this value
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: maximize_threshold_value_links
                
                	Attempt to maximize the bundle if links are below this value
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: maximum_active_links
                
                	Maximum number of active links in the bundle
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: maximum_active_links_source
                
                	Source of maximum active links value
                	**type**\:   :py:class:`BmWhichSystemEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmWhichSystemEnum>`
                
                .. attribute:: minimum_active_links
                
                	Minimum number of active links for bundle to go up
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: minimum_bandwidth
                
                	Minimum bundle bandwidth for bundle to go up (kbps)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                	**units**\: kbit/s
                
                .. attribute:: mlacp_mode
                
                	Indicates the mode of the device for the bundle
                	**type**\:   :py:class:`BundleMlacpModeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMlacpModeEnum>`
                
                .. attribute:: mlacp_status
                
                	The status of the mLACP feature on the bundle
                	**type**\:   :py:class:`BmFeatureStatusEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmFeatureStatusEnum>`
                
                .. attribute:: primary_member
                
                	Primary bundle member (no longer applicable)
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: recovery_delay
                
                	Number of seconds to wait before becoming active after recovering from a failure
                	**type**\:  int
                
                	**range:** 0..65535
                
                	**units**\: second
                
                .. attribute:: singleton
                
                	Is the ICCP group of the bundle in singleton mode (1 = singleton; 0 = not singleton)
                	**type**\:  bool
                
                .. attribute:: standby_member_count
                
                	The number of standby local members on the bundle
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: suppression_timer
                
                	Timer for suppressing bundle state flaps
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: switchover_type
                
                	How a switchover of the bundle from this device will occur
                	**type**\:   :py:class:`BmdMlacpSwitchoverEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMlacpSwitchoverEnum>`
                
                .. attribute:: wait_while_timer
                
                	The wait while time used for member ports
                	**type**\:  int
                
                	**range:** 0..65535
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.active_foreign_member_count = None
                    self.active_member_count = None
                    self.available_bandwidth = None
                    self.bfd_config = YList()
                    self.bfd_config.parent = self
                    self.bfd_config.name = 'bfd_config'
                    self.bundle_interface_name = None
                    self.bundle_status = None
                    self.cisco_extensions = None
                    self.collector_max_delay = None
                    self.configured_bandwidth = None
                    self.configured_foreign_member_count = None
                    self.configured_member_count = None
                    self.effective_bandwidth = None
                    self.iccp_group_id = None
                    self.inter_chassis = None
                    self.ipv4bfd_status = None
                    self.ipv6bfd_status = None
                    self.is_active = None
                    self.lacp_nonrevertive = None
                    self.lacp_status = None
                    self.link_order_status = None
                    self.load_balance_hash_type = None
                    self.load_balance_locality_threshold = None
                    self.mac_address = Bundles.Bundles_.Bundle.Data.MacAddress()
                    self.mac_address.parent = self
                    self.mac_source = None
                    self.mac_source_member = None
                    self.maximize_threshold_value_band_width = None
                    self.maximize_threshold_value_links = None
                    self.maximum_active_links = None
                    self.maximum_active_links_source = None
                    self.minimum_active_links = None
                    self.minimum_bandwidth = None
                    self.mlacp_mode = None
                    self.mlacp_status = None
                    self.primary_member = None
                    self.recovery_delay = None
                    self.singleton = None
                    self.standby_member_count = None
                    self.suppression_timer = None
                    self.switchover_type = None
                    self.wait_while_timer = None


                class MacAddress(object):
                    """
                    MAC address of this member
                    
                    .. attribute:: address
                    
                    	MAC address
                    	**type**\:  str
                    
                    	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.address = None

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.address is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['Bundles.Bundles_.Bundle.Data.MacAddress']['meta_info']


                class BfdConfig(object):
                    """
                    Configuration values for BFD on bundle members
                    
                    .. attribute:: bundle_status
                    
                    	Status of BFD on the bundle
                    	**type**\:   :py:class:`BmdBfdBdlStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdBfdBdlStateEnum>`
                    
                    .. attribute:: destination_address
                    
                    	Configured destination address for BFD session
                    	**type**\:   :py:class:`DestinationAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Data.BfdConfig.DestinationAddress>`
                    
                    .. attribute:: fast_detect
                    
                    	Flag indicating if BFD is enabled (1 = enabled; 0 = not enabled)
                    	**type**\:  bool
                    
                    .. attribute:: mode_info
                    
                    	Standard used for per\-member BFD
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: nbr_unconfig_timer
                    
                    	Time to wait on session NBR\_UNCONFIG before declaring DOWN
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: pref_echo_min_interval
                    
                    	Preferred echo minimum interval for the BFD session (ms)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: pref_min_interval
                    
                    	Preferred minimum interval for the BFD session (ms)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: pref_multiplier
                    
                    	Preferred multiplier for the BFD session
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: start_timer
                    
                    	Time to wait on session start before declaring DOWN
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_status = None
                        self.destination_address = Bundles.Bundles_.Bundle.Data.BfdConfig.DestinationAddress()
                        self.destination_address.parent = self
                        self.fast_detect = None
                        self.mode_info = None
                        self.nbr_unconfig_timer = None
                        self.pref_echo_min_interval = None
                        self.pref_min_interval = None
                        self.pref_multiplier = None
                        self.start_timer = None


                    class DestinationAddress(object):
                        """
                        Configured destination address for BFD session
                        
                        .. attribute:: af
                        
                        	AF
                        	**type**\:   :py:class:`BmAfIdEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmAfIdEnum>`
                        
                        .. attribute:: ipv4
                        
                        	IPv4 address type
                        	**type**\:  str
                        
                        	**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        .. attribute:: ipv6
                        
                        	IPv6 address type
                        	**type**\:  str
                        
                        	**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.af = None
                            self.ipv4 = None
                            self.ipv6 = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:destination-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.af is not None:
                                return True

                            if self.ipv4 is not None:
                                return True

                            if self.ipv6 is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['Bundles.Bundles_.Bundle.Data.BfdConfig.DestinationAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bfd-config'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_status is not None:
                            return True

                        if self.destination_address is not None and self.destination_address._has_data():
                            return True

                        if self.fast_detect is not None:
                            return True

                        if self.mode_info is not None:
                            return True

                        if self.nbr_unconfig_timer is not None:
                            return True

                        if self.pref_echo_min_interval is not None:
                            return True

                        if self.pref_min_interval is not None:
                            return True

                        if self.pref_multiplier is not None:
                            return True

                        if self.start_timer is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['Bundles.Bundles_.Bundle.Data.BfdConfig']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.active_foreign_member_count is not None:
                        return True

                    if self.active_member_count is not None:
                        return True

                    if self.available_bandwidth is not None:
                        return True

                    if self.bfd_config is not None:
                        for child_ref in self.bfd_config:
                            if child_ref._has_data():
                                return True

                    if self.bundle_interface_name is not None:
                        return True

                    if self.bundle_status is not None:
                        return True

                    if self.cisco_extensions is not None:
                        return True

                    if self.collector_max_delay is not None:
                        return True

                    if self.configured_bandwidth is not None:
                        return True

                    if self.configured_foreign_member_count is not None:
                        return True

                    if self.configured_member_count is not None:
                        return True

                    if self.effective_bandwidth is not None:
                        return True

                    if self.iccp_group_id is not None:
                        return True

                    if self.inter_chassis is not None:
                        return True

                    if self.ipv4bfd_status is not None:
                        return True

                    if self.ipv6bfd_status is not None:
                        return True

                    if self.is_active is not None:
                        return True

                    if self.lacp_nonrevertive is not None:
                        return True

                    if self.lacp_status is not None:
                        return True

                    if self.link_order_status is not None:
                        return True

                    if self.load_balance_hash_type is not None:
                        return True

                    if self.load_balance_locality_threshold is not None:
                        return True

                    if self.mac_address is not None and self.mac_address._has_data():
                        return True

                    if self.mac_source is not None:
                        return True

                    if self.mac_source_member is not None:
                        return True

                    if self.maximize_threshold_value_band_width is not None:
                        return True

                    if self.maximize_threshold_value_links is not None:
                        return True

                    if self.maximum_active_links is not None:
                        return True

                    if self.maximum_active_links_source is not None:
                        return True

                    if self.minimum_active_links is not None:
                        return True

                    if self.minimum_bandwidth is not None:
                        return True

                    if self.mlacp_mode is not None:
                        return True

                    if self.mlacp_status is not None:
                        return True

                    if self.primary_member is not None:
                        return True

                    if self.recovery_delay is not None:
                        return True

                    if self.singleton is not None:
                        return True

                    if self.standby_member_count is not None:
                        return True

                    if self.suppression_timer is not None:
                        return True

                    if self.switchover_type is not None:
                        return True

                    if self.wait_while_timer is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['Bundles.Bundles_.Bundle.Data']['meta_info']


            class Members(object):
                """
                Member interface
                
                .. attribute:: member
                
                	Member information
                	**type**\: list of    :py:class:`Member <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Members.Member>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.member = YList()
                    self.member.parent = self
                    self.member.name = 'member'


                class Member(object):
                    """
                    Member information
                    
                    .. attribute:: member_interface  <key>
                    
                    	Member interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: bandwidth
                    
                    	Bandwidth of this member (kbps)
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    	**units**\: kbit/s
                    
                    .. attribute:: counters
                    
                    	Counters data about member link
                    	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Members.Member.Counters>`
                    
                    .. attribute:: iccp_node
                    
                    	Location of member
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: interface_name
                    
                    	Member's interface name
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: link_data
                    
                    	Lacp data about member link
                    	**type**\:   :py:class:`LinkData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Members.Member.LinkData>`
                    
                    .. attribute:: link_order_number
                    
                    	Member's link order number
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: mac_address
                    
                    	MAC address of this member (deprecated)
                    	**type**\:   :py:class:`MacAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Members.Member.MacAddress>`
                    
                    .. attribute:: member_mux_data
                    
                    	Mux state machine data
                    	**type**\:   :py:class:`MemberMuxData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Members.Member.MemberMuxData>`
                    
                    .. attribute:: member_name
                    
                    	Member's (short form) name
                    	**type**\:  str
                    
                    .. attribute:: member_type
                    
                    	Member's type (local/foreign)
                    	**type**\:   :py:class:`BmdMemberTypeEnumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberTypeEnumEnum>`
                    
                    .. attribute:: port_number
                    
                    	Member's link number
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: port_priority
                    
                    	The priority of this member
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    .. attribute:: underlying_link_id
                    
                    	Member's underlying link ID
                    	**type**\:  int
                    
                    	**range:** 0..65535
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.member_interface = None
                        self.bandwidth = None
                        self.counters = Bundles.Bundles_.Bundle.Members.Member.Counters()
                        self.counters.parent = self
                        self.iccp_node = None
                        self.interface_name = None
                        self.link_data = Bundles.Bundles_.Bundle.Members.Member.LinkData()
                        self.link_data.parent = self
                        self.link_order_number = None
                        self.mac_address = Bundles.Bundles_.Bundle.Members.Member.MacAddress()
                        self.mac_address.parent = self
                        self.member_mux_data = Bundles.Bundles_.Bundle.Members.Member.MemberMuxData()
                        self.member_mux_data.parent = self
                        self.member_name = None
                        self.member_type = None
                        self.port_number = None
                        self.port_priority = None
                        self.underlying_link_id = None


                    class Counters(object):
                        """
                        Counters data about member link
                        
                        .. attribute:: defaulted
                        
                        	State flag set to Defaulted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: excess_lacpd_us_received
                        
                        	LACPDUs received that exceed the rate limit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: excess_marker_packets_received
                        
                        	Marker packets received that exceed the rate limit
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: expired
                        
                        	State flag set to Expired
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: illegal_packets_received
                        
                        	Illegal and unknown packets received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lacpd_us_received
                        
                        	LACPDUs received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: lacpd_us_transmitted
                        
                        	LACPDUs transmitted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_cleared_nsec
                        
                        	Last time counters cleared (nsec) (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: last_cleared_sec
                        
                        	Last time counters cleared (s) (deprecated)
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: marker_packets_received
                        
                        	Marker packets received
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: marker_responses_transmitted
                        
                        	Marker response packets transmitted
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.defaulted = None
                            self.excess_lacpd_us_received = None
                            self.excess_marker_packets_received = None
                            self.expired = None
                            self.illegal_packets_received = None
                            self.lacpd_us_received = None
                            self.lacpd_us_transmitted = None
                            self.last_cleared_nsec = None
                            self.last_cleared_sec = None
                            self.marker_packets_received = None
                            self.marker_responses_transmitted = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.defaulted is not None:
                                return True

                            if self.excess_lacpd_us_received is not None:
                                return True

                            if self.excess_marker_packets_received is not None:
                                return True

                            if self.expired is not None:
                                return True

                            if self.illegal_packets_received is not None:
                                return True

                            if self.lacpd_us_received is not None:
                                return True

                            if self.lacpd_us_transmitted is not None:
                                return True

                            if self.last_cleared_nsec is not None:
                                return True

                            if self.last_cleared_sec is not None:
                                return True

                            if self.marker_packets_received is not None:
                                return True

                            if self.marker_responses_transmitted is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['Bundles.Bundles_.Bundle.Members.Member.Counters']['meta_info']


                    class LinkData(object):
                        """
                        Lacp data about member link
                        
                        .. attribute:: actor_operational_key
                        
                        	Operational key for this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_id
                        
                        	Port number of this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_priority
                        
                        	Priority of this port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: actor_port_state
                        
                        	LACP state of this port
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: actor_system_mac_address
                        
                        	MAC Address of the actor system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: actor_system_priority
                        
                        	System priority of actor system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: attached_aggregator_id
                        
                        	MIB ifindex of attached bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: interface_handle
                        
                        	Member's interface handle
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: partner_operational_key
                        
                        	Operational key for partner port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_id
                        
                        	Port number of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_priority
                        
                        	Priority of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: partner_port_state
                        
                        	LACP state of the partner's port
                        	**type**\:  int
                        
                        	**range:** 0..255
                        
                        .. attribute:: partner_system_mac_address
                        
                        	MAC Address used to identify the partner system
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        .. attribute:: partner_system_priority
                        
                        	System priority of partner system
                        	**type**\:  int
                        
                        	**range:** 0..65535
                        
                        .. attribute:: selected_aggregator_id
                        
                        	MIB ifindex of selected bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.actor_operational_key = None
                            self.actor_port_id = None
                            self.actor_port_priority = None
                            self.actor_port_state = None
                            self.actor_system_mac_address = None
                            self.actor_system_priority = None
                            self.attached_aggregator_id = None
                            self.interface_handle = None
                            self.partner_operational_key = None
                            self.partner_port_id = None
                            self.partner_port_priority = None
                            self.partner_port_state = None
                            self.partner_system_mac_address = None
                            self.partner_system_priority = None
                            self.selected_aggregator_id = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:link-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.actor_operational_key is not None:
                                return True

                            if self.actor_port_id is not None:
                                return True

                            if self.actor_port_priority is not None:
                                return True

                            if self.actor_port_state is not None:
                                return True

                            if self.actor_system_mac_address is not None:
                                return True

                            if self.actor_system_priority is not None:
                                return True

                            if self.attached_aggregator_id is not None:
                                return True

                            if self.interface_handle is not None:
                                return True

                            if self.partner_operational_key is not None:
                                return True

                            if self.partner_port_id is not None:
                                return True

                            if self.partner_port_priority is not None:
                                return True

                            if self.partner_port_state is not None:
                                return True

                            if self.partner_system_mac_address is not None:
                                return True

                            if self.partner_system_priority is not None:
                                return True

                            if self.selected_aggregator_id is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['Bundles.Bundles_.Bundle.Members.Member.LinkData']['meta_info']


                    class MemberMuxData(object):
                        """
                        Mux state machine data
                        
                        .. attribute:: error
                        
                        	Internal value indicating if an error occurred trying to put a link into the desired state
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: member_mux_state_reason
                        
                        	Reason for last Mux state change
                        	**type**\:   :py:class:`BmMbrStateReasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMbrStateReasonEnum>`
                        
                        .. attribute:: member_mux_state_reason_data
                        
                        	Data regarding the reason for last Mux state change
                        	**type**\:   :py:class:`MemberMuxStateReasonData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.Bundles.Bundles_.Bundle.Members.Member.MemberMuxData.MemberMuxStateReasonData>`
                        
                        .. attribute:: member_state
                        
                        	Current internal state of this bundle member
                        	**type**\:   :py:class:`BmdMemberStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmdMemberStateEnum>`
                        
                        .. attribute:: mux_state
                        
                        	Current state of this bundle member
                        	**type**\:   :py:class:`BmMuxstateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxstateEnum>`
                        
                        .. attribute:: mux_state_reason
                        
                        	Reason for last Mux state change (Deprecated)
                        	**type**\:   :py:class:`BmMuxreasonEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmMuxreasonEnum>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.error = None
                            self.member_mux_state_reason = None
                            self.member_mux_state_reason_data = Bundles.Bundles_.Bundle.Members.Member.MemberMuxData.MemberMuxStateReasonData()
                            self.member_mux_state_reason_data.parent = self
                            self.member_state = None
                            self.mux_state = None
                            self.mux_state_reason = None


                        class MemberMuxStateReasonData(object):
                            """
                            Data regarding the reason for last Mux state
                            change
                            
                            .. attribute:: reason_type
                            
                            	The item the reason applies to
                            	**type**\:   :py:class:`BmStateReasonTargetEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmStateReasonTargetEnum>`
                            
                            .. attribute:: severity
                            
                            	The severity of the reason
                            	**type**\:   :py:class:`BmSeverityEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BmSeverityEnum>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.reason_type = None
                                self.severity = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-state-reason-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.reason_type is not None:
                                    return True

                                if self.severity is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['Bundles.Bundles_.Bundle.Members.Member.MemberMuxData.MemberMuxStateReasonData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member-mux-data'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.error is not None:
                                return True

                            if self.member_mux_state_reason is not None:
                                return True

                            if self.member_mux_state_reason_data is not None and self.member_mux_state_reason_data._has_data():
                                return True

                            if self.member_state is not None:
                                return True

                            if self.mux_state is not None:
                                return True

                            if self.mux_state_reason is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['Bundles.Bundles_.Bundle.Members.Member.MemberMuxData']['meta_info']


                    class MacAddress(object):
                        """
                        MAC address of this member (deprecated)
                        
                        .. attribute:: address
                        
                        	MAC address
                        	**type**\:  str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.address = None

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:mac-address'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.address is not None:
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['Bundles.Bundles_.Bundle.Members.Member.MacAddress']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.member_interface is None:
                            raise YPYModelError('Key property member_interface is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.member_interface is not None:
                            return True

                        if self.bandwidth is not None:
                            return True

                        if self.counters is not None and self.counters._has_data():
                            return True

                        if self.iccp_node is not None:
                            return True

                        if self.interface_name is not None:
                            return True

                        if self.link_data is not None and self.link_data._has_data():
                            return True

                        if self.link_order_number is not None:
                            return True

                        if self.mac_address is not None and self.mac_address._has_data():
                            return True

                        if self.member_mux_data is not None and self.member_mux_data._has_data():
                            return True

                        if self.member_name is not None:
                            return True

                        if self.member_type is not None:
                            return True

                        if self.port_number is not None:
                            return True

                        if self.port_priority is not None:
                            return True

                        if self.underlying_link_id is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['Bundles.Bundles_.Bundle.Members.Member']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:members'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.member is not None:
                        for child_ref in self.member:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['Bundles.Bundles_.Bundle.Members']['meta_info']

            @property
            def _common_path(self):
                if self.bundle_interface is None:
                    raise YPYModelError('Key property bundle_interface is None')

                return '/Cisco-IOS-XR-bundlemgr-oper:bundles/Cisco-IOS-XR-bundlemgr-oper:bundles/Cisco-IOS-XR-bundlemgr-oper:bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-interface = ' + str(self.bundle_interface) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.bundle_interface is not None:
                    return True

                if self.data is not None and self.data._has_data():
                    return True

                if self.members is not None and self.members._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['Bundles.Bundles_.Bundle']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundles/Cisco-IOS-XR-bundlemgr-oper:bundles'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.bundle is not None:
                for child_ref in self.bundle:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['Bundles.Bundles_']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-bundlemgr-oper:bundles'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.bundles is not None and self.bundles._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['Bundles']['meta_info']


class LacpBundleMembers(object):
    """
    lacp bundle members
    
    .. attribute:: members
    
    	Table of LACP bundle member interfaces
    	**type**\:   :py:class:`Members <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundleMembers.Members>`
    
    .. attribute:: nodes
    
    	Table of devices with their LACP bundle member interfaces
    	**type**\:   :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundleMembers.Nodes>`
    
    

    """

    _prefix = 'bundlemgr-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.members = LacpBundleMembers.Members()
        self.members.parent = self
        self.nodes = LacpBundleMembers.Nodes()
        self.nodes.parent = self


    class Nodes(object):
        """
        Table of devices with their LACP bundle member
        interfaces
        
        .. attribute:: node
        
        	Node ID
        	**type**\: list of    :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundleMembers.Nodes.Node>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node = YList()
            self.node.parent = self
            self.node.name = 'node'


        class Node(object):
            """
            Node ID
            
            .. attribute:: node  <key>
            
            	For a local device the Node ID e.g. '0\_0\_CPU0' , for a peer device the LDP ID followed by the ICCP Group ID e.g. '5.4.3.2,4'
            	**type**\:  str
            
            .. attribute:: counters
            
            	Link counters for LACP bundle members per node
            	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundleMembers.Nodes.Node.Counters>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node = None
                self.counters = LacpBundleMembers.Nodes.Node.Counters()
                self.counters.parent = self


            class Counters(object):
                """
                Link counters for LACP bundle members per node
                
                .. attribute:: last_wrong_port
                
                	Last unrecognized port on which a packet was received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: time_since_cleared
                
                	Time elapsed since counters were last cleared (in nanoseconds)
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: nanosecond
                
                .. attribute:: time_since_last_updated
                
                	Time elapsed since statistics were last updated (in nanoseconds)
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: nanosecond
                
                .. attribute:: time_since_unexpected_event
                
                	Time elapsed since last unexpected event (in nanoseconds)
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                	**units**\: nanosecond
                
                .. attribute:: undecodable_packets
                
                	Packets received which could not be decoded
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: unknown_port_count
                
                	Packets received for which rx port could not be determined
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: wrong_port_count
                
                	LACP protocol packets received on ports with LACP inactive/off
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.last_wrong_port = None
                    self.time_since_cleared = None
                    self.time_since_last_updated = None
                    self.time_since_unexpected_event = None
                    self.undecodable_packets = None
                    self.unknown_port_count = None
                    self.wrong_port_count = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.last_wrong_port is not None:
                        return True

                    if self.time_since_cleared is not None:
                        return True

                    if self.time_since_last_updated is not None:
                        return True

                    if self.time_since_unexpected_event is not None:
                        return True

                    if self.undecodable_packets is not None:
                        return True

                    if self.unknown_port_count is not None:
                        return True

                    if self.wrong_port_count is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['LacpBundleMembers.Nodes.Node.Counters']['meta_info']

            @property
            def _common_path(self):
                if self.node is None:
                    raise YPYModelError('Key property node is None')

                return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-members/Cisco-IOS-XR-bundlemgr-oper:nodes/Cisco-IOS-XR-bundlemgr-oper:node[Cisco-IOS-XR-bundlemgr-oper:node = ' + str(self.node) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node is not None:
                    return True

                if self.counters is not None and self.counters._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['LacpBundleMembers.Nodes.Node']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-members/Cisco-IOS-XR-bundlemgr-oper:nodes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node is not None:
                for child_ref in self.node:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['LacpBundleMembers.Nodes']['meta_info']


    class Members(object):
        """
        Table of LACP bundle member interfaces
        
        .. attribute:: member
        
        	LACP bundle member interface data
        	**type**\: list of    :py:class:`Member <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundleMembers.Members.Member>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.member = YList()
            self.member.parent = self
            self.member.name = 'member'


        class Member(object):
            """
            LACP bundle member interface data
            
            .. attribute:: member_interface  <key>
            
            	Member interface
            	**type**\:  str
            
            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
            
            .. attribute:: counters
            
            	Link counters for LACP bundle members
            	**type**\:   :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundleMembers.Members.Member.Counters>`
            
            .. attribute:: data
            
            	Link data for LACP bundle members
            	**type**\:   :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LacpBundleMembers.Members.Member.Data>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.member_interface = None
                self.counters = LacpBundleMembers.Members.Member.Counters()
                self.counters.parent = self
                self.data = LacpBundleMembers.Members.Member.Data()
                self.data.parent = self


            class Data(object):
                """
                Link data for LACP bundle members
                
                .. attribute:: actor_operational_key
                
                	Operational key for this port
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: actor_port_id
                
                	Port number of this port
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: actor_port_priority
                
                	Priority of this port
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: actor_port_state
                
                	LACP state of this port
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: actor_system_mac_address
                
                	MAC Address of the actor system
                	**type**\:  str
                
                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                
                .. attribute:: actor_system_priority
                
                	System priority of the actor system
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: attached_aggregator_id
                
                	MIB ifindex of attached bundle
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: interface_handle
                
                	Member's interface handle
                	**type**\:  str
                
                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                
                .. attribute:: partner_operational_key
                
                	Operational key for partner port
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: partner_port_id
                
                	Port number of the partner's port
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: partner_port_priority
                
                	Priority of the partner's port
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: partner_port_state
                
                	LACP state of the partner's port
                	**type**\:  int
                
                	**range:** 0..255
                
                .. attribute:: partner_system_mac_address
                
                	MAC Address used to identify the partner system
                	**type**\:  str
                
                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                
                .. attribute:: partner_system_priority
                
                	System priority of partner system
                	**type**\:  int
                
                	**range:** 0..65535
                
                .. attribute:: selected_aggregator_id
                
                	MIB ifindex of selected bundle
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.actor_operational_key = None
                    self.actor_port_id = None
                    self.actor_port_priority = None
                    self.actor_port_state = None
                    self.actor_system_mac_address = None
                    self.actor_system_priority = None
                    self.attached_aggregator_id = None
                    self.interface_handle = None
                    self.partner_operational_key = None
                    self.partner_port_id = None
                    self.partner_port_priority = None
                    self.partner_port_state = None
                    self.partner_system_mac_address = None
                    self.partner_system_priority = None
                    self.selected_aggregator_id = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:data'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.actor_operational_key is not None:
                        return True

                    if self.actor_port_id is not None:
                        return True

                    if self.actor_port_priority is not None:
                        return True

                    if self.actor_port_state is not None:
                        return True

                    if self.actor_system_mac_address is not None:
                        return True

                    if self.actor_system_priority is not None:
                        return True

                    if self.attached_aggregator_id is not None:
                        return True

                    if self.interface_handle is not None:
                        return True

                    if self.partner_operational_key is not None:
                        return True

                    if self.partner_port_id is not None:
                        return True

                    if self.partner_port_priority is not None:
                        return True

                    if self.partner_port_state is not None:
                        return True

                    if self.partner_system_mac_address is not None:
                        return True

                    if self.partner_system_priority is not None:
                        return True

                    if self.selected_aggregator_id is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['LacpBundleMembers.Members.Member.Data']['meta_info']


            class Counters(object):
                """
                Link counters for LACP bundle members
                
                .. attribute:: defaulted
                
                	State flag set to Defaulted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: excess_lacpd_us_received
                
                	LACPDUs received that exceed the rate limit
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: excess_marker_packets_received
                
                	Marker packets received that exceed the rate limit
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: expired
                
                	State flag set to Expired
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: illegal_packets_received
                
                	Illegal and unknown packets received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: lacpd_us_received
                
                	LACPDUs received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: lacpd_us_transmitted
                
                	LACPDUs transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: last_cleared_nsec
                
                	Last time counters cleared (nsec) (deprecated)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: last_cleared_sec
                
                	Last time counters cleared (s) (deprecated)
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: marker_packets_received
                
                	Marker packets received
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: marker_responses_transmitted
                
                	Marker response packets transmitted
                	**type**\:  int
                
                	**range:** 0..4294967295
                
                .. attribute:: time_since_cleared
                
                	Time elapsed since counters last cleared (nsec)
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: time_since_last_lacpdu_received
                
                	Time elapsed since last LACPDU received (nsec)
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                .. attribute:: time_since_unexpected_event
                
                	Time elapsed since last unexpected event (nsec)
                	**type**\:  int
                
                	**range:** 0..18446744073709551615
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.defaulted = None
                    self.excess_lacpd_us_received = None
                    self.excess_marker_packets_received = None
                    self.expired = None
                    self.illegal_packets_received = None
                    self.lacpd_us_received = None
                    self.lacpd_us_transmitted = None
                    self.last_cleared_nsec = None
                    self.last_cleared_sec = None
                    self.marker_packets_received = None
                    self.marker_responses_transmitted = None
                    self.time_since_cleared = None
                    self.time_since_last_lacpdu_received = None
                    self.time_since_unexpected_event = None

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:counters'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.defaulted is not None:
                        return True

                    if self.excess_lacpd_us_received is not None:
                        return True

                    if self.excess_marker_packets_received is not None:
                        return True

                    if self.expired is not None:
                        return True

                    if self.illegal_packets_received is not None:
                        return True

                    if self.lacpd_us_received is not None:
                        return True

                    if self.lacpd_us_transmitted is not None:
                        return True

                    if self.last_cleared_nsec is not None:
                        return True

                    if self.last_cleared_sec is not None:
                        return True

                    if self.marker_packets_received is not None:
                        return True

                    if self.marker_responses_transmitted is not None:
                        return True

                    if self.time_since_cleared is not None:
                        return True

                    if self.time_since_last_lacpdu_received is not None:
                        return True

                    if self.time_since_unexpected_event is not None:
                        return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['LacpBundleMembers.Members.Member.Counters']['meta_info']

            @property
            def _common_path(self):
                if self.member_interface is None:
                    raise YPYModelError('Key property member_interface is None')

                return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-members/Cisco-IOS-XR-bundlemgr-oper:members/Cisco-IOS-XR-bundlemgr-oper:member[Cisco-IOS-XR-bundlemgr-oper:member-interface = ' + str(self.member_interface) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.member_interface is not None:
                    return True

                if self.counters is not None and self.counters._has_data():
                    return True

                if self.data is not None and self.data._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['LacpBundleMembers.Members.Member']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-members/Cisco-IOS-XR-bundlemgr-oper:members'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.member is not None:
                for child_ref in self.member:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['LacpBundleMembers.Members']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-bundlemgr-oper:lacp-bundle-members'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.members is not None and self.members._has_data():
            return True

        if self.nodes is not None and self.nodes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['LacpBundleMembers']['meta_info']


class BundlesAdjacency(object):
    """
    bundles adjacency
    
    .. attribute:: nodes
    
    	Per bundle operational data
    	**type**\:   :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes>`
    
    

    """

    _prefix = 'bundlemgr-oper'
    _revision = '2015-11-09'

    def __init__(self):
        self.nodes = BundlesAdjacency.Nodes()
        self.nodes.parent = self


    class Nodes(object):
        """
        Per bundle operational data
        
        .. attribute:: node
        
        	Location
        	**type**\: list of    :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node>`
        
        

        """

        _prefix = 'bundlemgr-oper'
        _revision = '2015-11-09'

        def __init__(self):
            self.parent = None
            self.node = YList()
            self.node.parent = self
            self.node.name = 'node'


        class Node(object):
            """
            Location
            
            .. attribute:: node_name  <key>
            
            	Node ID
            	**type**\:  str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: brief
            
            	Brief load\-balance information for the node
            	**type**\:   :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Brief>`
            
            .. attribute:: bundles
            
            	Per bundle operational data
            	**type**\:   :py:class:`Bundles <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles>`
            
            

            """

            _prefix = 'bundlemgr-oper'
            _revision = '2015-11-09'

            def __init__(self):
                self.parent = None
                self.node_name = None
                self.brief = BundlesAdjacency.Nodes.Node.Brief()
                self.brief.parent = self
                self.bundles = BundlesAdjacency.Nodes.Node.Bundles()
                self.bundles.parent = self


            class Brief(object):
                """
                Brief load\-balance information for the node
                
                .. attribute:: bundle_data
                
                	Data for all bundles on node
                	**type**\: list of    :py:class:`BundleData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Brief.BundleData>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle_data = YList()
                    self.bundle_data.parent = self
                    self.bundle_data.name = 'bundle_data'


                class BundleData(object):
                    """
                    Data for all bundles on node
                    
                    .. attribute:: interface_name
                    
                    	Bundle interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: member_count
                    
                    	Number of members configured to the bundle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: sub_interface
                    
                    	Sub\-interfaces of the bundle
                    	**type**\: list of    :py:class:`SubInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Brief.BundleData.SubInterface>`
                    
                    .. attribute:: sub_interface_count
                    
                    	Number of sub\-interfaces on the bundle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    .. attribute:: total_weight
                    
                    	Total weighting (relative bandwidth) of bundle
                    	**type**\:  int
                    
                    	**range:** 0..4294967295
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.interface_name = None
                        self.member_count = None
                        self.sub_interface = YList()
                        self.sub_interface.parent = self
                        self.sub_interface.name = 'sub_interface'
                        self.sub_interface_count = None
                        self.total_weight = None


                    class SubInterface(object):
                        """
                        Sub\-interfaces of the bundle
                        
                        .. attribute:: interface_name
                        
                        	Sub interface
                        	**type**\:  str
                        
                        	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                        
                        .. attribute:: load_balance_data
                        
                        	Load balance data
                        	**type**\:   :py:class:`LoadBalanceData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Brief.BundleData.SubInterface.LoadBalanceData>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.interface_name = None
                            self.load_balance_data = BundlesAdjacency.Nodes.Node.Brief.BundleData.SubInterface.LoadBalanceData()
                            self.load_balance_data.parent = self


                        class LoadBalanceData(object):
                            """
                            Load balance data
                            
                            .. attribute:: local_link_threshold
                            
                            	Threshold below which rack\-local balancing is disabled
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: type
                            
                            	Type of load balancing to use
                            	**type**\:   :py:class:`LoadBalanceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LoadBalanceEnum>`
                            
                            .. attribute:: value
                            
                            	Load balance hash value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_link_threshold = None
                                self.type = None
                                self.value = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:load-balance-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_link_threshold is not None:
                                    return True

                                if self.type is not None:
                                    return True

                                if self.value is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundlesAdjacency.Nodes.Node.Brief.BundleData.SubInterface.LoadBalanceData']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:sub-interface'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.interface_name is not None:
                                return True

                            if self.load_balance_data is not None and self.load_balance_data._has_data():
                                return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundlesAdjacency.Nodes.Node.Brief.BundleData.SubInterface']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-data'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.interface_name is not None:
                            return True

                        if self.member_count is not None:
                            return True

                        if self.sub_interface is not None:
                            for child_ref in self.sub_interface:
                                if child_ref._has_data():
                                    return True

                        if self.sub_interface_count is not None:
                            return True

                        if self.total_weight is not None:
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundlesAdjacency.Nodes.Node.Brief.BundleData']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:brief'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle_data is not None:
                        for child_ref in self.bundle_data:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundlesAdjacency.Nodes.Node.Brief']['meta_info']


            class Bundles(object):
                """
                Per bundle operational data
                
                .. attribute:: bundle
                
                	Bundle information
                	**type**\: list of    :py:class:`Bundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle>`
                
                

                """

                _prefix = 'bundlemgr-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    self.parent = None
                    self.bundle = YList()
                    self.bundle.parent = self
                    self.bundle.name = 'bundle'


                class Bundle(object):
                    """
                    Bundle information
                    
                    .. attribute:: bundle_name  <key>
                    
                    	Bundle interface
                    	**type**\:  str
                    
                    	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                    
                    .. attribute:: bundle_info
                    
                    	Data for each Bundle
                    	**type**\:   :py:class:`BundleInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo>`
                    
                    

                    """

                    _prefix = 'bundlemgr-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        self.parent = None
                        self.bundle_name = None
                        self.bundle_info = BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo()
                        self.bundle_info.parent = self


                    class BundleInfo(object):
                        """
                        Data for each Bundle
                        
                        .. attribute:: avoid_rebalance
                        
                        	Avoid rebalancing traffic flows
                        	**type**\:  bool
                        
                        .. attribute:: brief
                        
                        	Brief bundle data
                        	**type**\:   :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief>`
                        
                        .. attribute:: load_balance_data
                        
                        	Load Balance data
                        	**type**\:   :py:class:`LoadBalanceData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.LoadBalanceData>`
                        
                        .. attribute:: max_member_count
                        
                        	Maximum number of members for the bundle
                        	**type**\:  int
                        
                        	**range:** 0..4294967295
                        
                        .. attribute:: media
                        
                        	Media type of bundle
                        	**type**\:   :py:class:`BundleMedia1Enum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundleMedia1Enum>`
                        
                        .. attribute:: member
                        
                        	Members of the bundle
                        	**type**\: list of    :py:class:`Member <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Member>`
                        
                        .. attribute:: sub_interface
                        
                        	Sub\-interfaces of the bundle
                        	**type**\: list of    :py:class:`SubInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.SubInterface>`
                        
                        

                        """

                        _prefix = 'bundlemgr-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            self.parent = None
                            self.avoid_rebalance = None
                            self.brief = BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief()
                            self.brief.parent = self
                            self.load_balance_data = BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.LoadBalanceData()
                            self.load_balance_data.parent = self
                            self.max_member_count = None
                            self.media = None
                            self.member = YList()
                            self.member.parent = self
                            self.member.name = 'member'
                            self.sub_interface = YList()
                            self.sub_interface.parent = self
                            self.sub_interface.name = 'sub_interface'


                        class Brief(object):
                            """
                            Brief bundle data
                            
                            .. attribute:: interface_name
                            
                            	Bundle interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: member_count
                            
                            	Number of members configured to the bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: sub_interface
                            
                            	Sub\-interfaces of the bundle
                            	**type**\: list of    :py:class:`SubInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief.SubInterface>`
                            
                            .. attribute:: sub_interface_count
                            
                            	Number of sub\-interfaces on the bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: total_weight
                            
                            	Total weighting (relative bandwidth) of bundle
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.member_count = None
                                self.sub_interface = YList()
                                self.sub_interface.parent = self
                                self.sub_interface.name = 'sub_interface'
                                self.sub_interface_count = None
                                self.total_weight = None


                            class SubInterface(object):
                                """
                                Sub\-interfaces of the bundle
                                
                                .. attribute:: interface_name
                                
                                	Sub interface
                                	**type**\:  str
                                
                                	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                                
                                .. attribute:: load_balance_data
                                
                                	Load balance data
                                	**type**\:   :py:class:`LoadBalanceData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief.SubInterface.LoadBalanceData>`
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.interface_name = None
                                    self.load_balance_data = BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief.SubInterface.LoadBalanceData()
                                    self.load_balance_data.parent = self


                                class LoadBalanceData(object):
                                    """
                                    Load balance data
                                    
                                    .. attribute:: local_link_threshold
                                    
                                    	Threshold below which rack\-local balancing is disabled
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: type
                                    
                                    	Type of load balancing to use
                                    	**type**\:   :py:class:`LoadBalanceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LoadBalanceEnum>`
                                    
                                    .. attribute:: value
                                    
                                    	Load balance hash value
                                    	**type**\:  int
                                    
                                    	**range:** 0..4294967295
                                    
                                    

                                    """

                                    _prefix = 'bundlemgr-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        self.parent = None
                                        self.local_link_threshold = None
                                        self.type = None
                                        self.value = None

                                    @property
                                    def _common_path(self):
                                        if self.parent is None:
                                            raise YPYModelError('parent is not set . Cannot derive path.')

                                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:load-balance-data'

                                    def is_config(self):
                                        ''' Returns True if this instance represents config data else returns False '''
                                        return False

                                    def _has_data(self):
                                        if not self.is_config():
                                            return False
                                        if self.local_link_threshold is not None:
                                            return True

                                        if self.type is not None:
                                            return True

                                        if self.value is not None:
                                            return True

                                        return False

                                    @staticmethod
                                    def _meta_info():
                                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                        return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief.SubInterface.LoadBalanceData']['meta_info']

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:sub-interface'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.interface_name is not None:
                                        return True

                                    if self.load_balance_data is not None and self.load_balance_data._has_data():
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief.SubInterface']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:brief'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.member_count is not None:
                                    return True

                                if self.sub_interface is not None:
                                    for child_ref in self.sub_interface:
                                        if child_ref._has_data():
                                            return True

                                if self.sub_interface_count is not None:
                                    return True

                                if self.total_weight is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Brief']['meta_info']


                        class LoadBalanceData(object):
                            """
                            Load Balance data
                            
                            .. attribute:: local_link_threshold
                            
                            	Threshold below which rack\-local balancing is disabled
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            .. attribute:: type
                            
                            	Type of load balancing to use
                            	**type**\:   :py:class:`LoadBalanceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LoadBalanceEnum>`
                            
                            .. attribute:: value
                            
                            	Load balance hash value
                            	**type**\:  int
                            
                            	**range:** 0..4294967295
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.local_link_threshold = None
                                self.type = None
                                self.value = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:load-balance-data'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.local_link_threshold is not None:
                                    return True

                                if self.type is not None:
                                    return True

                                if self.value is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.LoadBalanceData']['meta_info']


                        class Member(object):
                            """
                            Members of the bundle
                            
                            .. attribute:: bandwidth
                            
                            	Member's relative bandwidth
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: interface_name
                            
                            	Member interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: link_id
                            
                            	Member's link ID in database
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            .. attribute:: link_order_number
                            
                            	Member's link order number in database
                            	**type**\:  int
                            
                            	**range:** 0..255
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.bandwidth = None
                                self.interface_name = None
                                self.link_id = None
                                self.link_order_number = None

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:member'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.bandwidth is not None:
                                    return True

                                if self.interface_name is not None:
                                    return True

                                if self.link_id is not None:
                                    return True

                                if self.link_order_number is not None:
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.Member']['meta_info']


                        class SubInterface(object):
                            """
                            Sub\-interfaces of the bundle
                            
                            .. attribute:: interface_name
                            
                            	Sub interface
                            	**type**\:  str
                            
                            	**pattern:** (([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){3,4}\\d+\\.\\d+)\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]\*\\d+))\|(([a\-zA\-Z0\-9\_]\*\\d+/){2}([a\-zA\-Z0\-9\_]+))\|([a\-zA\-Z0\-9\_\-]\*\\d+)\|([a\-zA\-Z0\-9\_\-]\*\\d+\\.\\d+)\|(mpls)\|(dwdm)
                            
                            .. attribute:: load_balance_data
                            
                            	Load balance data
                            	**type**\:   :py:class:`LoadBalanceData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.SubInterface.LoadBalanceData>`
                            
                            

                            """

                            _prefix = 'bundlemgr-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                self.parent = None
                                self.interface_name = None
                                self.load_balance_data = BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.SubInterface.LoadBalanceData()
                                self.load_balance_data.parent = self


                            class LoadBalanceData(object):
                                """
                                Load balance data
                                
                                .. attribute:: local_link_threshold
                                
                                	Threshold below which rack\-local balancing is disabled
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                .. attribute:: type
                                
                                	Type of load balancing to use
                                	**type**\:   :py:class:`LoadBalanceEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_bundlemgr_oper.LoadBalanceEnum>`
                                
                                .. attribute:: value
                                
                                	Load balance hash value
                                	**type**\:  int
                                
                                	**range:** 0..4294967295
                                
                                

                                """

                                _prefix = 'bundlemgr-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    self.parent = None
                                    self.local_link_threshold = None
                                    self.type = None
                                    self.value = None

                                @property
                                def _common_path(self):
                                    if self.parent is None:
                                        raise YPYModelError('parent is not set . Cannot derive path.')

                                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:load-balance-data'

                                def is_config(self):
                                    ''' Returns True if this instance represents config data else returns False '''
                                    return False

                                def _has_data(self):
                                    if not self.is_config():
                                        return False
                                    if self.local_link_threshold is not None:
                                        return True

                                    if self.type is not None:
                                        return True

                                    if self.value is not None:
                                        return True

                                    return False

                                @staticmethod
                                def _meta_info():
                                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                    return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.SubInterface.LoadBalanceData']['meta_info']

                            @property
                            def _common_path(self):
                                if self.parent is None:
                                    raise YPYModelError('parent is not set . Cannot derive path.')

                                return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:sub-interface'

                            def is_config(self):
                                ''' Returns True if this instance represents config data else returns False '''
                                return False

                            def _has_data(self):
                                if not self.is_config():
                                    return False
                                if self.interface_name is not None:
                                    return True

                                if self.load_balance_data is not None and self.load_balance_data._has_data():
                                    return True

                                return False

                            @staticmethod
                            def _meta_info():
                                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                                return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo.SubInterface']['meta_info']

                        @property
                        def _common_path(self):
                            if self.parent is None:
                                raise YPYModelError('parent is not set . Cannot derive path.')

                            return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle-info'

                        def is_config(self):
                            ''' Returns True if this instance represents config data else returns False '''
                            return False

                        def _has_data(self):
                            if not self.is_config():
                                return False
                            if self.avoid_rebalance is not None:
                                return True

                            if self.brief is not None and self.brief._has_data():
                                return True

                            if self.load_balance_data is not None and self.load_balance_data._has_data():
                                return True

                            if self.max_member_count is not None:
                                return True

                            if self.media is not None:
                                return True

                            if self.member is not None:
                                for child_ref in self.member:
                                    if child_ref._has_data():
                                        return True

                            if self.sub_interface is not None:
                                for child_ref in self.sub_interface:
                                    if child_ref._has_data():
                                        return True

                            return False

                        @staticmethod
                        def _meta_info():
                            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                            return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle.BundleInfo']['meta_info']

                    @property
                    def _common_path(self):
                        if self.parent is None:
                            raise YPYModelError('parent is not set . Cannot derive path.')
                        if self.bundle_name is None:
                            raise YPYModelError('Key property bundle_name is None')

                        return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundle[Cisco-IOS-XR-bundlemgr-oper:bundle-name = ' + str(self.bundle_name) + ']'

                    def is_config(self):
                        ''' Returns True if this instance represents config data else returns False '''
                        return False

                    def _has_data(self):
                        if not self.is_config():
                            return False
                        if self.bundle_name is not None:
                            return True

                        if self.bundle_info is not None and self.bundle_info._has_data():
                            return True

                        return False

                    @staticmethod
                    def _meta_info():
                        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                        return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles.Bundle']['meta_info']

                @property
                def _common_path(self):
                    if self.parent is None:
                        raise YPYModelError('parent is not set . Cannot derive path.')

                    return self.parent._common_path +'/Cisco-IOS-XR-bundlemgr-oper:bundles'

                def is_config(self):
                    ''' Returns True if this instance represents config data else returns False '''
                    return False

                def _has_data(self):
                    if not self.is_config():
                        return False
                    if self.bundle is not None:
                        for child_ref in self.bundle:
                            if child_ref._has_data():
                                return True

                    return False

                @staticmethod
                def _meta_info():
                    from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                    return meta._meta_table['BundlesAdjacency.Nodes.Node.Bundles']['meta_info']

            @property
            def _common_path(self):
                if self.node_name is None:
                    raise YPYModelError('Key property node_name is None')

                return '/Cisco-IOS-XR-bundlemgr-oper:bundles-adjacency/Cisco-IOS-XR-bundlemgr-oper:nodes/Cisco-IOS-XR-bundlemgr-oper:node[Cisco-IOS-XR-bundlemgr-oper:node-name = ' + str(self.node_name) + ']'

            def is_config(self):
                ''' Returns True if this instance represents config data else returns False '''
                return False

            def _has_data(self):
                if not self.is_config():
                    return False
                if self.node_name is not None:
                    return True

                if self.brief is not None and self.brief._has_data():
                    return True

                if self.bundles is not None and self.bundles._has_data():
                    return True

                return False

            @staticmethod
            def _meta_info():
                from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
                return meta._meta_table['BundlesAdjacency.Nodes.Node']['meta_info']

        @property
        def _common_path(self):

            return '/Cisco-IOS-XR-bundlemgr-oper:bundles-adjacency/Cisco-IOS-XR-bundlemgr-oper:nodes'

        def is_config(self):
            ''' Returns True if this instance represents config data else returns False '''
            return False

        def _has_data(self):
            if not self.is_config():
                return False
            if self.node is not None:
                for child_ref in self.node:
                    if child_ref._has_data():
                        return True

            return False

        @staticmethod
        def _meta_info():
            from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
            return meta._meta_table['BundlesAdjacency.Nodes']['meta_info']

    @property
    def _common_path(self):

        return '/Cisco-IOS-XR-bundlemgr-oper:bundles-adjacency'

    def is_config(self):
        ''' Returns True if this instance represents config data else returns False '''
        return False

    def _has_data(self):
        if not self.is_config():
            return False
        if self.nodes is not None and self.nodes._has_data():
            return True

        return False

    @staticmethod
    def _meta_info():
        from ydk.models.cisco_ios_xr._meta import _Cisco_IOS_XR_bundlemgr_oper as meta
        return meta._meta_table['BundlesAdjacency']['meta_info']


