""" Cisco_IOS_XR_sysadmin_controllers_ncs5500 

This module contains definitions
for the Calvados model objects.

This module contains a collection of YANG
definitions for Cisco IOS\-XR SysAdmin configuration.

This module defines the top level container for
all hardware devices managed in Sysadmin.

Copyright(c) 2015\-2017 by Cisco Systems, Inc.
All rights reserved.

Copyright (c) 2012\-2018 by Cisco Systems, Inc.
All rights reserved.

"""
from collections import OrderedDict

from ydk.types import Entity, EntityPath, Identity, Enum, YType, YLeaf, YLeafList, YList, LeafDataList, Bits, Empty, Decimal64
from ydk.filters import YFilter
from ydk.errors import YError, YModelError
from ydk.errors.error_handler import handle_type_error as _handle_type_error




class Set(Entity):
    """
    
    
    .. attribute:: controller
    
    	
    	**type**\:  :py:class:`Controller <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller>`
    
    

    """

    _prefix = 'calvados_controllers'
    _revision = '2017-10-11'

    def __init__(self):
        super(Set, self).__init__()
        self._top_entity = None

        self.yang_name = "set"
        self.yang_parent_name = "Cisco-IOS-XR-sysadmin-controllers-ncs5500"
        self.is_top_level_class = True
        self.has_list_ancestor = False
        self.ylist_key_names = []
        self._child_classes = OrderedDict([("controller", ("controller", Set.Controller))])
        self._leafs = OrderedDict()

        self.controller = Set.Controller()
        self.controller.parent = self
        self._children_name_map["controller"] = "controller"
        self._segment_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:set"
        self._is_frozen = True

    def __setattr__(self, name, value):
        self._perform_setattr(Set, [], name, value)


    class Controller(Entity):
        """
        
        
        .. attribute:: asic
        
        	
        	**type**\: list of  		 :py:class:`Asic <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic>`
        
        	**config**\: False
        
        

        """

        _prefix = 'calvados_controllers'
        _revision = '2017-10-11'

        def __init__(self):
            super(Set.Controller, self).__init__()

            self.yang_name = "controller"
            self.yang_parent_name = "set"
            self.is_top_level_class = False
            self.has_list_ancestor = False
            self.ylist_key_names = []
            self._child_classes = OrderedDict([("asic", ("asic", Set.Controller.Asic))])
            self._leafs = OrderedDict()

            self.asic = YList(self)
            self._segment_path = lambda: "controller"
            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:set/%s" % self._segment_path()
            self._is_frozen = True

        def __setattr__(self, name, value):
            self._perform_setattr(Set.Controller, [], name, value)


        class Asic(Entity):
            """
            
            
            .. attribute:: asic_name  (key)
            
            	
            	**type**\: str
            
            	**config**\: False
            
            .. attribute:: instance
            
            	
            	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Set.Controller.Asic, self).__init__()

                self.yang_name = "asic"
                self.yang_parent_name = "controller"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = ['asic_name']
                self._child_classes = OrderedDict([("instance", ("instance", Set.Controller.Asic.Instance))])
                self._leafs = OrderedDict([
                    ('asic_name', (YLeaf(YType.str, 'asic-name'), ['str'])),
                ])
                self.asic_name = None

                self.instance = YList(self)
                self._segment_path = lambda: "asic" + "[asic-name='" + str(self.asic_name) + "']"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:set/controller/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Set.Controller.Asic, [u'asic_name'], name, value)


            class Instance(Entity):
                """
                
                
                .. attribute:: instance_ids  (key)
                
                	
                	**type**\: int
                
                	**range:** 0..4294967295
                
                	**config**\: False
                
                .. attribute:: fault_injection
                
                	
                	**type**\:  :py:class:`FaultInjection <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Set.Controller.Asic.Instance, self).__init__()

                    self.yang_name = "instance"
                    self.yang_parent_name = "asic"
                    self.is_top_level_class = False
                    self.has_list_ancestor = True
                    self.ylist_key_names = ['instance_ids']
                    self._child_classes = OrderedDict([("fault-injection", ("fault_injection", Set.Controller.Asic.Instance.FaultInjection))])
                    self._leafs = OrderedDict([
                        ('instance_ids', (YLeaf(YType.uint32, 'instance-ids'), ['int'])),
                    ])
                    self.instance_ids = None

                    self.fault_injection = Set.Controller.Asic.Instance.FaultInjection()
                    self.fault_injection.parent = self
                    self._children_name_map["fault_injection"] = "fault-injection"
                    self._segment_path = lambda: "instance" + "[instance-ids='" + str(self.instance_ids) + "']"
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Set.Controller.Asic.Instance, [u'instance_ids'], name, value)


                class FaultInjection(Entity):
                    """
                    
                    
                    .. attribute:: module
                    
                    	
                    	**type**\: list of  		 :py:class:`Module <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Set.Controller.Asic.Instance.FaultInjection, self).__init__()

                        self.yang_name = "fault-injection"
                        self.yang_parent_name = "instance"
                        self.is_top_level_class = False
                        self.has_list_ancestor = True
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("module", ("module", Set.Controller.Asic.Instance.FaultInjection.Module))])
                        self._leafs = OrderedDict()

                        self.module = YList(self)
                        self._segment_path = lambda: "fault-injection"
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection, [], name, value)


                    class Module(Entity):
                        """
                        
                        
                        .. attribute:: module_name  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: fault_type
                        
                        	
                        	**type**\:  :py:class:`FaultType <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Set.Controller.Asic.Instance.FaultInjection.Module, self).__init__()

                            self.yang_name = "module"
                            self.yang_parent_name = "fault-injection"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['module_name']
                            self._child_classes = OrderedDict([("fault-type", ("fault_type", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType))])
                            self._leafs = OrderedDict([
                                ('module_name', (YLeaf(YType.str, 'module-name'), ['str'])),
                            ])
                            self.module_name = None

                            self.fault_type = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType()
                            self.fault_type.parent = self
                            self._children_name_map["fault_type"] = "fault-type"
                            self._segment_path = lambda: "module" + "[module-name='" + str(self.module_name) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module, [u'module_name'], name, value)


                        class FaultType(Entity):
                            """
                            
                            
                            .. attribute:: ecc
                            
                            	
                            	**type**\:  :py:class:`Ecc <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc>`
                            
                            	**config**\: False
                            
                            .. attribute:: parity
                            
                            	
                            	**type**\:  :py:class:`Parity <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity>`
                            
                            	**config**\: False
                            
                            .. attribute:: other
                            
                            	
                            	**type**\:  :py:class:`Other <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType, self).__init__()

                                self.yang_name = "fault-type"
                                self.yang_parent_name = "module"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("ecc", ("ecc", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc)), ("parity", ("parity", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity)), ("other", ("other", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other))])
                                self._leafs = OrderedDict()

                                self.ecc = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc()
                                self.ecc.parent = self
                                self._children_name_map["ecc"] = "ecc"

                                self.parity = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity()
                                self.parity.parent = self
                                self._children_name_map["parity"] = "parity"

                                self.other = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other()
                                self.other.parent = self
                                self._children_name_map["other"] = "other"
                                self._segment_path = lambda: "fault-type"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType, [], name, value)


                            class Ecc(Entity):
                                """
                                
                                
                                .. attribute:: all
                                
                                	
                                	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All>`
                                
                                	**config**\: False
                                
                                .. attribute:: block_name_lst
                                
                                	
                                	**type**\: list of  		 :py:class:`BlockNameLst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc, self).__init__()

                                    self.yang_name = "ecc"
                                    self.yang_parent_name = "fault-type"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("all", ("all", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All)), ("block-name-lst", ("block_name_lst", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst))])
                                    self._leafs = OrderedDict()

                                    self.all = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All()
                                    self.all.parent = self
                                    self._children_name_map["all"] = "all"

                                    self.block_name_lst = YList(self)
                                    self._segment_path = lambda: "ecc"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc, [], name, value)


                                class All(Entity):
                                    """
                                    
                                    
                                    .. attribute:: threshold
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`Threshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: location
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Location>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All, self).__init__()

                                        self.yang_name = "all"
                                        self.yang_parent_name = "ecc"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("threshold", ("threshold", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Location))])
                                        self._leafs = OrderedDict()

                                        self.threshold = YList(self)
                                        self.location = YList(self)
                                        self._segment_path = lambda: "all"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All, [], name, value)


                                    class Threshold(Entity):
                                        """
                                        
                                        
                                        .. attribute:: num_seconds  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**mandatory**\: True
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold, self).__init__()

                                            self.yang_name = "threshold"
                                            self.yang_parent_name = "all"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['num_seconds']
                                            self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold.Location))])
                                            self._leafs = OrderedDict([
                                                ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                            ])
                                            self.num_seconds = None

                                            self.location = YList(self)
                                            self._segment_path = lambda: "threshold" + "[num-seconds='" + str(self.num_seconds) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold, [u'num_seconds'], name, value)


                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "threshold"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Threshold.Location, [u'fit_location_name'], name, value)




                                    class Location(Entity):
                                        """
                                        
                                        
                                        .. attribute:: fit_location_name  (key)
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Location, self).__init__()

                                            self.yang_name = "location"
                                            self.yang_parent_name = "all"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['fit_location_name']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                            ])
                                            self.fit_location_name = None
                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.All.Location, [u'fit_location_name'], name, value)




                                class BlockNameLst(Entity):
                                    """
                                    
                                    
                                    .. attribute:: block_name  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: one
                                    
                                    	
                                    	**type**\:  :py:class:`One <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: continuous
                                    
                                    	
                                    	**type**\:  :py:class:`Continuous <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: stop
                                    
                                    	
                                    	**type**\:  :py:class:`Stop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst, self).__init__()

                                        self.yang_name = "block-name-lst"
                                        self.yang_parent_name = "ecc"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['block_name']
                                        self._child_classes = OrderedDict([("one", ("one", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One)), ("continuous", ("continuous", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous)), ("stop", ("stop", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop))])
                                        self._leafs = OrderedDict([
                                            ('block_name', (YLeaf(YType.str, 'block-name'), ['str'])),
                                        ])
                                        self.block_name = None

                                        self.one = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One()
                                        self.one.parent = self
                                        self._children_name_map["one"] = "one"

                                        self.continuous = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous()
                                        self.continuous.parent = self
                                        self._children_name_map["continuous"] = "continuous"

                                        self.stop = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop()
                                        self.stop.parent = self
                                        self._children_name_map["stop"] = "stop"
                                        self._segment_path = lambda: "block-name-lst" + "[block-name='" + str(self.block_name) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst, [u'block_name'], name, value)


                                    class One(Entity):
                                        """
                                        
                                        
                                        .. attribute:: rate
                                        
                                        	
                                        	**type**\:  :py:class:`Rate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One, self).__init__()

                                            self.yang_name = "one"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("rate", ("rate", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Location))])
                                            self._leafs = OrderedDict()

                                            self.rate = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate()
                                            self.rate.parent = self
                                            self._children_name_map["rate"] = "rate"

                                            self.location = YList(self)
                                            self._segment_path = lambda: "one"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One, [], name, value)


                                        class Rate(Entity):
                                            """
                                            
                                            
                                            .. attribute:: error_number
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`ErrorNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate, self).__init__()

                                                self.yang_name = "rate"
                                                self.yang_parent_name = "one"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("error-number", ("error_number", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber))])
                                                self._leafs = OrderedDict()

                                                self.error_number = YList(self)
                                                self._segment_path = lambda: "rate"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate, [], name, value)


                                            class ErrorNumber(Entity):
                                                """
                                                
                                                
                                                .. attribute:: num_errs  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: duration
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`Duration <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber, self).__init__()

                                                    self.yang_name = "error-number"
                                                    self.yang_parent_name = "rate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['num_errs']
                                                    self._child_classes = OrderedDict([("duration", ("duration", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration))])
                                                    self._leafs = OrderedDict([
                                                        ('num_errs', (YLeaf(YType.uint32, 'num-errs'), ['int'])),
                                                    ])
                                                    self.num_errs = None

                                                    self.duration = YList(self)
                                                    self._segment_path = lambda: "error-number" + "[num-errs='" + str(self.num_errs) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber, [u'num_errs'], name, value)


                                                class Duration(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: num_seconds  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: location
                                                    
                                                    	
                                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration.Location>`
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration, self).__init__()

                                                        self.yang_name = "duration"
                                                        self.yang_parent_name = "error-number"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['num_seconds']
                                                        self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration.Location))])
                                                        self._leafs = OrderedDict([
                                                            ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                                        ])
                                                        self.num_seconds = None

                                                        self.location = YList(self)
                                                        self._segment_path = lambda: "duration" + "[num-seconds='" + str(self.num_seconds) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration, [u'num_seconds'], name, value)


                                                    class Location(Entity):
                                                        """
                                                        
                                                        
                                                        .. attribute:: fit_location_name  (key)
                                                        
                                                        	
                                                        	**type**\: str
                                                        
                                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                                        
                                                        	**config**\: False
                                                        
                                                        

                                                        """

                                                        _prefix = 'calvados_controllers'
                                                        _revision = '2017-10-11'

                                                        def __init__(self):
                                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration.Location, self).__init__()

                                                            self.yang_name = "location"
                                                            self.yang_parent_name = "duration"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = ['fit_location_name']
                                                            self._child_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                            ])
                                                            self.fit_location_name = None
                                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                            self._is_frozen = True

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Rate.ErrorNumber.Duration.Location, [u'fit_location_name'], name, value)






                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "one"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.One.Location, [u'fit_location_name'], name, value)




                                    class Continuous(Entity):
                                        """
                                        
                                        
                                        .. attribute:: rate
                                        
                                        	
                                        	**type**\:  :py:class:`Rate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous, self).__init__()

                                            self.yang_name = "continuous"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("rate", ("rate", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Location))])
                                            self._leafs = OrderedDict()

                                            self.rate = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate()
                                            self.rate.parent = self
                                            self._children_name_map["rate"] = "rate"

                                            self.location = YList(self)
                                            self._segment_path = lambda: "continuous"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous, [], name, value)


                                        class Rate(Entity):
                                            """
                                            
                                            
                                            .. attribute:: error_number
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`ErrorNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate, self).__init__()

                                                self.yang_name = "rate"
                                                self.yang_parent_name = "continuous"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("error-number", ("error_number", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber))])
                                                self._leafs = OrderedDict()

                                                self.error_number = YList(self)
                                                self._segment_path = lambda: "rate"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate, [], name, value)


                                            class ErrorNumber(Entity):
                                                """
                                                
                                                
                                                .. attribute:: num_errs  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: duration
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`Duration <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber, self).__init__()

                                                    self.yang_name = "error-number"
                                                    self.yang_parent_name = "rate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['num_errs']
                                                    self._child_classes = OrderedDict([("duration", ("duration", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration))])
                                                    self._leafs = OrderedDict([
                                                        ('num_errs', (YLeaf(YType.uint32, 'num-errs'), ['int'])),
                                                    ])
                                                    self.num_errs = None

                                                    self.duration = YList(self)
                                                    self._segment_path = lambda: "error-number" + "[num-errs='" + str(self.num_errs) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber, [u'num_errs'], name, value)


                                                class Duration(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: num_seconds  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: location
                                                    
                                                    	
                                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location>`
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration, self).__init__()

                                                        self.yang_name = "duration"
                                                        self.yang_parent_name = "error-number"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['num_seconds']
                                                        self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location))])
                                                        self._leafs = OrderedDict([
                                                            ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                                        ])
                                                        self.num_seconds = None

                                                        self.location = YList(self)
                                                        self._segment_path = lambda: "duration" + "[num-seconds='" + str(self.num_seconds) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration, [u'num_seconds'], name, value)


                                                    class Location(Entity):
                                                        """
                                                        
                                                        
                                                        .. attribute:: fit_location_name  (key)
                                                        
                                                        	
                                                        	**type**\: str
                                                        
                                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                                        
                                                        	**config**\: False
                                                        
                                                        

                                                        """

                                                        _prefix = 'calvados_controllers'
                                                        _revision = '2017-10-11'

                                                        def __init__(self):
                                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location, self).__init__()

                                                            self.yang_name = "location"
                                                            self.yang_parent_name = "duration"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = ['fit_location_name']
                                                            self._child_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                            ])
                                                            self.fit_location_name = None
                                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                            self._is_frozen = True

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location, [u'fit_location_name'], name, value)






                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "continuous"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Continuous.Location, [u'fit_location_name'], name, value)




                                    class Stop(Entity):
                                        """
                                        
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop, self).__init__()

                                            self.yang_name = "stop"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop.Location))])
                                            self._leafs = OrderedDict()

                                            self.location = YList(self)
                                            self._segment_path = lambda: "stop"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop, [], name, value)


                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "stop"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Ecc.BlockNameLst.Stop.Location, [u'fit_location_name'], name, value)






                            class Parity(Entity):
                                """
                                
                                
                                .. attribute:: all
                                
                                	
                                	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All>`
                                
                                	**config**\: False
                                
                                .. attribute:: block_name_lst
                                
                                	
                                	**type**\: list of  		 :py:class:`BlockNameLst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity, self).__init__()

                                    self.yang_name = "parity"
                                    self.yang_parent_name = "fault-type"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("all", ("all", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All)), ("block-name-lst", ("block_name_lst", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst))])
                                    self._leafs = OrderedDict()

                                    self.all = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All()
                                    self.all.parent = self
                                    self._children_name_map["all"] = "all"

                                    self.block_name_lst = YList(self)
                                    self._segment_path = lambda: "parity"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity, [], name, value)


                                class All(Entity):
                                    """
                                    
                                    
                                    .. attribute:: threshold
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`Threshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: location
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Location>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All, self).__init__()

                                        self.yang_name = "all"
                                        self.yang_parent_name = "parity"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("threshold", ("threshold", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Location))])
                                        self._leafs = OrderedDict()

                                        self.threshold = YList(self)
                                        self.location = YList(self)
                                        self._segment_path = lambda: "all"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All, [], name, value)


                                    class Threshold(Entity):
                                        """
                                        
                                        
                                        .. attribute:: num_seconds  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**mandatory**\: True
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold, self).__init__()

                                            self.yang_name = "threshold"
                                            self.yang_parent_name = "all"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['num_seconds']
                                            self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold.Location))])
                                            self._leafs = OrderedDict([
                                                ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                            ])
                                            self.num_seconds = None

                                            self.location = YList(self)
                                            self._segment_path = lambda: "threshold" + "[num-seconds='" + str(self.num_seconds) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold, [u'num_seconds'], name, value)


                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "threshold"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Threshold.Location, [u'fit_location_name'], name, value)




                                    class Location(Entity):
                                        """
                                        
                                        
                                        .. attribute:: fit_location_name  (key)
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Location, self).__init__()

                                            self.yang_name = "location"
                                            self.yang_parent_name = "all"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['fit_location_name']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                            ])
                                            self.fit_location_name = None
                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.All.Location, [u'fit_location_name'], name, value)




                                class BlockNameLst(Entity):
                                    """
                                    
                                    
                                    .. attribute:: block_name  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: one
                                    
                                    	
                                    	**type**\:  :py:class:`One <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: continuous
                                    
                                    	
                                    	**type**\:  :py:class:`Continuous <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: stop
                                    
                                    	
                                    	**type**\:  :py:class:`Stop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst, self).__init__()

                                        self.yang_name = "block-name-lst"
                                        self.yang_parent_name = "parity"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['block_name']
                                        self._child_classes = OrderedDict([("one", ("one", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One)), ("continuous", ("continuous", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous)), ("stop", ("stop", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop))])
                                        self._leafs = OrderedDict([
                                            ('block_name', (YLeaf(YType.str, 'block-name'), ['str'])),
                                        ])
                                        self.block_name = None

                                        self.one = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One()
                                        self.one.parent = self
                                        self._children_name_map["one"] = "one"

                                        self.continuous = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous()
                                        self.continuous.parent = self
                                        self._children_name_map["continuous"] = "continuous"

                                        self.stop = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop()
                                        self.stop.parent = self
                                        self._children_name_map["stop"] = "stop"
                                        self._segment_path = lambda: "block-name-lst" + "[block-name='" + str(self.block_name) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst, [u'block_name'], name, value)


                                    class One(Entity):
                                        """
                                        
                                        
                                        .. attribute:: rate
                                        
                                        	
                                        	**type**\:  :py:class:`Rate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One, self).__init__()

                                            self.yang_name = "one"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("rate", ("rate", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Location))])
                                            self._leafs = OrderedDict()

                                            self.rate = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate()
                                            self.rate.parent = self
                                            self._children_name_map["rate"] = "rate"

                                            self.location = YList(self)
                                            self._segment_path = lambda: "one"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One, [], name, value)


                                        class Rate(Entity):
                                            """
                                            
                                            
                                            .. attribute:: error_number
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`ErrorNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate, self).__init__()

                                                self.yang_name = "rate"
                                                self.yang_parent_name = "one"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("error-number", ("error_number", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber))])
                                                self._leafs = OrderedDict()

                                                self.error_number = YList(self)
                                                self._segment_path = lambda: "rate"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate, [], name, value)


                                            class ErrorNumber(Entity):
                                                """
                                                
                                                
                                                .. attribute:: num_errs  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: duration
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`Duration <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber, self).__init__()

                                                    self.yang_name = "error-number"
                                                    self.yang_parent_name = "rate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['num_errs']
                                                    self._child_classes = OrderedDict([("duration", ("duration", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration))])
                                                    self._leafs = OrderedDict([
                                                        ('num_errs', (YLeaf(YType.uint32, 'num-errs'), ['int'])),
                                                    ])
                                                    self.num_errs = None

                                                    self.duration = YList(self)
                                                    self._segment_path = lambda: "error-number" + "[num-errs='" + str(self.num_errs) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber, [u'num_errs'], name, value)


                                                class Duration(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: num_seconds  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: location
                                                    
                                                    	
                                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration.Location>`
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration, self).__init__()

                                                        self.yang_name = "duration"
                                                        self.yang_parent_name = "error-number"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['num_seconds']
                                                        self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration.Location))])
                                                        self._leafs = OrderedDict([
                                                            ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                                        ])
                                                        self.num_seconds = None

                                                        self.location = YList(self)
                                                        self._segment_path = lambda: "duration" + "[num-seconds='" + str(self.num_seconds) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration, [u'num_seconds'], name, value)


                                                    class Location(Entity):
                                                        """
                                                        
                                                        
                                                        .. attribute:: fit_location_name  (key)
                                                        
                                                        	
                                                        	**type**\: str
                                                        
                                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                                        
                                                        	**config**\: False
                                                        
                                                        

                                                        """

                                                        _prefix = 'calvados_controllers'
                                                        _revision = '2017-10-11'

                                                        def __init__(self):
                                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration.Location, self).__init__()

                                                            self.yang_name = "location"
                                                            self.yang_parent_name = "duration"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = ['fit_location_name']
                                                            self._child_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                            ])
                                                            self.fit_location_name = None
                                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                            self._is_frozen = True

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Rate.ErrorNumber.Duration.Location, [u'fit_location_name'], name, value)






                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "one"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.One.Location, [u'fit_location_name'], name, value)




                                    class Continuous(Entity):
                                        """
                                        
                                        
                                        .. attribute:: rate
                                        
                                        	
                                        	**type**\:  :py:class:`Rate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous, self).__init__()

                                            self.yang_name = "continuous"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("rate", ("rate", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Location))])
                                            self._leafs = OrderedDict()

                                            self.rate = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate()
                                            self.rate.parent = self
                                            self._children_name_map["rate"] = "rate"

                                            self.location = YList(self)
                                            self._segment_path = lambda: "continuous"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous, [], name, value)


                                        class Rate(Entity):
                                            """
                                            
                                            
                                            .. attribute:: error_number
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`ErrorNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate, self).__init__()

                                                self.yang_name = "rate"
                                                self.yang_parent_name = "continuous"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("error-number", ("error_number", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber))])
                                                self._leafs = OrderedDict()

                                                self.error_number = YList(self)
                                                self._segment_path = lambda: "rate"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate, [], name, value)


                                            class ErrorNumber(Entity):
                                                """
                                                
                                                
                                                .. attribute:: num_errs  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: duration
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`Duration <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber, self).__init__()

                                                    self.yang_name = "error-number"
                                                    self.yang_parent_name = "rate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['num_errs']
                                                    self._child_classes = OrderedDict([("duration", ("duration", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration))])
                                                    self._leafs = OrderedDict([
                                                        ('num_errs', (YLeaf(YType.uint32, 'num-errs'), ['int'])),
                                                    ])
                                                    self.num_errs = None

                                                    self.duration = YList(self)
                                                    self._segment_path = lambda: "error-number" + "[num-errs='" + str(self.num_errs) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber, [u'num_errs'], name, value)


                                                class Duration(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: num_seconds  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: location
                                                    
                                                    	
                                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location>`
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration, self).__init__()

                                                        self.yang_name = "duration"
                                                        self.yang_parent_name = "error-number"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['num_seconds']
                                                        self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location))])
                                                        self._leafs = OrderedDict([
                                                            ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                                        ])
                                                        self.num_seconds = None

                                                        self.location = YList(self)
                                                        self._segment_path = lambda: "duration" + "[num-seconds='" + str(self.num_seconds) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration, [u'num_seconds'], name, value)


                                                    class Location(Entity):
                                                        """
                                                        
                                                        
                                                        .. attribute:: fit_location_name  (key)
                                                        
                                                        	
                                                        	**type**\: str
                                                        
                                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                                        
                                                        	**config**\: False
                                                        
                                                        

                                                        """

                                                        _prefix = 'calvados_controllers'
                                                        _revision = '2017-10-11'

                                                        def __init__(self):
                                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location, self).__init__()

                                                            self.yang_name = "location"
                                                            self.yang_parent_name = "duration"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = ['fit_location_name']
                                                            self._child_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                            ])
                                                            self.fit_location_name = None
                                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                            self._is_frozen = True

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location, [u'fit_location_name'], name, value)






                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "continuous"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Continuous.Location, [u'fit_location_name'], name, value)




                                    class Stop(Entity):
                                        """
                                        
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop, self).__init__()

                                            self.yang_name = "stop"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop.Location))])
                                            self._leafs = OrderedDict()

                                            self.location = YList(self)
                                            self._segment_path = lambda: "stop"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop, [], name, value)


                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "stop"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Parity.BlockNameLst.Stop.Location, [u'fit_location_name'], name, value)






                            class Other(Entity):
                                """
                                
                                
                                .. attribute:: all
                                
                                	
                                	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All>`
                                
                                	**config**\: False
                                
                                .. attribute:: block_name_lst
                                
                                	
                                	**type**\: list of  		 :py:class:`BlockNameLst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other, self).__init__()

                                    self.yang_name = "other"
                                    self.yang_parent_name = "fault-type"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("all", ("all", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All)), ("block-name-lst", ("block_name_lst", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst))])
                                    self._leafs = OrderedDict()

                                    self.all = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All()
                                    self.all.parent = self
                                    self._children_name_map["all"] = "all"

                                    self.block_name_lst = YList(self)
                                    self._segment_path = lambda: "other"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other, [], name, value)


                                class All(Entity):
                                    """
                                    
                                    
                                    .. attribute:: threshold
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`Threshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: location
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Location>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All, self).__init__()

                                        self.yang_name = "all"
                                        self.yang_parent_name = "other"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("threshold", ("threshold", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Location))])
                                        self._leafs = OrderedDict()

                                        self.threshold = YList(self)
                                        self.location = YList(self)
                                        self._segment_path = lambda: "all"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All, [], name, value)


                                    class Threshold(Entity):
                                        """
                                        
                                        
                                        .. attribute:: num_seconds  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**mandatory**\: True
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold, self).__init__()

                                            self.yang_name = "threshold"
                                            self.yang_parent_name = "all"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['num_seconds']
                                            self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold.Location))])
                                            self._leafs = OrderedDict([
                                                ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                            ])
                                            self.num_seconds = None

                                            self.location = YList(self)
                                            self._segment_path = lambda: "threshold" + "[num-seconds='" + str(self.num_seconds) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold, [u'num_seconds'], name, value)


                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "threshold"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Threshold.Location, [u'fit_location_name'], name, value)




                                    class Location(Entity):
                                        """
                                        
                                        
                                        .. attribute:: fit_location_name  (key)
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Location, self).__init__()

                                            self.yang_name = "location"
                                            self.yang_parent_name = "all"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['fit_location_name']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                            ])
                                            self.fit_location_name = None
                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.All.Location, [u'fit_location_name'], name, value)




                                class BlockNameLst(Entity):
                                    """
                                    
                                    
                                    .. attribute:: block_name  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: one
                                    
                                    	
                                    	**type**\:  :py:class:`One <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: continuous
                                    
                                    	
                                    	**type**\:  :py:class:`Continuous <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: stop
                                    
                                    	
                                    	**type**\:  :py:class:`Stop <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst, self).__init__()

                                        self.yang_name = "block-name-lst"
                                        self.yang_parent_name = "other"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['block_name']
                                        self._child_classes = OrderedDict([("one", ("one", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One)), ("continuous", ("continuous", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous)), ("stop", ("stop", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop))])
                                        self._leafs = OrderedDict([
                                            ('block_name', (YLeaf(YType.str, 'block-name'), ['str'])),
                                        ])
                                        self.block_name = None

                                        self.one = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One()
                                        self.one.parent = self
                                        self._children_name_map["one"] = "one"

                                        self.continuous = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous()
                                        self.continuous.parent = self
                                        self._children_name_map["continuous"] = "continuous"

                                        self.stop = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop()
                                        self.stop.parent = self
                                        self._children_name_map["stop"] = "stop"
                                        self._segment_path = lambda: "block-name-lst" + "[block-name='" + str(self.block_name) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst, [u'block_name'], name, value)


                                    class One(Entity):
                                        """
                                        
                                        
                                        .. attribute:: rate
                                        
                                        	
                                        	**type**\:  :py:class:`Rate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One, self).__init__()

                                            self.yang_name = "one"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("rate", ("rate", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Location))])
                                            self._leafs = OrderedDict()

                                            self.rate = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate()
                                            self.rate.parent = self
                                            self._children_name_map["rate"] = "rate"

                                            self.location = YList(self)
                                            self._segment_path = lambda: "one"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One, [], name, value)


                                        class Rate(Entity):
                                            """
                                            
                                            
                                            .. attribute:: error_number
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`ErrorNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate, self).__init__()

                                                self.yang_name = "rate"
                                                self.yang_parent_name = "one"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("error-number", ("error_number", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber))])
                                                self._leafs = OrderedDict()

                                                self.error_number = YList(self)
                                                self._segment_path = lambda: "rate"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate, [], name, value)


                                            class ErrorNumber(Entity):
                                                """
                                                
                                                
                                                .. attribute:: num_errs  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: duration
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`Duration <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber, self).__init__()

                                                    self.yang_name = "error-number"
                                                    self.yang_parent_name = "rate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['num_errs']
                                                    self._child_classes = OrderedDict([("duration", ("duration", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration))])
                                                    self._leafs = OrderedDict([
                                                        ('num_errs', (YLeaf(YType.uint32, 'num-errs'), ['int'])),
                                                    ])
                                                    self.num_errs = None

                                                    self.duration = YList(self)
                                                    self._segment_path = lambda: "error-number" + "[num-errs='" + str(self.num_errs) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber, [u'num_errs'], name, value)


                                                class Duration(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: num_seconds  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: location
                                                    
                                                    	
                                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration.Location>`
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration, self).__init__()

                                                        self.yang_name = "duration"
                                                        self.yang_parent_name = "error-number"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['num_seconds']
                                                        self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration.Location))])
                                                        self._leafs = OrderedDict([
                                                            ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                                        ])
                                                        self.num_seconds = None

                                                        self.location = YList(self)
                                                        self._segment_path = lambda: "duration" + "[num-seconds='" + str(self.num_seconds) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration, [u'num_seconds'], name, value)


                                                    class Location(Entity):
                                                        """
                                                        
                                                        
                                                        .. attribute:: fit_location_name  (key)
                                                        
                                                        	
                                                        	**type**\: str
                                                        
                                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                                        
                                                        	**config**\: False
                                                        
                                                        

                                                        """

                                                        _prefix = 'calvados_controllers'
                                                        _revision = '2017-10-11'

                                                        def __init__(self):
                                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration.Location, self).__init__()

                                                            self.yang_name = "location"
                                                            self.yang_parent_name = "duration"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = ['fit_location_name']
                                                            self._child_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                            ])
                                                            self.fit_location_name = None
                                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                            self._is_frozen = True

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Rate.ErrorNumber.Duration.Location, [u'fit_location_name'], name, value)






                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "one"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.One.Location, [u'fit_location_name'], name, value)




                                    class Continuous(Entity):
                                        """
                                        
                                        
                                        .. attribute:: rate
                                        
                                        	
                                        	**type**\:  :py:class:`Rate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous, self).__init__()

                                            self.yang_name = "continuous"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("rate", ("rate", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate)), ("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Location))])
                                            self._leafs = OrderedDict()

                                            self.rate = Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate()
                                            self.rate.parent = self
                                            self._children_name_map["rate"] = "rate"

                                            self.location = YList(self)
                                            self._segment_path = lambda: "continuous"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous, [], name, value)


                                        class Rate(Entity):
                                            """
                                            
                                            
                                            .. attribute:: error_number
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`ErrorNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate, self).__init__()

                                                self.yang_name = "rate"
                                                self.yang_parent_name = "continuous"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("error-number", ("error_number", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber))])
                                                self._leafs = OrderedDict()

                                                self.error_number = YList(self)
                                                self._segment_path = lambda: "rate"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate, [], name, value)


                                            class ErrorNumber(Entity):
                                                """
                                                
                                                
                                                .. attribute:: num_errs  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: duration
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`Duration <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber, self).__init__()

                                                    self.yang_name = "error-number"
                                                    self.yang_parent_name = "rate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['num_errs']
                                                    self._child_classes = OrderedDict([("duration", ("duration", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration))])
                                                    self._leafs = OrderedDict([
                                                        ('num_errs', (YLeaf(YType.uint32, 'num-errs'), ['int'])),
                                                    ])
                                                    self.num_errs = None

                                                    self.duration = YList(self)
                                                    self._segment_path = lambda: "error-number" + "[num-errs='" + str(self.num_errs) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber, [u'num_errs'], name, value)


                                                class Duration(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: num_seconds  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: location
                                                    
                                                    	
                                                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location>`
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration, self).__init__()

                                                        self.yang_name = "duration"
                                                        self.yang_parent_name = "error-number"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['num_seconds']
                                                        self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location))])
                                                        self._leafs = OrderedDict([
                                                            ('num_seconds', (YLeaf(YType.uint32, 'num-seconds'), ['int'])),
                                                        ])
                                                        self.num_seconds = None

                                                        self.location = YList(self)
                                                        self._segment_path = lambda: "duration" + "[num-seconds='" + str(self.num_seconds) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration, [u'num_seconds'], name, value)


                                                    class Location(Entity):
                                                        """
                                                        
                                                        
                                                        .. attribute:: fit_location_name  (key)
                                                        
                                                        	
                                                        	**type**\: str
                                                        
                                                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                                        
                                                        	**config**\: False
                                                        
                                                        

                                                        """

                                                        _prefix = 'calvados_controllers'
                                                        _revision = '2017-10-11'

                                                        def __init__(self):
                                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location, self).__init__()

                                                            self.yang_name = "location"
                                                            self.yang_parent_name = "duration"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = ['fit_location_name']
                                                            self._child_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                            ])
                                                            self.fit_location_name = None
                                                            self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                            self._is_frozen = True

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Rate.ErrorNumber.Duration.Location, [u'fit_location_name'], name, value)






                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "continuous"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Continuous.Location, [u'fit_location_name'], name, value)




                                    class Stop(Entity):
                                        """
                                        
                                        
                                        .. attribute:: location
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop.Location>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop, self).__init__()

                                            self.yang_name = "stop"
                                            self.yang_parent_name = "block-name-lst"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("location", ("location", Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop.Location))])
                                            self._leafs = OrderedDict()

                                            self.location = YList(self)
                                            self._segment_path = lambda: "stop"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop, [], name, value)


                                        class Location(Entity):
                                            """
                                            
                                            
                                            .. attribute:: fit_location_name  (key)
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop.Location, self).__init__()

                                                self.yang_name = "location"
                                                self.yang_parent_name = "stop"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['fit_location_name']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('fit_location_name', (YLeaf(YType.str, 'fit-location-name'), ['str'])),
                                                ])
                                                self.fit_location_name = None
                                                self._segment_path = lambda: "location" + "[fit-location-name='" + str(self.fit_location_name) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Set.Controller.Asic.Instance.FaultInjection.Module.FaultType.Other.BlockNameLst.Stop.Location, [u'fit_location_name'], name, value)











    def clone_ptr(self):
        self._top_entity = Set()
        return self._top_entity



class Controller(Entity):
    """
    
    
    .. attribute:: fabric
    
    	Fabric resource commands
    	**type**\:  :py:class:`Fabric <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric>`
    
    .. attribute:: sfe_oper
    
    	
    	**type**\:  :py:class:`SfeOper <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper>`
    
    	**config**\: False
    
    .. attribute:: switch
    
    	
    	**type**\:  :py:class:`Switch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch>`
    
    .. attribute:: fabric_action
    
    	
    	**type**\:  :py:class:`FabricAction <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.FabricAction>`
    
    .. attribute:: card_mgr
    
    	
    	**type**\:  :py:class:`CardMgr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr>`
    
    

    """

    _prefix = 'calvados_controllers'
    _revision = '2017-10-11'

    def __init__(self):
        super(Controller, self).__init__()
        self._top_entity = None

        self.yang_name = "controller"
        self.yang_parent_name = "Cisco-IOS-XR-sysadmin-controllers-ncs5500"
        self.is_top_level_class = True
        self.has_list_ancestor = False
        self.ylist_key_names = []
        self._child_classes = OrderedDict([("fabric", ("fabric", Controller.Fabric)), ("sfe_oper", ("sfe_oper", Controller.SfeOper)), ("switch", ("switch", Controller.Switch)), ("fabric_action", ("fabric_action", Controller.FabricAction)), ("card_mgr", ("card_mgr", Controller.CardMgr))])
        self._leafs = OrderedDict()

        self.fabric = Controller.Fabric()
        self.fabric.parent = self
        self._children_name_map["fabric"] = "fabric"

        self.sfe_oper = Controller.SfeOper()
        self.sfe_oper.parent = self
        self._children_name_map["sfe_oper"] = "sfe_oper"

        self.switch = Controller.Switch()
        self.switch.parent = self
        self._children_name_map["switch"] = "switch"

        self.fabric_action = Controller.FabricAction()
        self.fabric_action.parent = self
        self._children_name_map["fabric_action"] = "fabric_action"

        self.card_mgr = Controller.CardMgr()
        self.card_mgr.parent = self
        self._children_name_map["card_mgr"] = "card_mgr"
        self._segment_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller"
        self._is_frozen = True

    def __setattr__(self, name, value):
        self._perform_setattr(Controller, [], name, value)


    class Fabric(Entity):
        """
        Fabric resource commands
        
        .. attribute:: fabric
        
        	Fabric configuration
        	**type**\:  :py:class:`Fabric_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Fabric_>`
        
        .. attribute:: oper
        
        	
        	**type**\:  :py:class:`Oper <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper>`
        
        	**config**\: False
        
        

        """

        _prefix = 'calvados_controllers'
        _revision = '2017-10-11'

        def __init__(self):
            super(Controller.Fabric, self).__init__()

            self.yang_name = "fabric"
            self.yang_parent_name = "controller"
            self.is_top_level_class = False
            self.has_list_ancestor = False
            self.ylist_key_names = []
            self._child_classes = OrderedDict([("fabric", ("fabric", Controller.Fabric.Fabric_)), ("oper", ("oper", Controller.Fabric.Oper))])
            self._leafs = OrderedDict()

            self.fabric = Controller.Fabric.Fabric_()
            self.fabric.parent = self
            self._children_name_map["fabric"] = "fabric"

            self.oper = Controller.Fabric.Oper()
            self.oper.parent = self
            self._children_name_map["oper"] = "oper"
            self._segment_path = lambda: "fabric"
            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/%s" % self._segment_path()
            self._is_frozen = True

        def __setattr__(self, name, value):
            self._perform_setattr(Controller.Fabric, [], name, value)


        class Fabric_(Entity):
            """
            Fabric configuration
            
            .. attribute:: fsdbagg
            
            	
            	**type**\:  :py:class:`Fsdbagg <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Fabric_.Fsdbagg>`
            
            .. attribute:: fgid
            
            	
            	**type**\:  :py:class:`Fgid <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Fabric_.Fgid>`
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.Fabric.Fabric_, self).__init__()

                self.yang_name = "fabric"
                self.yang_parent_name = "fabric"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("fsdbagg", ("fsdbagg", Controller.Fabric.Fabric_.Fsdbagg)), ("fgid", ("fgid", Controller.Fabric.Fabric_.Fgid))])
                self._leafs = OrderedDict()

                self.fsdbagg = Controller.Fabric.Fabric_.Fsdbagg()
                self.fsdbagg.parent = self
                self._children_name_map["fsdbagg"] = "fsdbagg"

                self.fgid = Controller.Fabric.Fabric_.Fgid()
                self.fgid.parent = self
                self._children_name_map["fgid"] = "fgid"
                self._segment_path = lambda: "fabric"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.Fabric.Fabric_, [], name, value)


            class Fsdbagg(Entity):
                """
                
                
                .. attribute:: plane
                
                	Set state of fabric plane
                	**type**\: list of  		 :py:class:`Plane <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Fabric_.Fsdbagg.Plane>`
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Fabric_.Fsdbagg, self).__init__()

                    self.yang_name = "fsdbagg"
                    self.yang_parent_name = "fabric"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("plane", ("plane", Controller.Fabric.Fabric_.Fsdbagg.Plane))])
                    self._leafs = OrderedDict()

                    self.plane = YList(self)
                    self._segment_path = lambda: "fsdbagg"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/fabric/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Fabric_.Fsdbagg, [], name, value)


                class Plane(Entity):
                    """
                    Set state of fabric plane
                    
                    .. attribute:: plane_id  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** [0\-5]
                    
                    .. attribute:: shutdown
                    
                    	Shut down state
                    	**type**\: :py:class:`Empty<ydk.types.Empty>`
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Fabric_.Fsdbagg.Plane, self).__init__()

                        self.yang_name = "plane"
                        self.yang_parent_name = "fsdbagg"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['plane_id']
                        self._child_classes = OrderedDict([])
                        self._leafs = OrderedDict([
                            ('plane_id', (YLeaf(YType.str, 'plane_id'), ['str'])),
                            ('shutdown', (YLeaf(YType.empty, 'shutdown'), ['Empty'])),
                        ])
                        self.plane_id = None
                        self.shutdown = None
                        self._segment_path = lambda: "plane" + "[plane_id='" + str(self.plane_id) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/fabric/fsdbagg/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Fabric_.Fsdbagg.Plane, [u'plane_id', u'shutdown'], name, value)




            class Fgid(Entity):
                """
                
                
                .. attribute:: resource
                
                	
                	**type**\:  :py:class:`Resource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Fabric_.Fgid.Resource>`
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Fabric_.Fgid, self).__init__()

                    self.yang_name = "fgid"
                    self.yang_parent_name = "fabric"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("resource", ("resource", Controller.Fabric.Fabric_.Fgid.Resource))])
                    self._leafs = OrderedDict()

                    self.resource = Controller.Fabric.Fabric_.Fgid.Resource()
                    self.resource.parent = self
                    self._children_name_map["resource"] = "resource"
                    self._segment_path = lambda: "fgid"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/fabric/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Fabric_.Fgid, [], name, value)


                class Resource(Entity):
                    """
                    
                    
                    .. attribute:: sdr
                    
                    	
                    	**type**\:  :py:class:`Sdr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Fabric_.Fgid.Resource.Sdr>`
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Fabric_.Fgid.Resource, self).__init__()

                        self.yang_name = "resource"
                        self.yang_parent_name = "fgid"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("sdr", ("sdr", Controller.Fabric.Fabric_.Fgid.Resource.Sdr))])
                        self._leafs = OrderedDict()

                        self.sdr = Controller.Fabric.Fabric_.Fgid.Resource.Sdr()
                        self.sdr.parent = self
                        self._children_name_map["sdr"] = "sdr"
                        self._segment_path = lambda: "resource"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/fabric/fgid/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Fabric_.Fgid.Resource, [], name, value)


                    class Sdr(Entity):
                        """
                        
                        
                        .. attribute:: allocation
                        
                        	
                        	**type**\:  :py:class:`Allocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Fabric_.Fgid.Resource.Sdr.Allocation>`
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Fabric_.Fgid.Resource.Sdr, self).__init__()

                            self.yang_name = "sdr"
                            self.yang_parent_name = "resource"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("allocation", ("allocation", Controller.Fabric.Fabric_.Fgid.Resource.Sdr.Allocation))])
                            self._leafs = OrderedDict()

                            self.allocation = Controller.Fabric.Fabric_.Fgid.Resource.Sdr.Allocation()
                            self.allocation.parent = self
                            self._children_name_map["allocation"] = "allocation"
                            self._segment_path = lambda: "sdr"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/fabric/fgid/resource/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Fabric_.Fgid.Resource.Sdr, [], name, value)


                        class Allocation(Entity):
                            """
                            
                            
                            .. attribute:: percent
                            
                            	
                            	**type**\: int
                            
                            	**range:** 20..50
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Fabric_.Fgid.Resource.Sdr.Allocation, self).__init__()

                                self.yang_name = "allocation"
                                self.yang_parent_name = "sdr"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('percent', (YLeaf(YType.int32, 'percent'), ['int'])),
                                ])
                                self.percent = None
                                self._segment_path = lambda: "allocation"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/fabric/fgid/resource/sdr/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Fabric_.Fgid.Resource.Sdr.Allocation, [u'percent'], name, value)







        class Oper(Entity):
            """
            
            
            .. attribute:: fgid
            
            	FGID management information
            	**type**\:  :py:class:`Fgid <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid>`
            
            	**config**\: False
            
            .. attribute:: fsdbagg_active
            
            	
            	**type**\:  :py:class:`FsdbaggActive <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive>`
            
            	**config**\: False
            
            .. attribute:: fsdbagg_link
            
            	
            	**type**\:  :py:class:`FsdbaggLink <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggLink>`
            
            	**config**\: False
            
            .. attribute:: fsdbagg_sfe_asic_type
            
            	
            	**type**\:  :py:class:`FsdbaggSfeAsicType <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggSfeAsicType>`
            
            	**config**\: False
            
            .. attribute:: fsdbagg_standby
            
            	
            	**type**\:  :py:class:`FsdbaggStandby <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggStandby>`
            
            	**config**\: False
            
            .. attribute:: fab_health
            
            	
            	**type**\:  :py:class:`FabHealth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth>`
            
            	**config**\: False
            
            .. attribute:: fsdb_aggregator
            
            	FSDB Aggregator information
            	**type**\:  :py:class:`FsdbAggregator <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbAggregator>`
            
            	**config**\: False
            
            .. attribute:: link
            
            	Fabric link option
            	**type**\:  :py:class:`Link <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link>`
            
            	**config**\: False
            
            .. attribute:: sfe
            
            	Switch Fabric Element option
            	**type**\:  :py:class:`Sfe <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe>`
            
            	**config**\: False
            
            .. attribute:: fsdb_pla
            
            	plane availability status option
            	**type**\:  :py:class:`FsdbPla <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla>`
            
            	**config**\: False
            
            .. attribute:: fsdb_srvr
            
            	FSDB Server information
            	**type**\:  :py:class:`FsdbSrvr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbSrvr>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.Fabric.Oper, self).__init__()

                self.yang_name = "oper"
                self.yang_parent_name = "fabric"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("fgid", ("fgid", Controller.Fabric.Oper.Fgid)), ("fsdbagg_active", ("fsdbagg_active", Controller.Fabric.Oper.FsdbaggActive)), ("fsdbagg_link", ("fsdbagg_link", Controller.Fabric.Oper.FsdbaggLink)), ("fsdbagg_sfe_asic_type", ("fsdbagg_sfe_asic_type", Controller.Fabric.Oper.FsdbaggSfeAsicType)), ("fsdbagg_standby", ("fsdbagg_standby", Controller.Fabric.Oper.FsdbaggStandby)), ("fab_health", ("fab_health", Controller.Fabric.Oper.FabHealth)), ("fsdb-aggregator", ("fsdb_aggregator", Controller.Fabric.Oper.FsdbAggregator)), ("link", ("link", Controller.Fabric.Oper.Link)), ("sfe", ("sfe", Controller.Fabric.Oper.Sfe)), ("fsdb_pla", ("fsdb_pla", Controller.Fabric.Oper.FsdbPla)), ("fsdb_srvr", ("fsdb_srvr", Controller.Fabric.Oper.FsdbSrvr))])
                self._leafs = OrderedDict()

                self.fgid = Controller.Fabric.Oper.Fgid()
                self.fgid.parent = self
                self._children_name_map["fgid"] = "fgid"

                self.fsdbagg_active = Controller.Fabric.Oper.FsdbaggActive()
                self.fsdbagg_active.parent = self
                self._children_name_map["fsdbagg_active"] = "fsdbagg_active"

                self.fsdbagg_link = Controller.Fabric.Oper.FsdbaggLink()
                self.fsdbagg_link.parent = self
                self._children_name_map["fsdbagg_link"] = "fsdbagg_link"

                self.fsdbagg_sfe_asic_type = Controller.Fabric.Oper.FsdbaggSfeAsicType()
                self.fsdbagg_sfe_asic_type.parent = self
                self._children_name_map["fsdbagg_sfe_asic_type"] = "fsdbagg_sfe_asic_type"

                self.fsdbagg_standby = Controller.Fabric.Oper.FsdbaggStandby()
                self.fsdbagg_standby.parent = self
                self._children_name_map["fsdbagg_standby"] = "fsdbagg_standby"

                self.fab_health = Controller.Fabric.Oper.FabHealth()
                self.fab_health.parent = self
                self._children_name_map["fab_health"] = "fab_health"

                self.fsdb_aggregator = Controller.Fabric.Oper.FsdbAggregator()
                self.fsdb_aggregator.parent = self
                self._children_name_map["fsdb_aggregator"] = "fsdb-aggregator"

                self.link = Controller.Fabric.Oper.Link()
                self.link.parent = self
                self._children_name_map["link"] = "link"

                self.sfe = Controller.Fabric.Oper.Sfe()
                self.sfe.parent = self
                self._children_name_map["sfe"] = "sfe"

                self.fsdb_pla = Controller.Fabric.Oper.FsdbPla()
                self.fsdb_pla.parent = self
                self._children_name_map["fsdb_pla"] = "fsdb_pla"

                self.fsdb_srvr = Controller.Fabric.Oper.FsdbSrvr()
                self.fsdb_srvr.parent = self
                self._children_name_map["fsdb_srvr"] = "fsdb_srvr"
                self._segment_path = lambda: "oper"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.Fabric.Oper, [], name, value)


            class Fgid(Entity):
                """
                FGID management information
                
                .. attribute:: information
                
                	
                	**type**\:  :py:class:`Information <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Information>`
                
                	**config**\: False
                
                .. attribute:: resource
                
                	
                	**type**\:  :py:class:`Resource <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Resource>`
                
                	**config**\: False
                
                .. attribute:: statistics
                
                	
                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics>`
                
                	**config**\: False
                
                .. attribute:: fgid_mgr
                
                	
                	**type**\:  :py:class:`FgidMgr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.FgidMgr>`
                
                	**config**\: False
                
                .. attribute:: program_error
                
                	
                	**type**\: list of  		 :py:class:`ProgramError <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.ProgramError>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.Fgid, self).__init__()

                    self.yang_name = "fgid"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("information", ("information", Controller.Fabric.Oper.Fgid.Information)), ("resource", ("resource", Controller.Fabric.Oper.Fgid.Resource)), ("statistics", ("statistics", Controller.Fabric.Oper.Fgid.Statistics)), ("fgid_mgr", ("fgid_mgr", Controller.Fabric.Oper.Fgid.FgidMgr)), ("program_error", ("program_error", Controller.Fabric.Oper.Fgid.ProgramError))])
                    self._leafs = OrderedDict()

                    self.information = Controller.Fabric.Oper.Fgid.Information()
                    self.information.parent = self
                    self._children_name_map["information"] = "information"

                    self.resource = Controller.Fabric.Oper.Fgid.Resource()
                    self.resource.parent = self
                    self._children_name_map["resource"] = "resource"

                    self.statistics = Controller.Fabric.Oper.Fgid.Statistics()
                    self.statistics.parent = self
                    self._children_name_map["statistics"] = "statistics"

                    self.fgid_mgr = Controller.Fabric.Oper.Fgid.FgidMgr()
                    self.fgid_mgr.parent = self
                    self._children_name_map["fgid_mgr"] = "fgid_mgr"

                    self.program_error = YList(self)
                    self._segment_path = lambda: "fgid"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.Fgid, [], name, value)


                class Information(Entity):
                    """
                    
                    
                    .. attribute:: id
                    
                    	
                    	**type**\: list of  		 :py:class:`Id <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Information.Id>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Fgid.Information, self).__init__()

                        self.yang_name = "information"
                        self.yang_parent_name = "fgid"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("id", ("id", Controller.Fabric.Oper.Fgid.Information.Id))])
                        self._leafs = OrderedDict()

                        self.id = YList(self)
                        self._segment_path = lambda: "information"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Fgid.Information, [], name, value)


                    class Id(Entity):
                        """
                        
                        
                        .. attribute:: fgid_id  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..128000
                        
                        	**config**\: False
                        
                        .. attribute:: hex_bitmaps
                        
                        	
                        	**type**\: list of  		 :py:class:`HexBitmaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Information.Id.HexBitmaps>`
                        
                        	**config**\: False
                        
                        .. attribute:: binary_bitmaps
                        
                        	
                        	**type**\: list of  		 :py:class:`BinaryBitmaps <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Information.Id.BinaryBitmaps>`
                        
                        	**config**\: False
                        
                        .. attribute:: total_asso_fabricq_ids
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: asso_fabricq_ids
                        
                        	
                        	**type**\: list of  		 :py:class:`AssoFabricqIds <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Information.Id.AssoFabricqIds>`
                        
                        	**config**\: False
                        
                        .. attribute:: asso_client_info
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: drivers
                        
                        	
                        	**type**\: list of  		 :py:class:`Drivers <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Information.Id.Drivers>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.Information.Id, self).__init__()

                            self.yang_name = "id"
                            self.yang_parent_name = "information"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['fgid_id']
                            self._child_classes = OrderedDict([("hex_bitmaps", ("hex_bitmaps", Controller.Fabric.Oper.Fgid.Information.Id.HexBitmaps)), ("binary_bitmaps", ("binary_bitmaps", Controller.Fabric.Oper.Fgid.Information.Id.BinaryBitmaps)), ("asso_fabricq_ids", ("asso_fabricq_ids", Controller.Fabric.Oper.Fgid.Information.Id.AssoFabricqIds)), ("drivers", ("drivers", Controller.Fabric.Oper.Fgid.Information.Id.Drivers))])
                            self._leafs = OrderedDict([
                                ('fgid_id', (YLeaf(YType.int32, 'fgid_id'), ['int'])),
                                ('total_asso_fabricq_ids', (YLeaf(YType.int32, 'total_asso_fabricq_ids'), ['int'])),
                                ('asso_client_info', (YLeaf(YType.str, 'asso_client_info'), ['str'])),
                            ])
                            self.fgid_id = None
                            self.total_asso_fabricq_ids = None
                            self.asso_client_info = None

                            self.hex_bitmaps = YList(self)
                            self.binary_bitmaps = YList(self)
                            self.asso_fabricq_ids = YList(self)
                            self.drivers = YList(self)
                            self._segment_path = lambda: "id" + "[fgid_id='" + str(self.fgid_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/information/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.Information.Id, [u'fgid_id', u'total_asso_fabricq_ids', u'asso_client_info'], name, value)


                        class HexBitmaps(Entity):
                            """
                            
                            
                            .. attribute:: rack_number  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: bitmap
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Information.Id.HexBitmaps, self).__init__()

                                self.yang_name = "hex_bitmaps"
                                self.yang_parent_name = "id"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['rack_number']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('rack_number', (YLeaf(YType.int32, 'rack_number'), ['int'])),
                                    ('bitmap', (YLeaf(YType.str, 'bitmap'), ['str'])),
                                ])
                                self.rack_number = None
                                self.bitmap = None
                                self._segment_path = lambda: "hex_bitmaps" + "[rack_number='" + str(self.rack_number) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Information.Id.HexBitmaps, [u'rack_number', u'bitmap'], name, value)



                        class BinaryBitmaps(Entity):
                            """
                            
                            
                            .. attribute:: rack_number  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: bitmap
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Information.Id.BinaryBitmaps, self).__init__()

                                self.yang_name = "binary_bitmaps"
                                self.yang_parent_name = "id"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['rack_number']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('rack_number', (YLeaf(YType.int32, 'rack_number'), ['int'])),
                                    ('bitmap', (YLeaf(YType.str, 'bitmap'), ['str'])),
                                ])
                                self.rack_number = None
                                self.bitmap = None
                                self._segment_path = lambda: "binary_bitmaps" + "[rack_number='" + str(self.rack_number) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Information.Id.BinaryBitmaps, [u'rack_number', u'bitmap'], name, value)



                        class AssoFabricqIds(Entity):
                            """
                            
                            
                            .. attribute:: fabricq_id  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Information.Id.AssoFabricqIds, self).__init__()

                                self.yang_name = "asso_fabricq_ids"
                                self.yang_parent_name = "id"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['fabricq_id']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('fabricq_id', (YLeaf(YType.str, 'fabricq_id'), ['str'])),
                                ])
                                self.fabricq_id = None
                                self._segment_path = lambda: "asso_fabricq_ids" + "[fabricq_id='" + str(self.fabricq_id) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Information.Id.AssoFabricqIds, [u'fabricq_id'], name, value)



                        class Drivers(Entity):
                            """
                            
                            
                            .. attribute:: rack_number  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: clients
                            
                            	
                            	**type**\: list of  		 :py:class:`Clients <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Information.Id.Drivers.Clients>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Information.Id.Drivers, self).__init__()

                                self.yang_name = "drivers"
                                self.yang_parent_name = "id"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['rack_number']
                                self._child_classes = OrderedDict([("clients", ("clients", Controller.Fabric.Oper.Fgid.Information.Id.Drivers.Clients))])
                                self._leafs = OrderedDict([
                                    ('rack_number', (YLeaf(YType.int32, 'rack_number'), ['int'])),
                                ])
                                self.rack_number = None

                                self.clients = YList(self)
                                self._segment_path = lambda: "drivers" + "[rack_number='" + str(self.rack_number) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Information.Id.Drivers, [u'rack_number'], name, value)


                            class Clients(Entity):
                                """
                                
                                
                                .. attribute:: client_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-2147483648..2147483647
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_0
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_0_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_1
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_1_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_2
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_2_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_3
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_3_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_4
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_4_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_5
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_5_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_6
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_6_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_7
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_7_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_8
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_8_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_9
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_9_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_10
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_10_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_11
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_11_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_12
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_12_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_13
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_13_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_14
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_14_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_15
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_15_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_16
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_16_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_17
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_17_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_18
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_18_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_19
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_19_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_20
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_20_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_21
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_21_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_22
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_22_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_23
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_23_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_24
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_24_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_25
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_25_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_26
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_26_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_27
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_27_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_28
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_28_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_29
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_29_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_30
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_30_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_31
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_31_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_32
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_32_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_33
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_33_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_34
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_34_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_asic_35
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                	**default value**\: false
                                
                                .. attribute:: asic_35_bitmap
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Fgid.Information.Id.Drivers.Clients, self).__init__()

                                    self.yang_name = "clients"
                                    self.yang_parent_name = "drivers"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['client_idx']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('client_idx', (YLeaf(YType.int32, 'client_idx'), ['int'])),
                                        ('show_asic_0', (YLeaf(YType.boolean, 'show_asic_0'), ['bool'])),
                                        ('asic_0_bitmap', (YLeaf(YType.str, 'asic_0_bitmap'), ['str'])),
                                        ('show_asic_1', (YLeaf(YType.boolean, 'show_asic_1'), ['bool'])),
                                        ('asic_1_bitmap', (YLeaf(YType.str, 'asic_1_bitmap'), ['str'])),
                                        ('show_asic_2', (YLeaf(YType.boolean, 'show_asic_2'), ['bool'])),
                                        ('asic_2_bitmap', (YLeaf(YType.str, 'asic_2_bitmap'), ['str'])),
                                        ('show_asic_3', (YLeaf(YType.boolean, 'show_asic_3'), ['bool'])),
                                        ('asic_3_bitmap', (YLeaf(YType.str, 'asic_3_bitmap'), ['str'])),
                                        ('show_asic_4', (YLeaf(YType.boolean, 'show_asic_4'), ['bool'])),
                                        ('asic_4_bitmap', (YLeaf(YType.str, 'asic_4_bitmap'), ['str'])),
                                        ('show_asic_5', (YLeaf(YType.boolean, 'show_asic_5'), ['bool'])),
                                        ('asic_5_bitmap', (YLeaf(YType.str, 'asic_5_bitmap'), ['str'])),
                                        ('show_asic_6', (YLeaf(YType.boolean, 'show_asic_6'), ['bool'])),
                                        ('asic_6_bitmap', (YLeaf(YType.str, 'asic_6_bitmap'), ['str'])),
                                        ('show_asic_7', (YLeaf(YType.boolean, 'show_asic_7'), ['bool'])),
                                        ('asic_7_bitmap', (YLeaf(YType.str, 'asic_7_bitmap'), ['str'])),
                                        ('show_asic_8', (YLeaf(YType.boolean, 'show_asic_8'), ['bool'])),
                                        ('asic_8_bitmap', (YLeaf(YType.str, 'asic_8_bitmap'), ['str'])),
                                        ('show_asic_9', (YLeaf(YType.boolean, 'show_asic_9'), ['bool'])),
                                        ('asic_9_bitmap', (YLeaf(YType.str, 'asic_9_bitmap'), ['str'])),
                                        ('show_asic_10', (YLeaf(YType.boolean, 'show_asic_10'), ['bool'])),
                                        ('asic_10_bitmap', (YLeaf(YType.str, 'asic_10_bitmap'), ['str'])),
                                        ('show_asic_11', (YLeaf(YType.boolean, 'show_asic_11'), ['bool'])),
                                        ('asic_11_bitmap', (YLeaf(YType.str, 'asic_11_bitmap'), ['str'])),
                                        ('show_asic_12', (YLeaf(YType.boolean, 'show_asic_12'), ['bool'])),
                                        ('asic_12_bitmap', (YLeaf(YType.str, 'asic_12_bitmap'), ['str'])),
                                        ('show_asic_13', (YLeaf(YType.boolean, 'show_asic_13'), ['bool'])),
                                        ('asic_13_bitmap', (YLeaf(YType.str, 'asic_13_bitmap'), ['str'])),
                                        ('show_asic_14', (YLeaf(YType.boolean, 'show_asic_14'), ['bool'])),
                                        ('asic_14_bitmap', (YLeaf(YType.str, 'asic_14_bitmap'), ['str'])),
                                        ('show_asic_15', (YLeaf(YType.boolean, 'show_asic_15'), ['bool'])),
                                        ('asic_15_bitmap', (YLeaf(YType.str, 'asic_15_bitmap'), ['str'])),
                                        ('show_asic_16', (YLeaf(YType.boolean, 'show_asic_16'), ['bool'])),
                                        ('asic_16_bitmap', (YLeaf(YType.str, 'asic_16_bitmap'), ['str'])),
                                        ('show_asic_17', (YLeaf(YType.boolean, 'show_asic_17'), ['bool'])),
                                        ('asic_17_bitmap', (YLeaf(YType.str, 'asic_17_bitmap'), ['str'])),
                                        ('show_asic_18', (YLeaf(YType.boolean, 'show_asic_18'), ['bool'])),
                                        ('asic_18_bitmap', (YLeaf(YType.str, 'asic_18_bitmap'), ['str'])),
                                        ('show_asic_19', (YLeaf(YType.boolean, 'show_asic_19'), ['bool'])),
                                        ('asic_19_bitmap', (YLeaf(YType.str, 'asic_19_bitmap'), ['str'])),
                                        ('show_asic_20', (YLeaf(YType.boolean, 'show_asic_20'), ['bool'])),
                                        ('asic_20_bitmap', (YLeaf(YType.str, 'asic_20_bitmap'), ['str'])),
                                        ('show_asic_21', (YLeaf(YType.boolean, 'show_asic_21'), ['bool'])),
                                        ('asic_21_bitmap', (YLeaf(YType.str, 'asic_21_bitmap'), ['str'])),
                                        ('show_asic_22', (YLeaf(YType.boolean, 'show_asic_22'), ['bool'])),
                                        ('asic_22_bitmap', (YLeaf(YType.str, 'asic_22_bitmap'), ['str'])),
                                        ('show_asic_23', (YLeaf(YType.boolean, 'show_asic_23'), ['bool'])),
                                        ('asic_23_bitmap', (YLeaf(YType.str, 'asic_23_bitmap'), ['str'])),
                                        ('show_asic_24', (YLeaf(YType.boolean, 'show_asic_24'), ['bool'])),
                                        ('asic_24_bitmap', (YLeaf(YType.str, 'asic_24_bitmap'), ['str'])),
                                        ('show_asic_25', (YLeaf(YType.boolean, 'show_asic_25'), ['bool'])),
                                        ('asic_25_bitmap', (YLeaf(YType.str, 'asic_25_bitmap'), ['str'])),
                                        ('show_asic_26', (YLeaf(YType.boolean, 'show_asic_26'), ['bool'])),
                                        ('asic_26_bitmap', (YLeaf(YType.str, 'asic_26_bitmap'), ['str'])),
                                        ('show_asic_27', (YLeaf(YType.boolean, 'show_asic_27'), ['bool'])),
                                        ('asic_27_bitmap', (YLeaf(YType.str, 'asic_27_bitmap'), ['str'])),
                                        ('show_asic_28', (YLeaf(YType.boolean, 'show_asic_28'), ['bool'])),
                                        ('asic_28_bitmap', (YLeaf(YType.str, 'asic_28_bitmap'), ['str'])),
                                        ('show_asic_29', (YLeaf(YType.boolean, 'show_asic_29'), ['bool'])),
                                        ('asic_29_bitmap', (YLeaf(YType.str, 'asic_29_bitmap'), ['str'])),
                                        ('show_asic_30', (YLeaf(YType.boolean, 'show_asic_30'), ['bool'])),
                                        ('asic_30_bitmap', (YLeaf(YType.str, 'asic_30_bitmap'), ['str'])),
                                        ('show_asic_31', (YLeaf(YType.boolean, 'show_asic_31'), ['bool'])),
                                        ('asic_31_bitmap', (YLeaf(YType.str, 'asic_31_bitmap'), ['str'])),
                                        ('show_asic_32', (YLeaf(YType.boolean, 'show_asic_32'), ['bool'])),
                                        ('asic_32_bitmap', (YLeaf(YType.str, 'asic_32_bitmap'), ['str'])),
                                        ('show_asic_33', (YLeaf(YType.boolean, 'show_asic_33'), ['bool'])),
                                        ('asic_33_bitmap', (YLeaf(YType.str, 'asic_33_bitmap'), ['str'])),
                                        ('show_asic_34', (YLeaf(YType.boolean, 'show_asic_34'), ['bool'])),
                                        ('asic_34_bitmap', (YLeaf(YType.str, 'asic_34_bitmap'), ['str'])),
                                        ('show_asic_35', (YLeaf(YType.boolean, 'show_asic_35'), ['bool'])),
                                        ('asic_35_bitmap', (YLeaf(YType.str, 'asic_35_bitmap'), ['str'])),
                                    ])
                                    self.client_idx = None
                                    self.show_asic_0 = None
                                    self.asic_0_bitmap = None
                                    self.show_asic_1 = None
                                    self.asic_1_bitmap = None
                                    self.show_asic_2 = None
                                    self.asic_2_bitmap = None
                                    self.show_asic_3 = None
                                    self.asic_3_bitmap = None
                                    self.show_asic_4 = None
                                    self.asic_4_bitmap = None
                                    self.show_asic_5 = None
                                    self.asic_5_bitmap = None
                                    self.show_asic_6 = None
                                    self.asic_6_bitmap = None
                                    self.show_asic_7 = None
                                    self.asic_7_bitmap = None
                                    self.show_asic_8 = None
                                    self.asic_8_bitmap = None
                                    self.show_asic_9 = None
                                    self.asic_9_bitmap = None
                                    self.show_asic_10 = None
                                    self.asic_10_bitmap = None
                                    self.show_asic_11 = None
                                    self.asic_11_bitmap = None
                                    self.show_asic_12 = None
                                    self.asic_12_bitmap = None
                                    self.show_asic_13 = None
                                    self.asic_13_bitmap = None
                                    self.show_asic_14 = None
                                    self.asic_14_bitmap = None
                                    self.show_asic_15 = None
                                    self.asic_15_bitmap = None
                                    self.show_asic_16 = None
                                    self.asic_16_bitmap = None
                                    self.show_asic_17 = None
                                    self.asic_17_bitmap = None
                                    self.show_asic_18 = None
                                    self.asic_18_bitmap = None
                                    self.show_asic_19 = None
                                    self.asic_19_bitmap = None
                                    self.show_asic_20 = None
                                    self.asic_20_bitmap = None
                                    self.show_asic_21 = None
                                    self.asic_21_bitmap = None
                                    self.show_asic_22 = None
                                    self.asic_22_bitmap = None
                                    self.show_asic_23 = None
                                    self.asic_23_bitmap = None
                                    self.show_asic_24 = None
                                    self.asic_24_bitmap = None
                                    self.show_asic_25 = None
                                    self.asic_25_bitmap = None
                                    self.show_asic_26 = None
                                    self.asic_26_bitmap = None
                                    self.show_asic_27 = None
                                    self.asic_27_bitmap = None
                                    self.show_asic_28 = None
                                    self.asic_28_bitmap = None
                                    self.show_asic_29 = None
                                    self.asic_29_bitmap = None
                                    self.show_asic_30 = None
                                    self.asic_30_bitmap = None
                                    self.show_asic_31 = None
                                    self.asic_31_bitmap = None
                                    self.show_asic_32 = None
                                    self.asic_32_bitmap = None
                                    self.show_asic_33 = None
                                    self.asic_33_bitmap = None
                                    self.show_asic_34 = None
                                    self.asic_34_bitmap = None
                                    self.show_asic_35 = None
                                    self.asic_35_bitmap = None
                                    self._segment_path = lambda: "clients" + "[client_idx='" + str(self.client_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Fgid.Information.Id.Drivers.Clients, [u'client_idx', u'show_asic_0', u'asic_0_bitmap', u'show_asic_1', u'asic_1_bitmap', u'show_asic_2', u'asic_2_bitmap', u'show_asic_3', u'asic_3_bitmap', u'show_asic_4', u'asic_4_bitmap', u'show_asic_5', u'asic_5_bitmap', u'show_asic_6', u'asic_6_bitmap', u'show_asic_7', u'asic_7_bitmap', u'show_asic_8', u'asic_8_bitmap', u'show_asic_9', u'asic_9_bitmap', u'show_asic_10', u'asic_10_bitmap', u'show_asic_11', u'asic_11_bitmap', u'show_asic_12', u'asic_12_bitmap', u'show_asic_13', u'asic_13_bitmap', u'show_asic_14', u'asic_14_bitmap', u'show_asic_15', u'asic_15_bitmap', u'show_asic_16', u'asic_16_bitmap', u'show_asic_17', u'asic_17_bitmap', u'show_asic_18', u'asic_18_bitmap', u'show_asic_19', u'asic_19_bitmap', u'show_asic_20', u'asic_20_bitmap', u'show_asic_21', u'asic_21_bitmap', u'show_asic_22', u'asic_22_bitmap', u'show_asic_23', u'asic_23_bitmap', u'show_asic_24', u'asic_24_bitmap', u'show_asic_25', u'asic_25_bitmap', u'show_asic_26', u'asic_26_bitmap', u'show_asic_27', u'asic_27_bitmap', u'show_asic_28', u'asic_28_bitmap', u'show_asic_29', u'asic_29_bitmap', u'show_asic_30', u'asic_30_bitmap', u'show_asic_31', u'asic_31_bitmap', u'show_asic_32', u'asic_32_bitmap', u'show_asic_33', u'asic_33_bitmap', u'show_asic_34', u'asic_34_bitmap', u'show_asic_35', u'asic_35_bitmap'], name, value)






                class Resource(Entity):
                    """
                    
                    
                    .. attribute:: sdr
                    
                    	
                    	**type**\: list of  		 :py:class:`Sdr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Resource.Sdr>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Fgid.Resource, self).__init__()

                        self.yang_name = "resource"
                        self.yang_parent_name = "fgid"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("sdr", ("sdr", Controller.Fabric.Oper.Fgid.Resource.Sdr))])
                        self._leafs = OrderedDict()

                        self.sdr = YList(self)
                        self._segment_path = lambda: "resource"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Fgid.Resource, [], name, value)


                    class Sdr(Entity):
                        """
                        
                        
                        .. attribute:: sdr_name  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: description
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        	**default value**\: Secure Domain Router name.
                        
                        .. attribute:: application
                        
                        	
                        	**type**\: list of  		 :py:class:`Application <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Resource.Sdr.Application>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.Resource.Sdr, self).__init__()

                            self.yang_name = "sdr"
                            self.yang_parent_name = "resource"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['sdr_name']
                            self._child_classes = OrderedDict([("application", ("application", Controller.Fabric.Oper.Fgid.Resource.Sdr.Application))])
                            self._leafs = OrderedDict([
                                ('sdr_name', (YLeaf(YType.str, 'sdr_name'), ['str'])),
                                ('description', (YLeaf(YType.str, 'description'), ['str'])),
                            ])
                            self.sdr_name = None
                            self.description = None

                            self.application = YList(self)
                            self._segment_path = lambda: "sdr" + "[sdr_name='" + str(self.sdr_name) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/resource/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.Resource.Sdr, [u'sdr_name', u'description'], name, value)


                        class Application(Entity):
                            """
                            
                            
                            .. attribute:: app_name  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: description
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            	**default value**\: application.
                            
                            .. attribute:: ids_range
                            
                            	
                            	**type**\: list of  		 :py:class:`IdsRange <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Resource.Sdr.Application, self).__init__()

                                self.yang_name = "application"
                                self.yang_parent_name = "sdr"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['app_name']
                                self._child_classes = OrderedDict([("ids_range", ("ids_range", Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange))])
                                self._leafs = OrderedDict([
                                    ('app_name', (YLeaf(YType.str, 'app_name'), ['str'])),
                                    ('description', (YLeaf(YType.str, 'description'), ['str'])),
                                ])
                                self.app_name = None
                                self.description = None

                                self.ids_range = YList(self)
                                self._segment_path = lambda: "application" + "[app_name='" + str(self.app_name) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Resource.Sdr.Application, [u'app_name', u'description'], name, value)


                            class IdsRange(Entity):
                                """
                                
                                
                                .. attribute:: id  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..128000
                                
                                	**config**\: False
                                
                                .. attribute:: elements  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..128000
                                
                                	**config**\: False
                                
                                .. attribute:: fgid_ids
                                
                                	
                                	**type**\: list of  		 :py:class:`FgidIds <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange.FgidIds>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange, self).__init__()

                                    self.yang_name = "ids_range"
                                    self.yang_parent_name = "application"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['id','elements']
                                    self._child_classes = OrderedDict([("fgid_ids", ("fgid_ids", Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange.FgidIds))])
                                    self._leafs = OrderedDict([
                                        ('id', (YLeaf(YType.int32, 'id'), ['int'])),
                                        ('elements', (YLeaf(YType.int32, 'elements'), ['int'])),
                                    ])
                                    self.id = None
                                    self.elements = None

                                    self.fgid_ids = YList(self)
                                    self._segment_path = lambda: "ids_range" + "[id='" + str(self.id) + "']" + "[elements='" + str(self.elements) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange, [u'id', u'elements'], name, value)


                                class FgidIds(Entity):
                                    """
                                    
                                    
                                    .. attribute:: fgid_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: line_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sdr_name_h
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: app_name_h
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange.FgidIds, self).__init__()

                                        self.yang_name = "fgid_ids"
                                        self.yang_parent_name = "ids_range"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['fgid_id','line_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('fgid_id', (YLeaf(YType.str, 'fgid_id'), ['str'])),
                                            ('line_idx', (YLeaf(YType.int32, 'line_idx'), ['int'])),
                                            ('sdr_name_h', (YLeaf(YType.str, 'sdr_name_h'), ['str'])),
                                            ('app_name_h', (YLeaf(YType.str, 'app_name_h'), ['str'])),
                                        ])
                                        self.fgid_id = None
                                        self.line_idx = None
                                        self.sdr_name_h = None
                                        self.app_name_h = None
                                        self._segment_path = lambda: "fgid_ids" + "[fgid_id='" + str(self.fgid_id) + "']" + "[line_idx='" + str(self.line_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Fgid.Resource.Sdr.Application.IdsRange.FgidIds, [u'fgid_id', u'line_idx', u'sdr_name_h', u'app_name_h'], name, value)







                class Statistics(Entity):
                    """
                    
                    
                    .. attribute:: all
                    
                    	
                    	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.All>`
                    
                    	**config**\: False
                    
                    .. attribute:: sdr
                    
                    	
                    	**type**\:  :py:class:`Sdr <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.Sdr>`
                    
                    	**config**\: False
                    
                    .. attribute:: pool
                    
                    	
                    	**type**\:  :py:class:`Pool <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.Pool>`
                    
                    	**config**\: False
                    
                    .. attribute:: system
                    
                    	
                    	**type**\:  :py:class:`System <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.System>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Fgid.Statistics, self).__init__()

                        self.yang_name = "statistics"
                        self.yang_parent_name = "fgid"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("all", ("all", Controller.Fabric.Oper.Fgid.Statistics.All)), ("sdr", ("sdr", Controller.Fabric.Oper.Fgid.Statistics.Sdr)), ("pool", ("pool", Controller.Fabric.Oper.Fgid.Statistics.Pool)), ("system", ("system", Controller.Fabric.Oper.Fgid.Statistics.System))])
                        self._leafs = OrderedDict()

                        self.all = Controller.Fabric.Oper.Fgid.Statistics.All()
                        self.all.parent = self
                        self._children_name_map["all"] = "all"

                        self.sdr = Controller.Fabric.Oper.Fgid.Statistics.Sdr()
                        self.sdr.parent = self
                        self._children_name_map["sdr"] = "sdr"

                        self.pool = Controller.Fabric.Oper.Fgid.Statistics.Pool()
                        self.pool.parent = self
                        self._children_name_map["pool"] = "pool"

                        self.system = Controller.Fabric.Oper.Fgid.Statistics.System()
                        self.system.parent = self
                        self._children_name_map["system"] = "system"
                        self._segment_path = lambda: "statistics"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics, [], name, value)


                    class All(Entity):
                        """
                        
                        
                        .. attribute:: stats_list
                        
                        	
                        	**type**\: list of  		 :py:class:`StatsList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.All.StatsList>`
                        
                        	**config**\: False
                        
                        .. attribute:: sdr_list
                        
                        	
                        	**type**\: list of  		 :py:class:`SdrList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.All.SdrList>`
                        
                        	**config**\: False
                        
                        .. attribute:: pool_list
                        
                        	
                        	**type**\: list of  		 :py:class:`PoolList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.All.PoolList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.Statistics.All, self).__init__()

                            self.yang_name = "all"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("stats_list", ("stats_list", Controller.Fabric.Oper.Fgid.Statistics.All.StatsList)), ("sdr_list", ("sdr_list", Controller.Fabric.Oper.Fgid.Statistics.All.SdrList)), ("pool_list", ("pool_list", Controller.Fabric.Oper.Fgid.Statistics.All.PoolList))])
                            self._leafs = OrderedDict()

                            self.stats_list = YList(self)
                            self.sdr_list = YList(self)
                            self.pool_list = YList(self)
                            self._segment_path = lambda: "all"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.All, [], name, value)


                        class StatsList(Entity):
                            """
                            
                            
                            .. attribute:: system_stats  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: system_total_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: system_inuse_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: system_hwm_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Statistics.All.StatsList, self).__init__()

                                self.yang_name = "stats_list"
                                self.yang_parent_name = "all"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['system_stats']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('system_stats', (YLeaf(YType.int32, 'system_stats'), ['int'])),
                                    ('system_total_fgids', (YLeaf(YType.uint32, 'system_total_fgids'), ['int'])),
                                    ('system_inuse_fgids', (YLeaf(YType.uint32, 'system_inuse_fgids'), ['int'])),
                                    ('system_hwm_fgids', (YLeaf(YType.uint32, 'system_hwm_fgids'), ['int'])),
                                ])
                                self.system_stats = None
                                self.system_total_fgids = None
                                self.system_inuse_fgids = None
                                self.system_hwm_fgids = None
                                self._segment_path = lambda: "stats_list" + "[system_stats='" + str(self.system_stats) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/all/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.All.StatsList, [u'system_stats', u'system_total_fgids', u'system_inuse_fgids', u'system_hwm_fgids'], name, value)



                        class SdrList(Entity):
                            """
                            
                            
                            .. attribute:: sdr_name  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: description
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            	**default value**\: Secure Domain Router name.
                            
                            .. attribute:: sdr_total_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: sdr_inuse_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: sdr_hwm_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: application
                            
                            	
                            	**type**\: list of  		 :py:class:`Application <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.All.SdrList.Application>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Statistics.All.SdrList, self).__init__()

                                self.yang_name = "sdr_list"
                                self.yang_parent_name = "all"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['sdr_name']
                                self._child_classes = OrderedDict([("application", ("application", Controller.Fabric.Oper.Fgid.Statistics.All.SdrList.Application))])
                                self._leafs = OrderedDict([
                                    ('sdr_name', (YLeaf(YType.str, 'sdr_name'), ['str'])),
                                    ('description', (YLeaf(YType.str, 'description'), ['str'])),
                                    ('sdr_total_fgids', (YLeaf(YType.uint32, 'sdr_total_fgids'), ['int'])),
                                    ('sdr_inuse_fgids', (YLeaf(YType.uint32, 'sdr_inuse_fgids'), ['int'])),
                                    ('sdr_hwm_fgids', (YLeaf(YType.uint32, 'sdr_hwm_fgids'), ['int'])),
                                ])
                                self.sdr_name = None
                                self.description = None
                                self.sdr_total_fgids = None
                                self.sdr_inuse_fgids = None
                                self.sdr_hwm_fgids = None

                                self.application = YList(self)
                                self._segment_path = lambda: "sdr_list" + "[sdr_name='" + str(self.sdr_name) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/all/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.All.SdrList, [u'sdr_name', u'description', u'sdr_total_fgids', u'sdr_inuse_fgids', u'sdr_hwm_fgids'], name, value)


                            class Application(Entity):
                                """
                                
                                
                                .. attribute:: app_name  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: description
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                	**default value**\: application.
                                
                                .. attribute:: app_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: pool_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: inuse_fgids
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: hwm_fgids
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Fgid.Statistics.All.SdrList.Application, self).__init__()

                                    self.yang_name = "application"
                                    self.yang_parent_name = "sdr_list"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['app_name']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('app_name', (YLeaf(YType.str, 'app_name'), ['str'])),
                                        ('description', (YLeaf(YType.str, 'description'), ['str'])),
                                        ('app_id', (YLeaf(YType.uint32, 'app_id'), ['int'])),
                                        ('pool_id', (YLeaf(YType.uint32, 'pool_id'), ['int'])),
                                        ('inuse_fgids', (YLeaf(YType.uint32, 'inuse_fgids'), ['int'])),
                                        ('hwm_fgids', (YLeaf(YType.uint32, 'hwm_fgids'), ['int'])),
                                    ])
                                    self.app_name = None
                                    self.description = None
                                    self.app_id = None
                                    self.pool_id = None
                                    self.inuse_fgids = None
                                    self.hwm_fgids = None
                                    self._segment_path = lambda: "application" + "[app_name='" + str(self.app_name) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.All.SdrList.Application, [u'app_name', u'description', u'app_id', u'pool_id', u'inuse_fgids', u'hwm_fgids'], name, value)




                        class PoolList(Entity):
                            """
                            
                            
                            .. attribute:: pool_id  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: pool_name
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: pool_type
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: start_fgid
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: total_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: current_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: hwm_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Statistics.All.PoolList, self).__init__()

                                self.yang_name = "pool_list"
                                self.yang_parent_name = "all"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['pool_id']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('pool_id', (YLeaf(YType.uint32, 'pool_id'), ['int'])),
                                    ('pool_name', (YLeaf(YType.str, 'pool_name'), ['str'])),
                                    ('pool_type', (YLeaf(YType.str, 'pool_type'), ['str'])),
                                    ('start_fgid', (YLeaf(YType.str, 'start_fgid'), ['str'])),
                                    ('total_fgids', (YLeaf(YType.uint32, 'total_fgids'), ['int'])),
                                    ('current_fgids', (YLeaf(YType.uint32, 'current_fgids'), ['int'])),
                                    ('hwm_fgids', (YLeaf(YType.uint32, 'hwm_fgids'), ['int'])),
                                ])
                                self.pool_id = None
                                self.pool_name = None
                                self.pool_type = None
                                self.start_fgid = None
                                self.total_fgids = None
                                self.current_fgids = None
                                self.hwm_fgids = None
                                self._segment_path = lambda: "pool_list" + "[pool_id='" + str(self.pool_id) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/all/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.All.PoolList, [u'pool_id', u'pool_name', u'pool_type', u'start_fgid', u'total_fgids', u'current_fgids', u'hwm_fgids'], name, value)




                    class Sdr(Entity):
                        """
                        
                        
                        .. attribute:: sdr_list
                        
                        	
                        	**type**\: list of  		 :py:class:`SdrList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.Statistics.Sdr, self).__init__()

                            self.yang_name = "sdr"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("sdr_list", ("sdr_list", Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList))])
                            self._leafs = OrderedDict()

                            self.sdr_list = YList(self)
                            self._segment_path = lambda: "sdr"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.Sdr, [], name, value)


                        class SdrList(Entity):
                            """
                            
                            
                            .. attribute:: sdr_name  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: description
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            	**default value**\: Secure Domain Router name.
                            
                            .. attribute:: sdr_total_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: sdr_inuse_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: sdr_hwm_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: application
                            
                            	
                            	**type**\: list of  		 :py:class:`Application <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList.Application>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList, self).__init__()

                                self.yang_name = "sdr_list"
                                self.yang_parent_name = "sdr"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['sdr_name']
                                self._child_classes = OrderedDict([("application", ("application", Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList.Application))])
                                self._leafs = OrderedDict([
                                    ('sdr_name', (YLeaf(YType.str, 'sdr_name'), ['str'])),
                                    ('description', (YLeaf(YType.str, 'description'), ['str'])),
                                    ('sdr_total_fgids', (YLeaf(YType.uint32, 'sdr_total_fgids'), ['int'])),
                                    ('sdr_inuse_fgids', (YLeaf(YType.uint32, 'sdr_inuse_fgids'), ['int'])),
                                    ('sdr_hwm_fgids', (YLeaf(YType.uint32, 'sdr_hwm_fgids'), ['int'])),
                                ])
                                self.sdr_name = None
                                self.description = None
                                self.sdr_total_fgids = None
                                self.sdr_inuse_fgids = None
                                self.sdr_hwm_fgids = None

                                self.application = YList(self)
                                self._segment_path = lambda: "sdr_list" + "[sdr_name='" + str(self.sdr_name) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/sdr/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList, [u'sdr_name', u'description', u'sdr_total_fgids', u'sdr_inuse_fgids', u'sdr_hwm_fgids'], name, value)


                            class Application(Entity):
                                """
                                
                                
                                .. attribute:: app_name  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: description
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                	**default value**\: application.
                                
                                .. attribute:: app_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: pool_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: inuse_fgids
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: hwm_fgids
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList.Application, self).__init__()

                                    self.yang_name = "application"
                                    self.yang_parent_name = "sdr_list"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['app_name']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('app_name', (YLeaf(YType.str, 'app_name'), ['str'])),
                                        ('description', (YLeaf(YType.str, 'description'), ['str'])),
                                        ('app_id', (YLeaf(YType.uint32, 'app_id'), ['int'])),
                                        ('pool_id', (YLeaf(YType.uint32, 'pool_id'), ['int'])),
                                        ('inuse_fgids', (YLeaf(YType.uint32, 'inuse_fgids'), ['int'])),
                                        ('hwm_fgids', (YLeaf(YType.uint32, 'hwm_fgids'), ['int'])),
                                    ])
                                    self.app_name = None
                                    self.description = None
                                    self.app_id = None
                                    self.pool_id = None
                                    self.inuse_fgids = None
                                    self.hwm_fgids = None
                                    self._segment_path = lambda: "application" + "[app_name='" + str(self.app_name) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.Sdr.SdrList.Application, [u'app_name', u'description', u'app_id', u'pool_id', u'inuse_fgids', u'hwm_fgids'], name, value)





                    class Pool(Entity):
                        """
                        
                        
                        .. attribute:: pool_list
                        
                        	
                        	**type**\: list of  		 :py:class:`PoolList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.Pool.PoolList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.Statistics.Pool, self).__init__()

                            self.yang_name = "pool"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("pool_list", ("pool_list", Controller.Fabric.Oper.Fgid.Statistics.Pool.PoolList))])
                            self._leafs = OrderedDict()

                            self.pool_list = YList(self)
                            self._segment_path = lambda: "pool"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.Pool, [], name, value)


                        class PoolList(Entity):
                            """
                            
                            
                            .. attribute:: pool_id  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: pool_name
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: pool_type
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: start_fgid
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: total_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: current_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: hwm_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Statistics.Pool.PoolList, self).__init__()

                                self.yang_name = "pool_list"
                                self.yang_parent_name = "pool"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['pool_id']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('pool_id', (YLeaf(YType.uint32, 'pool_id'), ['int'])),
                                    ('pool_name', (YLeaf(YType.str, 'pool_name'), ['str'])),
                                    ('pool_type', (YLeaf(YType.str, 'pool_type'), ['str'])),
                                    ('start_fgid', (YLeaf(YType.str, 'start_fgid'), ['str'])),
                                    ('total_fgids', (YLeaf(YType.uint32, 'total_fgids'), ['int'])),
                                    ('current_fgids', (YLeaf(YType.uint32, 'current_fgids'), ['int'])),
                                    ('hwm_fgids', (YLeaf(YType.uint32, 'hwm_fgids'), ['int'])),
                                ])
                                self.pool_id = None
                                self.pool_name = None
                                self.pool_type = None
                                self.start_fgid = None
                                self.total_fgids = None
                                self.current_fgids = None
                                self.hwm_fgids = None
                                self._segment_path = lambda: "pool_list" + "[pool_id='" + str(self.pool_id) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/pool/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.Pool.PoolList, [u'pool_id', u'pool_name', u'pool_type', u'start_fgid', u'total_fgids', u'current_fgids', u'hwm_fgids'], name, value)




                    class System(Entity):
                        """
                        
                        
                        .. attribute:: stats_list
                        
                        	
                        	**type**\: list of  		 :py:class:`StatsList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.Statistics.System.StatsList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.Statistics.System, self).__init__()

                            self.yang_name = "system"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("stats_list", ("stats_list", Controller.Fabric.Oper.Fgid.Statistics.System.StatsList))])
                            self._leafs = OrderedDict()

                            self.stats_list = YList(self)
                            self._segment_path = lambda: "system"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.System, [], name, value)


                        class StatsList(Entity):
                            """
                            
                            
                            .. attribute:: system_stats  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: system_total_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: system_inuse_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: system_hwm_fgids
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.Statistics.System.StatsList, self).__init__()

                                self.yang_name = "stats_list"
                                self.yang_parent_name = "system"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['system_stats']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('system_stats', (YLeaf(YType.int32, 'system_stats'), ['int'])),
                                    ('system_total_fgids', (YLeaf(YType.uint32, 'system_total_fgids'), ['int'])),
                                    ('system_inuse_fgids', (YLeaf(YType.uint32, 'system_inuse_fgids'), ['int'])),
                                    ('system_hwm_fgids', (YLeaf(YType.uint32, 'system_hwm_fgids'), ['int'])),
                                ])
                                self.system_stats = None
                                self.system_total_fgids = None
                                self.system_inuse_fgids = None
                                self.system_hwm_fgids = None
                                self._segment_path = lambda: "stats_list" + "[system_stats='" + str(self.system_stats) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/statistics/system/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.Statistics.System.StatsList, [u'system_stats', u'system_total_fgids', u'system_inuse_fgids', u'system_hwm_fgids'], name, value)





                class FgidMgr(Entity):
                    """
                    
                    
                    .. attribute:: trace
                    
                    	show traceable processes
                    	**type**\: list of  		 :py:class:`Trace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.FgidMgr.Trace>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Fgid.FgidMgr, self).__init__()

                        self.yang_name = "fgid_mgr"
                        self.yang_parent_name = "fgid"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("trace", ("trace", Controller.Fabric.Oper.Fgid.FgidMgr.Trace))])
                        self._leafs = OrderedDict()

                        self.trace = YList(self)
                        self._segment_path = lambda: "fgid_mgr"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Fgid.FgidMgr, [], name, value)


                    class Trace(Entity):
                        """
                        show traceable processes
                        
                        .. attribute:: buffer  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.FgidMgr.Trace, self).__init__()

                            self.yang_name = "trace"
                            self.yang_parent_name = "fgid_mgr"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['buffer']
                            self._child_classes = OrderedDict([("location", ("location", Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location))])
                            self._leafs = OrderedDict([
                                ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                            ])
                            self.buffer = None

                            self.location = YList(self)
                            self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/fgid_mgr/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.FgidMgr.Trace, [u'buffer'], name, value)


                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: location_name  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: all_options
                            
                            	
                            	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "trace"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['location_name']
                                self._child_classes = OrderedDict([("all-options", ("all_options", Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions))])
                                self._leafs = OrderedDict([
                                    ('location_name', (YLeaf(YType.str, 'location_name'), ['str'])),
                                ])
                                self.location_name = None

                                self.all_options = YList(self)
                                self._segment_path = lambda: "location" + "[location_name='" + str(self.location_name) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location, [u'location_name'], name, value)


                            class AllOptions(Entity):
                                """
                                
                                
                                .. attribute:: option  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: trace_blocks
                                
                                	
                                	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions.TraceBlocks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions, self).__init__()

                                    self.yang_name = "all-options"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['option']
                                    self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions.TraceBlocks))])
                                    self._leafs = OrderedDict([
                                        ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                    ])
                                    self.option = None

                                    self.trace_blocks = YList(self)
                                    self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions, [u'option'], name, value)


                                class TraceBlocks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data
                                    
                                    	Trace output block
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions.TraceBlocks, self).__init__()

                                        self.yang_name = "trace-blocks"
                                        self.yang_parent_name = "all-options"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                        ])
                                        self.data = None
                                        self._segment_path = lambda: "trace-blocks"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Fgid.FgidMgr.Trace.Location.AllOptions.TraceBlocks, [u'data'], name, value)







                class ProgramError(Entity):
                    """
                    
                    
                    .. attribute:: start  (key)
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..128000
                    
                    	**config**\: False
                    
                    .. attribute:: end  (key)
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..128000
                    
                    	**config**\: False
                    
                    .. attribute:: rack
                    
                    	
                    	**type**\: list of  		 :py:class:`Rack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Fgid.ProgramError.Rack>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Fgid.ProgramError, self).__init__()

                        self.yang_name = "program_error"
                        self.yang_parent_name = "fgid"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['start','end']
                        self._child_classes = OrderedDict([("rack", ("rack", Controller.Fabric.Oper.Fgid.ProgramError.Rack))])
                        self._leafs = OrderedDict([
                            ('start', (YLeaf(YType.int32, 'start'), ['int'])),
                            ('end', (YLeaf(YType.int32, 'end'), ['int'])),
                        ])
                        self.start = None
                        self.end = None

                        self.rack = YList(self)
                        self._segment_path = lambda: "program_error" + "[start='" + str(self.start) + "']" + "[end='" + str(self.end) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fgid/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Fgid.ProgramError, [u'start', u'end'], name, value)


                    class Rack(Entity):
                        """
                        
                        
                        .. attribute:: rack_id  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: rack_id_str
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: fgids_in_error
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: found_fgids_in_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: total_error_fgids
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: incorrect_fgids_range
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: cmd_not_supported
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Fgid.ProgramError.Rack, self).__init__()

                            self.yang_name = "rack"
                            self.yang_parent_name = "program_error"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['rack_id']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('rack_id', (YLeaf(YType.int32, 'rack_id'), ['int'])),
                                ('rack_id_str', (YLeaf(YType.str, 'rack_id_str'), ['str'])),
                                ('fgids_in_error', (YLeaf(YType.str, 'fgids_in_error'), ['str'])),
                                ('found_fgids_in_error', (YLeaf(YType.boolean, 'found_fgids_in_error'), ['bool'])),
                                ('total_error_fgids', (YLeaf(YType.int32, 'total_error_fgids'), ['int'])),
                                ('incorrect_fgids_range', (YLeaf(YType.boolean, 'incorrect_fgids_range'), ['bool'])),
                                ('cmd_not_supported', (YLeaf(YType.boolean, 'cmd_not_supported'), ['bool'])),
                            ])
                            self.rack_id = None
                            self.rack_id_str = None
                            self.fgids_in_error = None
                            self.found_fgids_in_error = None
                            self.total_error_fgids = None
                            self.incorrect_fgids_range = None
                            self.cmd_not_supported = None
                            self._segment_path = lambda: "rack" + "[rack_id='" + str(self.rack_id) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Fgid.ProgramError.Rack, [u'rack_id', u'rack_id_str', u'fgids_in_error', u'found_fgids_in_error', u'total_error_fgids', u'incorrect_fgids_range', u'cmd_not_supported'], name, value)





            class FsdbaggActive(Entity):
                """
                
                
                .. attribute:: plane
                
                	
                	**type**\: list of  		 :py:class:`Plane <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Plane>`
                
                	**config**\: False
                
                .. attribute:: bundle
                
                	
                	**type**\:  :py:class:`Bundle <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle>`
                
                	**config**\: False
                
                .. attribute:: statistics
                
                	
                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Statistics>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FsdbaggActive, self).__init__()

                    self.yang_name = "fsdbagg_active"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("plane", ("plane", Controller.Fabric.Oper.FsdbaggActive.Plane)), ("bundle", ("bundle", Controller.Fabric.Oper.FsdbaggActive.Bundle)), ("statistics", ("statistics", Controller.Fabric.Oper.FsdbaggActive.Statistics))])
                    self._leafs = OrderedDict()

                    self.bundle = Controller.Fabric.Oper.FsdbaggActive.Bundle()
                    self.bundle.parent = self
                    self._children_name_map["bundle"] = "bundle"

                    self.statistics = Controller.Fabric.Oper.FsdbaggActive.Statistics()
                    self.statistics.parent = self
                    self._children_name_map["statistics"] = "statistics"

                    self.plane = YList(self)
                    self._segment_path = lambda: "fsdbagg_active"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive, [], name, value)


                class Plane(Entity):
                    """
                    
                    
                    .. attribute:: planeid  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** all\|[0\-5]
                    
                    	**config**\: False
                    
                    .. attribute:: admin_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_oper_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_oper_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: plane_mode
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_cnt_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_cnt_some_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_cnt_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_cnt_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_cnt_some_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_cnt_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: total_bundles
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: down_bundles
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: rx_data_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: tx_data_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: rx_ce_cells_is_overflow
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: rx_ce_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: rx_uce_cells_is_overflow
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: rx_uce_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: rx_pe_cells_is_overflow
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: rx_pe_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_lost_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_lost_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_ts
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_reason
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_req_ts
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_status
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: is_asic_internal_error
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: asic_internal_drops
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: asic_location_drops
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: ppu_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: asic_internal_error
                    
                    	
                    	**type**\: list of  		 :py:class:`AsicInternalError <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Plane.AsicInternalError>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbaggActive.Plane, self).__init__()

                        self.yang_name = "plane"
                        self.yang_parent_name = "fsdbagg_active"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['planeid']
                        self._child_classes = OrderedDict([("asic_internal_error", ("asic_internal_error", Controller.Fabric.Oper.FsdbaggActive.Plane.AsicInternalError))])
                        self._leafs = OrderedDict([
                            ('planeid', (YLeaf(YType.str, 'planeid'), ['str'])),
                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                            ('ucast_oper_state', (YLeaf(YType.str, 'ucast_oper_state'), ['str'])),
                            ('mcast_oper_state', (YLeaf(YType.str, 'mcast_oper_state'), ['str'])),
                            ('plane_mode', (YLeaf(YType.str, 'plane_mode'), ['str'])),
                            ('ucast_cnt_up', (YLeaf(YType.int32, 'ucast_cnt_up'), ['int'])),
                            ('ucast_cnt_some_up', (YLeaf(YType.int32, 'ucast_cnt_some_up'), ['int'])),
                            ('ucast_cnt_dn', (YLeaf(YType.int32, 'ucast_cnt_dn'), ['int'])),
                            ('mcast_cnt_up', (YLeaf(YType.int32, 'mcast_cnt_up'), ['int'])),
                            ('mcast_cnt_some_up', (YLeaf(YType.int32, 'mcast_cnt_some_up'), ['int'])),
                            ('mcast_cnt_dn', (YLeaf(YType.int32, 'mcast_cnt_dn'), ['int'])),
                            ('total_bundles', (YLeaf(YType.int32, 'total_bundles'), ['int'])),
                            ('down_bundles', (YLeaf(YType.int32, 'down_bundles'), ['int'])),
                            ('rx_data_cells', (YLeaf(YType.uint64, 'rx_data_cells'), ['int'])),
                            ('tx_data_cells', (YLeaf(YType.uint64, 'tx_data_cells'), ['int'])),
                            ('rx_ce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_ce_cells_is_overflow'), ['bool'])),
                            ('rx_ce_cells', (YLeaf(YType.uint64, 'rx_ce_cells'), ['int'])),
                            ('rx_uce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_uce_cells_is_overflow'), ['bool'])),
                            ('rx_uce_cells', (YLeaf(YType.uint64, 'rx_uce_cells'), ['int'])),
                            ('rx_pe_cells_is_overflow', (YLeaf(YType.boolean, 'rx_pe_cells_is_overflow'), ['bool'])),
                            ('rx_pe_cells', (YLeaf(YType.uint64, 'rx_pe_cells'), ['int'])),
                            ('ucast_lost_cells', (YLeaf(YType.uint32, 'ucast_lost_cells'), ['int'])),
                            ('mcast_lost_cells', (YLeaf(YType.uint32, 'mcast_lost_cells'), ['int'])),
                            ('last_clear_ts', (YLeaf(YType.str, 'last_clear_ts'), ['str'])),
                            ('last_clear_reason', (YLeaf(YType.str, 'last_clear_reason'), ['str'])),
                            ('last_clear_req_ts', (YLeaf(YType.str, 'last_clear_req_ts'), ['str'])),
                            ('last_clear_status', (YLeaf(YType.str, 'last_clear_status'), ['str'])),
                            ('is_asic_internal_error', (YLeaf(YType.boolean, 'is_asic_internal_error'), ['bool'])),
                            ('asic_internal_drops', (YLeaf(YType.uint64, 'asic_internal_drops'), ['int'])),
                            ('asic_location_drops', (YLeaf(YType.str, 'asic_location_drops'), ['str'])),
                            ('ppu_state', (YLeaf(YType.str, 'ppu_state'), ['str'])),
                        ])
                        self.planeid = None
                        self.admin_state = None
                        self.ucast_oper_state = None
                        self.mcast_oper_state = None
                        self.plane_mode = None
                        self.ucast_cnt_up = None
                        self.ucast_cnt_some_up = None
                        self.ucast_cnt_dn = None
                        self.mcast_cnt_up = None
                        self.mcast_cnt_some_up = None
                        self.mcast_cnt_dn = None
                        self.total_bundles = None
                        self.down_bundles = None
                        self.rx_data_cells = None
                        self.tx_data_cells = None
                        self.rx_ce_cells_is_overflow = None
                        self.rx_ce_cells = None
                        self.rx_uce_cells_is_overflow = None
                        self.rx_uce_cells = None
                        self.rx_pe_cells_is_overflow = None
                        self.rx_pe_cells = None
                        self.ucast_lost_cells = None
                        self.mcast_lost_cells = None
                        self.last_clear_ts = None
                        self.last_clear_reason = None
                        self.last_clear_req_ts = None
                        self.last_clear_status = None
                        self.is_asic_internal_error = None
                        self.asic_internal_drops = None
                        self.asic_location_drops = None
                        self.ppu_state = None

                        self.asic_internal_error = YList(self)
                        self._segment_path = lambda: "plane" + "[planeid='" + str(self.planeid) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Plane, [u'planeid', u'admin_state', u'ucast_oper_state', u'mcast_oper_state', u'plane_mode', u'ucast_cnt_up', u'ucast_cnt_some_up', u'ucast_cnt_dn', u'mcast_cnt_up', u'mcast_cnt_some_up', u'mcast_cnt_dn', u'total_bundles', u'down_bundles', u'rx_data_cells', u'tx_data_cells', u'rx_ce_cells_is_overflow', u'rx_ce_cells', u'rx_uce_cells_is_overflow', u'rx_uce_cells', u'rx_pe_cells_is_overflow', u'rx_pe_cells', u'ucast_lost_cells', u'mcast_lost_cells', u'last_clear_ts', u'last_clear_reason', u'last_clear_req_ts', u'last_clear_status', u'is_asic_internal_error', u'asic_internal_drops', u'asic_location_drops', u'ppu_state'], name, value)


                    class AsicInternalError(Entity):
                        """
                        
                        
                        .. attribute:: asic_number  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-9223372036854775808..9223372036854775807
                        
                        	**config**\: False
                        
                        .. attribute:: asic_location
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: link_crc_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_size_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_mis_align_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_code_group_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_no_sig_lock_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_no_sign_accept_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_token_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: error_token_count
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: last_asic_internal_error_ts
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggActive.Plane.AsicInternalError, self).__init__()

                            self.yang_name = "asic_internal_error"
                            self.yang_parent_name = "plane"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['asic_number']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('asic_number', (YLeaf(YType.int64, 'asic_number'), ['int'])),
                                ('asic_location', (YLeaf(YType.str, 'asic_location'), ['str'])),
                                ('link_crc_error', (YLeaf(YType.boolean, 'link_crc_error'), ['bool'])),
                                ('link_size_error', (YLeaf(YType.boolean, 'link_size_error'), ['bool'])),
                                ('link_mis_align_error', (YLeaf(YType.boolean, 'link_mis_align_error'), ['bool'])),
                                ('link_code_group_error', (YLeaf(YType.boolean, 'link_code_group_error'), ['bool'])),
                                ('link_no_sig_lock_error', (YLeaf(YType.boolean, 'link_no_sig_lock_error'), ['bool'])),
                                ('link_no_sign_accept_error', (YLeaf(YType.boolean, 'link_no_sign_accept_error'), ['bool'])),
                                ('link_token_error', (YLeaf(YType.boolean, 'link_token_error'), ['bool'])),
                                ('error_token_count', (YLeaf(YType.boolean, 'error_token_count'), ['bool'])),
                                ('last_asic_internal_error_ts', (YLeaf(YType.str, 'last_asic_internal_error_ts'), ['str'])),
                            ])
                            self.asic_number = None
                            self.asic_location = None
                            self.link_crc_error = None
                            self.link_size_error = None
                            self.link_mis_align_error = None
                            self.link_code_group_error = None
                            self.link_no_sig_lock_error = None
                            self.link_no_sign_accept_error = None
                            self.link_token_error = None
                            self.error_token_count = None
                            self.last_asic_internal_error_ts = None
                            self._segment_path = lambda: "asic_internal_error" + "[asic_number='" + str(self.asic_number) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Plane.AsicInternalError, [u'asic_number', u'asic_location', u'link_crc_error', u'link_size_error', u'link_mis_align_error', u'link_code_group_error', u'link_no_sig_lock_error', u'link_no_sign_accept_error', u'link_token_error', u'error_token_count', u'last_asic_internal_error_ts'], name, value)




                class Bundle(Entity):
                    """
                    
                    
                    .. attribute:: summary
                    
                    	
                    	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary>`
                    
                    	**config**\: False
                    
                    .. attribute:: all
                    
                    	
                    	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.All>`
                    
                    	**config**\: False
                    
                    .. attribute:: port
                    
                    	
                    	**type**\:  :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port>`
                    
                    	**config**\: False
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbaggActive.Bundle, self).__init__()

                        self.yang_name = "bundle"
                        self.yang_parent_name = "fsdbagg_active"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("summary", ("summary", Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary)), ("all", ("all", Controller.Fabric.Oper.FsdbaggActive.Bundle.All)), ("port", ("port", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port)), ("location", ("location", Controller.Fabric.Oper.FsdbaggActive.Bundle.Location))])
                        self._leafs = OrderedDict()

                        self.summary = Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary()
                        self.summary.parent = self
                        self._children_name_map["summary"] = "summary"

                        self.all = Controller.Fabric.Oper.FsdbaggActive.Bundle.All()
                        self.all.parent = self
                        self._children_name_map["all"] = "all"

                        self.port = Controller.Fabric.Oper.FsdbaggActive.Bundle.Port()
                        self.port.parent = self
                        self._children_name_map["port"] = "port"

                        self.location = YList(self)
                        self._segment_path = lambda: "bundle"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle, [], name, value)


                    class Summary(Entity):
                        """
                        
                        
                        .. attribute:: bundle_summary_list
                        
                        	
                        	**type**\: list of  		 :py:class:`BundleSummaryList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary.BundleSummaryList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary, self).__init__()

                            self.yang_name = "summary"
                            self.yang_parent_name = "bundle"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("bundle_summary_list", ("bundle_summary_list", Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary.BundleSummaryList))])
                            self._leafs = OrderedDict()

                            self.bundle_summary_list = YList(self)
                            self._segment_path = lambda: "summary"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary, [], name, value)


                        class BundleSummaryList(Entity):
                            """
                            
                            
                            .. attribute:: idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: total_bundles
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: down_bundles
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: bundles_not_connected
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: total_bports
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: down_bports
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: bports_not_connected
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary.BundleSummaryList, self).__init__()

                                self.yang_name = "bundle_summary_list"
                                self.yang_parent_name = "summary"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                    ('total_bundles', (YLeaf(YType.uint32, 'total_bundles'), ['int'])),
                                    ('down_bundles', (YLeaf(YType.uint32, 'down_bundles'), ['int'])),
                                    ('bundles_not_connected', (YLeaf(YType.uint32, 'bundles_not_connected'), ['int'])),
                                    ('total_bports', (YLeaf(YType.uint32, 'total_bports'), ['int'])),
                                    ('down_bports', (YLeaf(YType.uint32, 'down_bports'), ['int'])),
                                    ('bports_not_connected', (YLeaf(YType.uint32, 'bports_not_connected'), ['int'])),
                                ])
                                self.idx = None
                                self.total_bundles = None
                                self.down_bundles = None
                                self.bundles_not_connected = None
                                self.total_bports = None
                                self.down_bports = None
                                self.bports_not_connected = None
                                self._segment_path = lambda: "bundle_summary_list" + "[idx='" + str(self.idx) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/summary/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Summary.BundleSummaryList, [u'idx', u'total_bundles', u'down_bundles', u'bundles_not_connected', u'total_bports', u'down_bports', u'bports_not_connected'], name, value)




                    class All(Entity):
                        """
                        
                        
                        .. attribute:: bundle_all_list
                        
                        	
                        	**type**\: list of  		 :py:class:`BundleAllList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.All.BundleAllList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggActive.Bundle.All, self).__init__()

                            self.yang_name = "all"
                            self.yang_parent_name = "bundle"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("bundle_all_list", ("bundle_all_list", Controller.Fabric.Oper.FsdbaggActive.Bundle.All.BundleAllList))])
                            self._leafs = OrderedDict()

                            self.bundle_all_list = YList(self)
                            self._segment_path = lambda: "all"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.All, [], name, value)


                        class BundleAllList(Entity):
                            """
                            
                            
                            .. attribute:: idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-9223372036854775808..9223372036854775807
                            
                            	**config**\: False
                            
                            .. attribute:: bundle_id
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: oper_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_id
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: total_links
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: down_links
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: bport1
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: bport2
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbaggActive.Bundle.All.BundleAllList, self).__init__()

                                self.yang_name = "bundle_all_list"
                                self.yang_parent_name = "all"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('idx', (YLeaf(YType.int64, 'idx'), ['int'])),
                                    ('bundle_id', (YLeaf(YType.str, 'bundle_id'), ['str'])),
                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                    ('plane_id', (YLeaf(YType.uint32, 'plane_id'), ['int'])),
                                    ('total_links', (YLeaf(YType.uint32, 'total_links'), ['int'])),
                                    ('down_links', (YLeaf(YType.uint32, 'down_links'), ['int'])),
                                    ('bport1', (YLeaf(YType.str, 'bport1'), ['str'])),
                                    ('bport2', (YLeaf(YType.str, 'bport2'), ['str'])),
                                ])
                                self.idx = None
                                self.bundle_id = None
                                self.oper_state = None
                                self.plane_id = None
                                self.total_links = None
                                self.down_links = None
                                self.bport1 = None
                                self.bport2 = None
                                self._segment_path = lambda: "bundle_all_list" + "[idx='" + str(self.idx) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/all/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.All.BundleAllList, [u'idx', u'bundle_id', u'oper_state', u'plane_id', u'total_links', u'down_links', u'bport1', u'bport2'], name, value)




                    class Port(Entity):
                        """
                        
                        
                        .. attribute:: all
                        
                        	
                        	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All>`
                        
                        	**config**\: False
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port, self).__init__()

                            self.yang_name = "port"
                            self.yang_parent_name = "bundle"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("all", ("all", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All)), ("location", ("location", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location))])
                            self._leafs = OrderedDict()

                            self.all = Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All()
                            self.all.parent = self
                            self._children_name_map["all"] = "all"

                            self.location = YList(self)
                            self._segment_path = lambda: "port"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port, [], name, value)


                        class All(Entity):
                            """
                            
                            
                            .. attribute:: bport_all_list
                            
                            	
                            	**type**\: list of  		 :py:class:`BportAllList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.BportAllList>`
                            
                            	**config**\: False
                            
                            .. attribute:: statistics
                            
                            	
                            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All, self).__init__()

                                self.yang_name = "all"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("bport_all_list", ("bport_all_list", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.BportAllList)), ("statistics", ("statistics", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics))])
                                self._leafs = OrderedDict()

                                self.statistics = Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics()
                                self.statistics.parent = self
                                self._children_name_map["statistics"] = "statistics"

                                self.bport_all_list = YList(self)
                                self._segment_path = lambda: "all"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/port/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All, [], name, value)


                            class BportAllList(Entity):
                                """
                                
                                
                                .. attribute:: idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: bport_id
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: down_flags
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.BportAllList, self).__init__()

                                    self.yang_name = "bport_all_list"
                                    self.yang_parent_name = "all"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = False
                                    self.ylist_key_names = ['idx']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('idx', (YLeaf(YType.int64, 'idx'), ['int'])),
                                        ('bport_id', (YLeaf(YType.str, 'bport_id'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                    ])
                                    self.idx = None
                                    self.bport_id = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.down_flags = None
                                    self._segment_path = lambda: "bport_all_list" + "[idx='" + str(self.idx) + "']"
                                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/port/all/%s" % self._segment_path()
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.BportAllList, [u'idx', u'bport_id', u'admin_state', u'oper_state', u'down_flags'], name, value)



                            class Statistics(Entity):
                                """
                                
                                
                                .. attribute:: bport_stats_all_racks
                                
                                	
                                	**type**\: list of  		 :py:class:`BportStatsAllRacks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics, self).__init__()

                                    self.yang_name = "statistics"
                                    self.yang_parent_name = "all"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = False
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("bport_stats_all_racks", ("bport_stats_all_racks", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks))])
                                    self._leafs = OrderedDict()

                                    self.bport_stats_all_racks = YList(self)
                                    self._segment_path = lambda: "statistics"
                                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/port/all/%s" % self._segment_path()
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics, [], name, value)


                                class BportStatsAllRacks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: total_racks
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: bport_stats_rack
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`BportStatsRack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks, self).__init__()

                                        self.yang_name = "bport_stats_all_racks"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = False
                                        self.ylist_key_names = ['idx']
                                        self._child_classes = OrderedDict([("bport_stats_rack", ("bport_stats_rack", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack))])
                                        self._leafs = OrderedDict([
                                            ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                            ('total_racks', (YLeaf(YType.uint32, 'total_racks'), ['int'])),
                                        ])
                                        self.idx = None
                                        self.total_racks = None

                                        self.bport_stats_rack = YList(self)
                                        self._segment_path = lambda: "bport_stats_all_racks" + "[idx='" + str(self.idx) + "']"
                                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/port/all/statistics/%s" % self._segment_path()
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks, [u'idx', u'total_racks'], name, value)


                                    class BportStatsRack(Entity):
                                        """
                                        
                                        
                                        .. attribute:: idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: bport_stats
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`BportStats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack.BportStats>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack, self).__init__()

                                            self.yang_name = "bport_stats_rack"
                                            self.yang_parent_name = "bport_stats_all_racks"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['idx']
                                            self._child_classes = OrderedDict([("bport_stats", ("bport_stats", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack.BportStats))])
                                            self._leafs = OrderedDict([
                                                ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                                ('rack_num_str', (YLeaf(YType.str, 'rack_num_str'), ['str'])),
                                            ])
                                            self.idx = None
                                            self.rack_num_str = None

                                            self.bport_stats = YList(self)
                                            self._segment_path = lambda: "bport_stats_rack" + "[idx='" + str(self.idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack, [u'idx', u'rack_num_str'], name, value)


                                        class BportStats(Entity):
                                            """
                                            
                                            
                                            .. attribute:: idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: bport_id
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_ce_cells_is_overflow
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_ce_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_uce_cells_is_overflow
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_uce_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_pe_cells_is_overflow
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_pe_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: last_clear_ts
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack.BportStats, self).__init__()

                                                self.yang_name = "bport_stats"
                                                self.yang_parent_name = "bport_stats_rack"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('idx', (YLeaf(YType.int64, 'idx'), ['int'])),
                                                    ('bport_id', (YLeaf(YType.str, 'bport_id'), ['str'])),
                                                    ('rx_data_cells', (YLeaf(YType.uint64, 'rx_data_cells'), ['int'])),
                                                    ('tx_data_cells', (YLeaf(YType.uint64, 'tx_data_cells'), ['int'])),
                                                    ('rx_ce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_ce_cells_is_overflow'), ['bool'])),
                                                    ('rx_ce_cells', (YLeaf(YType.uint64, 'rx_ce_cells'), ['int'])),
                                                    ('rx_uce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_uce_cells_is_overflow'), ['bool'])),
                                                    ('rx_uce_cells', (YLeaf(YType.uint64, 'rx_uce_cells'), ['int'])),
                                                    ('rx_pe_cells_is_overflow', (YLeaf(YType.boolean, 'rx_pe_cells_is_overflow'), ['bool'])),
                                                    ('rx_pe_cells', (YLeaf(YType.uint64, 'rx_pe_cells'), ['int'])),
                                                    ('last_clear_ts', (YLeaf(YType.str, 'last_clear_ts'), ['str'])),
                                                ])
                                                self.idx = None
                                                self.bport_id = None
                                                self.rx_data_cells = None
                                                self.tx_data_cells = None
                                                self.rx_ce_cells_is_overflow = None
                                                self.rx_ce_cells = None
                                                self.rx_uce_cells_is_overflow = None
                                                self.rx_uce_cells = None
                                                self.rx_pe_cells_is_overflow = None
                                                self.rx_pe_cells = None
                                                self.last_clear_ts = None
                                                self._segment_path = lambda: "bport_stats" + "[idx='" + str(self.idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.All.Statistics.BportStatsAllRacks.BportStatsRack.BportStats, [u'idx', u'bport_id', u'rx_data_cells', u'tx_data_cells', u'rx_ce_cells_is_overflow', u'rx_ce_cells', u'rx_uce_cells_is_overflow', u'rx_uce_cells', u'rx_pe_cells_is_overflow', u'rx_pe_cells', u'last_clear_ts'], name, value)







                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: loc_str  (key)
                            
                            	
                            	**type**\: str
                            
                            	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5]))/((0?[0\-9])\|(1[0\-5])))\|(([F\|f][0\-3])/([F\|f][C\|c](0?[0\-9]\|1[0\-1]))/((0?[0\-9])\|([1\-2][0\-9])\|(3[0\-1])))
                            
                            	**config**\: False
                            
                            .. attribute:: bport_all_list
                            
                            	
                            	**type**\: list of  		 :py:class:`BportAllList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.BportAllList>`
                            
                            	**config**\: False
                            
                            .. attribute:: statistics
                            
                            	
                            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['loc_str']
                                self._child_classes = OrderedDict([("bport_all_list", ("bport_all_list", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.BportAllList)), ("statistics", ("statistics", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics))])
                                self._leafs = OrderedDict([
                                    ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                                ])
                                self.loc_str = None

                                self.statistics = Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics()
                                self.statistics.parent = self
                                self._children_name_map["statistics"] = "statistics"

                                self.bport_all_list = YList(self)
                                self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/port/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location, [u'loc_str'], name, value)


                            class BportAllList(Entity):
                                """
                                
                                
                                .. attribute:: idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: bport_id
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: down_flags
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.BportAllList, self).__init__()

                                    self.yang_name = "bport_all_list"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['idx']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('idx', (YLeaf(YType.int64, 'idx'), ['int'])),
                                        ('bport_id', (YLeaf(YType.str, 'bport_id'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                    ])
                                    self.idx = None
                                    self.bport_id = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.down_flags = None
                                    self._segment_path = lambda: "bport_all_list" + "[idx='" + str(self.idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.BportAllList, [u'idx', u'bport_id', u'admin_state', u'oper_state', u'down_flags'], name, value)



                            class Statistics(Entity):
                                """
                                
                                
                                .. attribute:: bport_stats_all_racks
                                
                                	
                                	**type**\: list of  		 :py:class:`BportStatsAllRacks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics, self).__init__()

                                    self.yang_name = "statistics"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("bport_stats_all_racks", ("bport_stats_all_racks", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks))])
                                    self._leafs = OrderedDict()

                                    self.bport_stats_all_racks = YList(self)
                                    self._segment_path = lambda: "statistics"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics, [], name, value)


                                class BportStatsAllRacks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: total_racks
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: bport_stats_rack
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`BportStatsRack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks, self).__init__()

                                        self.yang_name = "bport_stats_all_racks"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['idx']
                                        self._child_classes = OrderedDict([("bport_stats_rack", ("bport_stats_rack", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack))])
                                        self._leafs = OrderedDict([
                                            ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                            ('total_racks', (YLeaf(YType.uint32, 'total_racks'), ['int'])),
                                        ])
                                        self.idx = None
                                        self.total_racks = None

                                        self.bport_stats_rack = YList(self)
                                        self._segment_path = lambda: "bport_stats_all_racks" + "[idx='" + str(self.idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks, [u'idx', u'total_racks'], name, value)


                                    class BportStatsRack(Entity):
                                        """
                                        
                                        
                                        .. attribute:: idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: bport_stats
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`BportStats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack.BportStats>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack, self).__init__()

                                            self.yang_name = "bport_stats_rack"
                                            self.yang_parent_name = "bport_stats_all_racks"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['idx']
                                            self._child_classes = OrderedDict([("bport_stats", ("bport_stats", Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack.BportStats))])
                                            self._leafs = OrderedDict([
                                                ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                                ('rack_num_str', (YLeaf(YType.str, 'rack_num_str'), ['str'])),
                                            ])
                                            self.idx = None
                                            self.rack_num_str = None

                                            self.bport_stats = YList(self)
                                            self._segment_path = lambda: "bport_stats_rack" + "[idx='" + str(self.idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack, [u'idx', u'rack_num_str'], name, value)


                                        class BportStats(Entity):
                                            """
                                            
                                            
                                            .. attribute:: idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: bport_id
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_ce_cells_is_overflow
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_ce_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_uce_cells_is_overflow
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_uce_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_pe_cells_is_overflow
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_pe_cells
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: last_clear_ts
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack.BportStats, self).__init__()

                                                self.yang_name = "bport_stats"
                                                self.yang_parent_name = "bport_stats_rack"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('idx', (YLeaf(YType.int64, 'idx'), ['int'])),
                                                    ('bport_id', (YLeaf(YType.str, 'bport_id'), ['str'])),
                                                    ('rx_data_cells', (YLeaf(YType.uint64, 'rx_data_cells'), ['int'])),
                                                    ('tx_data_cells', (YLeaf(YType.uint64, 'tx_data_cells'), ['int'])),
                                                    ('rx_ce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_ce_cells_is_overflow'), ['bool'])),
                                                    ('rx_ce_cells', (YLeaf(YType.uint64, 'rx_ce_cells'), ['int'])),
                                                    ('rx_uce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_uce_cells_is_overflow'), ['bool'])),
                                                    ('rx_uce_cells', (YLeaf(YType.uint64, 'rx_uce_cells'), ['int'])),
                                                    ('rx_pe_cells_is_overflow', (YLeaf(YType.boolean, 'rx_pe_cells_is_overflow'), ['bool'])),
                                                    ('rx_pe_cells', (YLeaf(YType.uint64, 'rx_pe_cells'), ['int'])),
                                                    ('last_clear_ts', (YLeaf(YType.str, 'last_clear_ts'), ['str'])),
                                                ])
                                                self.idx = None
                                                self.bport_id = None
                                                self.rx_data_cells = None
                                                self.tx_data_cells = None
                                                self.rx_ce_cells_is_overflow = None
                                                self.rx_ce_cells = None
                                                self.rx_uce_cells_is_overflow = None
                                                self.rx_uce_cells = None
                                                self.rx_pe_cells_is_overflow = None
                                                self.rx_pe_cells = None
                                                self.last_clear_ts = None
                                                self._segment_path = lambda: "bport_stats" + "[idx='" + str(self.idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Port.Location.Statistics.BportStatsAllRacks.BportStatsRack.BportStats, [u'idx', u'bport_id', u'rx_data_cells', u'tx_data_cells', u'rx_ce_cells_is_overflow', u'rx_ce_cells', u'rx_uce_cells_is_overflow', u'rx_uce_cells', u'rx_pe_cells_is_overflow', u'rx_pe_cells', u'last_clear_ts'], name, value)








                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: loc_str  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5]))/((0?[0\-9])\|(1[0\-5])))\|(([F\|f][0\-3])/([F\|f][C\|c](0?[0\-9]\|1[0\-1]))/((0?[0\-9])\|([1\-2][0\-9])\|(3[0\-1])))
                        
                        	**config**\: False
                        
                        .. attribute:: bundle_all_list
                        
                        	
                        	**type**\: list of  		 :py:class:`BundleAllList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Bundle.Location.BundleAllList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "bundle"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['loc_str']
                            self._child_classes = OrderedDict([("bundle_all_list", ("bundle_all_list", Controller.Fabric.Oper.FsdbaggActive.Bundle.Location.BundleAllList))])
                            self._leafs = OrderedDict([
                                ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ])
                            self.loc_str = None

                            self.bundle_all_list = YList(self)
                            self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/bundle/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Location, [u'loc_str'], name, value)


                        class BundleAllList(Entity):
                            """
                            
                            
                            .. attribute:: idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-9223372036854775808..9223372036854775807
                            
                            	**config**\: False
                            
                            .. attribute:: bundle_id
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: oper_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_id
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: total_links
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: down_links
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: bport1
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: bport2
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbaggActive.Bundle.Location.BundleAllList, self).__init__()

                                self.yang_name = "bundle_all_list"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('idx', (YLeaf(YType.int64, 'idx'), ['int'])),
                                    ('bundle_id', (YLeaf(YType.str, 'bundle_id'), ['str'])),
                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                    ('plane_id', (YLeaf(YType.uint32, 'plane_id'), ['int'])),
                                    ('total_links', (YLeaf(YType.uint32, 'total_links'), ['int'])),
                                    ('down_links', (YLeaf(YType.uint32, 'down_links'), ['int'])),
                                    ('bport1', (YLeaf(YType.str, 'bport1'), ['str'])),
                                    ('bport2', (YLeaf(YType.str, 'bport2'), ['str'])),
                                ])
                                self.idx = None
                                self.bundle_id = None
                                self.oper_state = None
                                self.plane_id = None
                                self.total_links = None
                                self.down_links = None
                                self.bport1 = None
                                self.bport2 = None
                                self._segment_path = lambda: "bundle_all_list" + "[idx='" + str(self.idx) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Bundle.Location.BundleAllList, [u'idx', u'bundle_id', u'oper_state', u'plane_id', u'total_links', u'down_links', u'bport1', u'bport2'], name, value)





                class Statistics(Entity):
                    """
                    
                    
                    .. attribute:: plane
                    
                    	
                    	**type**\: list of  		 :py:class:`Plane <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbaggActive.Statistics, self).__init__()

                        self.yang_name = "statistics"
                        self.yang_parent_name = "fsdbagg_active"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("plane", ("plane", Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane))])
                        self._leafs = OrderedDict()

                        self.plane = YList(self)
                        self._segment_path = lambda: "statistics"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Statistics, [], name, value)


                    class Plane(Entity):
                        """
                        
                        
                        .. attribute:: planeid  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** all\|[0\-5]
                        
                        	**config**\: False
                        
                        .. attribute:: admin_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_oper_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_oper_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: plane_mode
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_cnt_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_cnt_some_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_cnt_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_cnt_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_cnt_some_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_cnt_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: total_bundles
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: down_bundles
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: rx_data_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: tx_data_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: rx_ce_cells_is_overflow
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: rx_ce_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: rx_uce_cells_is_overflow
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: rx_uce_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: rx_pe_cells_is_overflow
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: rx_pe_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_lost_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_lost_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_ts
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_reason
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_req_ts
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_status
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: is_asic_internal_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: asic_internal_drops
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: asic_location_drops
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: ppu_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: asic_internal_error
                        
                        	
                        	**type**\: list of  		 :py:class:`AsicInternalError <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane.AsicInternalError>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane, self).__init__()

                            self.yang_name = "plane"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['planeid']
                            self._child_classes = OrderedDict([("asic_internal_error", ("asic_internal_error", Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane.AsicInternalError))])
                            self._leafs = OrderedDict([
                                ('planeid', (YLeaf(YType.str, 'planeid'), ['str'])),
                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                ('ucast_oper_state', (YLeaf(YType.str, 'ucast_oper_state'), ['str'])),
                                ('mcast_oper_state', (YLeaf(YType.str, 'mcast_oper_state'), ['str'])),
                                ('plane_mode', (YLeaf(YType.str, 'plane_mode'), ['str'])),
                                ('ucast_cnt_up', (YLeaf(YType.int32, 'ucast_cnt_up'), ['int'])),
                                ('ucast_cnt_some_up', (YLeaf(YType.int32, 'ucast_cnt_some_up'), ['int'])),
                                ('ucast_cnt_dn', (YLeaf(YType.int32, 'ucast_cnt_dn'), ['int'])),
                                ('mcast_cnt_up', (YLeaf(YType.int32, 'mcast_cnt_up'), ['int'])),
                                ('mcast_cnt_some_up', (YLeaf(YType.int32, 'mcast_cnt_some_up'), ['int'])),
                                ('mcast_cnt_dn', (YLeaf(YType.int32, 'mcast_cnt_dn'), ['int'])),
                                ('total_bundles', (YLeaf(YType.int32, 'total_bundles'), ['int'])),
                                ('down_bundles', (YLeaf(YType.int32, 'down_bundles'), ['int'])),
                                ('rx_data_cells', (YLeaf(YType.uint64, 'rx_data_cells'), ['int'])),
                                ('tx_data_cells', (YLeaf(YType.uint64, 'tx_data_cells'), ['int'])),
                                ('rx_ce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_ce_cells_is_overflow'), ['bool'])),
                                ('rx_ce_cells', (YLeaf(YType.uint64, 'rx_ce_cells'), ['int'])),
                                ('rx_uce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_uce_cells_is_overflow'), ['bool'])),
                                ('rx_uce_cells', (YLeaf(YType.uint64, 'rx_uce_cells'), ['int'])),
                                ('rx_pe_cells_is_overflow', (YLeaf(YType.boolean, 'rx_pe_cells_is_overflow'), ['bool'])),
                                ('rx_pe_cells', (YLeaf(YType.uint64, 'rx_pe_cells'), ['int'])),
                                ('ucast_lost_cells', (YLeaf(YType.uint32, 'ucast_lost_cells'), ['int'])),
                                ('mcast_lost_cells', (YLeaf(YType.uint32, 'mcast_lost_cells'), ['int'])),
                                ('last_clear_ts', (YLeaf(YType.str, 'last_clear_ts'), ['str'])),
                                ('last_clear_reason', (YLeaf(YType.str, 'last_clear_reason'), ['str'])),
                                ('last_clear_req_ts', (YLeaf(YType.str, 'last_clear_req_ts'), ['str'])),
                                ('last_clear_status', (YLeaf(YType.str, 'last_clear_status'), ['str'])),
                                ('is_asic_internal_error', (YLeaf(YType.boolean, 'is_asic_internal_error'), ['bool'])),
                                ('asic_internal_drops', (YLeaf(YType.uint64, 'asic_internal_drops'), ['int'])),
                                ('asic_location_drops', (YLeaf(YType.str, 'asic_location_drops'), ['str'])),
                                ('ppu_state', (YLeaf(YType.str, 'ppu_state'), ['str'])),
                            ])
                            self.planeid = None
                            self.admin_state = None
                            self.ucast_oper_state = None
                            self.mcast_oper_state = None
                            self.plane_mode = None
                            self.ucast_cnt_up = None
                            self.ucast_cnt_some_up = None
                            self.ucast_cnt_dn = None
                            self.mcast_cnt_up = None
                            self.mcast_cnt_some_up = None
                            self.mcast_cnt_dn = None
                            self.total_bundles = None
                            self.down_bundles = None
                            self.rx_data_cells = None
                            self.tx_data_cells = None
                            self.rx_ce_cells_is_overflow = None
                            self.rx_ce_cells = None
                            self.rx_uce_cells_is_overflow = None
                            self.rx_uce_cells = None
                            self.rx_pe_cells_is_overflow = None
                            self.rx_pe_cells = None
                            self.ucast_lost_cells = None
                            self.mcast_lost_cells = None
                            self.last_clear_ts = None
                            self.last_clear_reason = None
                            self.last_clear_req_ts = None
                            self.last_clear_status = None
                            self.is_asic_internal_error = None
                            self.asic_internal_drops = None
                            self.asic_location_drops = None
                            self.ppu_state = None

                            self.asic_internal_error = YList(self)
                            self._segment_path = lambda: "plane" + "[planeid='" + str(self.planeid) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_active/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane, [u'planeid', u'admin_state', u'ucast_oper_state', u'mcast_oper_state', u'plane_mode', u'ucast_cnt_up', u'ucast_cnt_some_up', u'ucast_cnt_dn', u'mcast_cnt_up', u'mcast_cnt_some_up', u'mcast_cnt_dn', u'total_bundles', u'down_bundles', u'rx_data_cells', u'tx_data_cells', u'rx_ce_cells_is_overflow', u'rx_ce_cells', u'rx_uce_cells_is_overflow', u'rx_uce_cells', u'rx_pe_cells_is_overflow', u'rx_pe_cells', u'ucast_lost_cells', u'mcast_lost_cells', u'last_clear_ts', u'last_clear_reason', u'last_clear_req_ts', u'last_clear_status', u'is_asic_internal_error', u'asic_internal_drops', u'asic_location_drops', u'ppu_state'], name, value)


                        class AsicInternalError(Entity):
                            """
                            
                            
                            .. attribute:: asic_number  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-9223372036854775808..9223372036854775807
                            
                            	**config**\: False
                            
                            .. attribute:: asic_location
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: link_crc_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_size_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_mis_align_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_code_group_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_no_sig_lock_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_no_sign_accept_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_token_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: error_token_count
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: last_asic_internal_error_ts
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane.AsicInternalError, self).__init__()

                                self.yang_name = "asic_internal_error"
                                self.yang_parent_name = "plane"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['asic_number']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('asic_number', (YLeaf(YType.int64, 'asic_number'), ['int'])),
                                    ('asic_location', (YLeaf(YType.str, 'asic_location'), ['str'])),
                                    ('link_crc_error', (YLeaf(YType.boolean, 'link_crc_error'), ['bool'])),
                                    ('link_size_error', (YLeaf(YType.boolean, 'link_size_error'), ['bool'])),
                                    ('link_mis_align_error', (YLeaf(YType.boolean, 'link_mis_align_error'), ['bool'])),
                                    ('link_code_group_error', (YLeaf(YType.boolean, 'link_code_group_error'), ['bool'])),
                                    ('link_no_sig_lock_error', (YLeaf(YType.boolean, 'link_no_sig_lock_error'), ['bool'])),
                                    ('link_no_sign_accept_error', (YLeaf(YType.boolean, 'link_no_sign_accept_error'), ['bool'])),
                                    ('link_token_error', (YLeaf(YType.boolean, 'link_token_error'), ['bool'])),
                                    ('error_token_count', (YLeaf(YType.boolean, 'error_token_count'), ['bool'])),
                                    ('last_asic_internal_error_ts', (YLeaf(YType.str, 'last_asic_internal_error_ts'), ['str'])),
                                ])
                                self.asic_number = None
                                self.asic_location = None
                                self.link_crc_error = None
                                self.link_size_error = None
                                self.link_mis_align_error = None
                                self.link_code_group_error = None
                                self.link_no_sig_lock_error = None
                                self.link_no_sign_accept_error = None
                                self.link_token_error = None
                                self.error_token_count = None
                                self.last_asic_internal_error_ts = None
                                self._segment_path = lambda: "asic_internal_error" + "[asic_number='" + str(self.asic_number) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggActive.Statistics.Plane.AsicInternalError, [u'asic_number', u'asic_location', u'link_crc_error', u'link_size_error', u'link_mis_align_error', u'link_code_group_error', u'link_no_sig_lock_error', u'link_no_sign_accept_error', u'link_token_error', u'error_token_count', u'last_asic_internal_error_ts'], name, value)






            class FsdbaggLink(Entity):
                """
                
                
                .. attribute:: port
                
                	
                	**type**\: list of  		 :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggLink.Port>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FsdbaggLink, self).__init__()

                    self.yang_name = "fsdbagg_link"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("port", ("port", Controller.Fabric.Oper.FsdbaggLink.Port))])
                    self._leafs = OrderedDict()

                    self.port = YList(self)
                    self._segment_path = lambda: "fsdbagg_link"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggLink, [], name, value)


                class Port(Entity):
                    """
                    
                    
                    .. attribute:: portname  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** fia\|s1\|s2\|s3
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: port.
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbaggLink.Port, self).__init__()

                        self.yang_name = "port"
                        self.yang_parent_name = "fsdbagg_link"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['portname']
                        self._child_classes = OrderedDict([])
                        self._leafs = OrderedDict([
                            ('portname', (YLeaf(YType.str, 'portname'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.portname = None
                        self.description = None
                        self._segment_path = lambda: "port" + "[portname='" + str(self.portname) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_link/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggLink.Port, [u'portname', u'description'], name, value)




            class FsdbaggSfeAsicType(Entity):
                """
                
                
                .. attribute:: asic_types
                
                	
                	**type**\: list of  		 :py:class:`AsicTypes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FsdbaggSfeAsicType, self).__init__()

                    self.yang_name = "fsdbagg_sfe_asic_type"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("asic_types", ("asic_types", Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes))])
                    self._leafs = OrderedDict()

                    self.asic_types = YList(self)
                    self._segment_path = lambda: "fsdbagg_sfe_asic_type"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggSfeAsicType, [], name, value)


                class AsicTypes(Entity):
                    """
                    
                    
                    .. attribute:: asicname  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: asic.
                    
                    .. attribute:: block
                    
                    	
                    	**type**\: list of  		 :py:class:`Block <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes.Block>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes, self).__init__()

                        self.yang_name = "asic_types"
                        self.yang_parent_name = "fsdbagg_sfe_asic_type"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['asicname']
                        self._child_classes = OrderedDict([("block", ("block", Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes.Block))])
                        self._leafs = OrderedDict([
                            ('asicname', (YLeaf(YType.str, 'asicname'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.asicname = None
                        self.description = None

                        self.block = YList(self)
                        self._segment_path = lambda: "asic_types" + "[asicname='" + str(self.asicname) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_sfe_asic_type/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes, [u'asicname', u'description'], name, value)


                    class Block(Entity):
                        """
                        
                        
                        .. attribute:: blockname  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: description
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        	**default value**\: asic block.
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes.Block, self).__init__()

                            self.yang_name = "block"
                            self.yang_parent_name = "asic_types"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['blockname']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('blockname', (YLeaf(YType.str, 'blockname'), ['str'])),
                                ('description', (YLeaf(YType.str, 'description'), ['str'])),
                            ])
                            self.blockname = None
                            self.description = None
                            self._segment_path = lambda: "block" + "[blockname='" + str(self.blockname) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggSfeAsicType.AsicTypes.Block, [u'blockname', u'description'], name, value)





            class FsdbaggStandby(Entity):
                """
                
                
                .. attribute:: plane
                
                	
                	**type**\: list of  		 :py:class:`Plane <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggStandby.Plane>`
                
                	**config**\: False
                
                .. attribute:: statistics
                
                	
                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggStandby.Statistics>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FsdbaggStandby, self).__init__()

                    self.yang_name = "fsdbagg_standby"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("plane", ("plane", Controller.Fabric.Oper.FsdbaggStandby.Plane)), ("statistics", ("statistics", Controller.Fabric.Oper.FsdbaggStandby.Statistics))])
                    self._leafs = OrderedDict()

                    self.statistics = Controller.Fabric.Oper.FsdbaggStandby.Statistics()
                    self.statistics.parent = self
                    self._children_name_map["statistics"] = "statistics"

                    self.plane = YList(self)
                    self._segment_path = lambda: "fsdbagg_standby"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FsdbaggStandby, [], name, value)


                class Plane(Entity):
                    """
                    
                    
                    .. attribute:: planeid  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** all\|[0\-5]
                    
                    	**config**\: False
                    
                    .. attribute:: admin_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_oper_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_oper_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: plane_mode
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_cnt_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_cnt_some_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_cnt_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_cnt_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_cnt_some_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_cnt_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: total_bundles
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: down_bundles
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: rx_data_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: tx_data_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: rx_ce_cells_is_overflow
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: rx_ce_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: rx_uce_cells_is_overflow
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: rx_uce_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: rx_pe_cells_is_overflow
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: rx_pe_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: ucast_lost_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: mcast_lost_cells
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_ts
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_reason
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_req_ts
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: last_clear_status
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: is_asic_internal_error
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: asic_internal_drops
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..18446744073709551615
                    
                    	**config**\: False
                    
                    .. attribute:: asic_location_drops
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: ppu_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: asic_internal_error
                    
                    	
                    	**type**\: list of  		 :py:class:`AsicInternalError <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggStandby.Plane.AsicInternalError>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbaggStandby.Plane, self).__init__()

                        self.yang_name = "plane"
                        self.yang_parent_name = "fsdbagg_standby"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['planeid']
                        self._child_classes = OrderedDict([("asic_internal_error", ("asic_internal_error", Controller.Fabric.Oper.FsdbaggStandby.Plane.AsicInternalError))])
                        self._leafs = OrderedDict([
                            ('planeid', (YLeaf(YType.str, 'planeid'), ['str'])),
                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                            ('ucast_oper_state', (YLeaf(YType.str, 'ucast_oper_state'), ['str'])),
                            ('mcast_oper_state', (YLeaf(YType.str, 'mcast_oper_state'), ['str'])),
                            ('plane_mode', (YLeaf(YType.str, 'plane_mode'), ['str'])),
                            ('ucast_cnt_up', (YLeaf(YType.int32, 'ucast_cnt_up'), ['int'])),
                            ('ucast_cnt_some_up', (YLeaf(YType.int32, 'ucast_cnt_some_up'), ['int'])),
                            ('ucast_cnt_dn', (YLeaf(YType.int32, 'ucast_cnt_dn'), ['int'])),
                            ('mcast_cnt_up', (YLeaf(YType.int32, 'mcast_cnt_up'), ['int'])),
                            ('mcast_cnt_some_up', (YLeaf(YType.int32, 'mcast_cnt_some_up'), ['int'])),
                            ('mcast_cnt_dn', (YLeaf(YType.int32, 'mcast_cnt_dn'), ['int'])),
                            ('total_bundles', (YLeaf(YType.int32, 'total_bundles'), ['int'])),
                            ('down_bundles', (YLeaf(YType.int32, 'down_bundles'), ['int'])),
                            ('rx_data_cells', (YLeaf(YType.uint64, 'rx_data_cells'), ['int'])),
                            ('tx_data_cells', (YLeaf(YType.uint64, 'tx_data_cells'), ['int'])),
                            ('rx_ce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_ce_cells_is_overflow'), ['bool'])),
                            ('rx_ce_cells', (YLeaf(YType.uint64, 'rx_ce_cells'), ['int'])),
                            ('rx_uce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_uce_cells_is_overflow'), ['bool'])),
                            ('rx_uce_cells', (YLeaf(YType.uint64, 'rx_uce_cells'), ['int'])),
                            ('rx_pe_cells_is_overflow', (YLeaf(YType.boolean, 'rx_pe_cells_is_overflow'), ['bool'])),
                            ('rx_pe_cells', (YLeaf(YType.uint64, 'rx_pe_cells'), ['int'])),
                            ('ucast_lost_cells', (YLeaf(YType.uint32, 'ucast_lost_cells'), ['int'])),
                            ('mcast_lost_cells', (YLeaf(YType.uint32, 'mcast_lost_cells'), ['int'])),
                            ('last_clear_ts', (YLeaf(YType.str, 'last_clear_ts'), ['str'])),
                            ('last_clear_reason', (YLeaf(YType.str, 'last_clear_reason'), ['str'])),
                            ('last_clear_req_ts', (YLeaf(YType.str, 'last_clear_req_ts'), ['str'])),
                            ('last_clear_status', (YLeaf(YType.str, 'last_clear_status'), ['str'])),
                            ('is_asic_internal_error', (YLeaf(YType.boolean, 'is_asic_internal_error'), ['bool'])),
                            ('asic_internal_drops', (YLeaf(YType.uint64, 'asic_internal_drops'), ['int'])),
                            ('asic_location_drops', (YLeaf(YType.str, 'asic_location_drops'), ['str'])),
                            ('ppu_state', (YLeaf(YType.str, 'ppu_state'), ['str'])),
                        ])
                        self.planeid = None
                        self.admin_state = None
                        self.ucast_oper_state = None
                        self.mcast_oper_state = None
                        self.plane_mode = None
                        self.ucast_cnt_up = None
                        self.ucast_cnt_some_up = None
                        self.ucast_cnt_dn = None
                        self.mcast_cnt_up = None
                        self.mcast_cnt_some_up = None
                        self.mcast_cnt_dn = None
                        self.total_bundles = None
                        self.down_bundles = None
                        self.rx_data_cells = None
                        self.tx_data_cells = None
                        self.rx_ce_cells_is_overflow = None
                        self.rx_ce_cells = None
                        self.rx_uce_cells_is_overflow = None
                        self.rx_uce_cells = None
                        self.rx_pe_cells_is_overflow = None
                        self.rx_pe_cells = None
                        self.ucast_lost_cells = None
                        self.mcast_lost_cells = None
                        self.last_clear_ts = None
                        self.last_clear_reason = None
                        self.last_clear_req_ts = None
                        self.last_clear_status = None
                        self.is_asic_internal_error = None
                        self.asic_internal_drops = None
                        self.asic_location_drops = None
                        self.ppu_state = None

                        self.asic_internal_error = YList(self)
                        self._segment_path = lambda: "plane" + "[planeid='" + str(self.planeid) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_standby/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggStandby.Plane, [u'planeid', u'admin_state', u'ucast_oper_state', u'mcast_oper_state', u'plane_mode', u'ucast_cnt_up', u'ucast_cnt_some_up', u'ucast_cnt_dn', u'mcast_cnt_up', u'mcast_cnt_some_up', u'mcast_cnt_dn', u'total_bundles', u'down_bundles', u'rx_data_cells', u'tx_data_cells', u'rx_ce_cells_is_overflow', u'rx_ce_cells', u'rx_uce_cells_is_overflow', u'rx_uce_cells', u'rx_pe_cells_is_overflow', u'rx_pe_cells', u'ucast_lost_cells', u'mcast_lost_cells', u'last_clear_ts', u'last_clear_reason', u'last_clear_req_ts', u'last_clear_status', u'is_asic_internal_error', u'asic_internal_drops', u'asic_location_drops', u'ppu_state'], name, value)


                    class AsicInternalError(Entity):
                        """
                        
                        
                        .. attribute:: asic_number  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-9223372036854775808..9223372036854775807
                        
                        	**config**\: False
                        
                        .. attribute:: asic_location
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: link_crc_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_size_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_mis_align_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_code_group_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_no_sig_lock_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_no_sign_accept_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: link_token_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: error_token_count
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: last_asic_internal_error_ts
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggStandby.Plane.AsicInternalError, self).__init__()

                            self.yang_name = "asic_internal_error"
                            self.yang_parent_name = "plane"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['asic_number']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('asic_number', (YLeaf(YType.int64, 'asic_number'), ['int'])),
                                ('asic_location', (YLeaf(YType.str, 'asic_location'), ['str'])),
                                ('link_crc_error', (YLeaf(YType.boolean, 'link_crc_error'), ['bool'])),
                                ('link_size_error', (YLeaf(YType.boolean, 'link_size_error'), ['bool'])),
                                ('link_mis_align_error', (YLeaf(YType.boolean, 'link_mis_align_error'), ['bool'])),
                                ('link_code_group_error', (YLeaf(YType.boolean, 'link_code_group_error'), ['bool'])),
                                ('link_no_sig_lock_error', (YLeaf(YType.boolean, 'link_no_sig_lock_error'), ['bool'])),
                                ('link_no_sign_accept_error', (YLeaf(YType.boolean, 'link_no_sign_accept_error'), ['bool'])),
                                ('link_token_error', (YLeaf(YType.boolean, 'link_token_error'), ['bool'])),
                                ('error_token_count', (YLeaf(YType.boolean, 'error_token_count'), ['bool'])),
                                ('last_asic_internal_error_ts', (YLeaf(YType.str, 'last_asic_internal_error_ts'), ['str'])),
                            ])
                            self.asic_number = None
                            self.asic_location = None
                            self.link_crc_error = None
                            self.link_size_error = None
                            self.link_mis_align_error = None
                            self.link_code_group_error = None
                            self.link_no_sig_lock_error = None
                            self.link_no_sign_accept_error = None
                            self.link_token_error = None
                            self.error_token_count = None
                            self.last_asic_internal_error_ts = None
                            self._segment_path = lambda: "asic_internal_error" + "[asic_number='" + str(self.asic_number) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggStandby.Plane.AsicInternalError, [u'asic_number', u'asic_location', u'link_crc_error', u'link_size_error', u'link_mis_align_error', u'link_code_group_error', u'link_no_sig_lock_error', u'link_no_sign_accept_error', u'link_token_error', u'error_token_count', u'last_asic_internal_error_ts'], name, value)




                class Statistics(Entity):
                    """
                    
                    
                    .. attribute:: plane
                    
                    	
                    	**type**\: list of  		 :py:class:`Plane <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbaggStandby.Statistics, self).__init__()

                        self.yang_name = "statistics"
                        self.yang_parent_name = "fsdbagg_standby"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("plane", ("plane", Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane))])
                        self._leafs = OrderedDict()

                        self.plane = YList(self)
                        self._segment_path = lambda: "statistics"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_standby/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbaggStandby.Statistics, [], name, value)


                    class Plane(Entity):
                        """
                        
                        
                        .. attribute:: planeid  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** all\|[0\-5]
                        
                        	**config**\: False
                        
                        .. attribute:: admin_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_oper_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_oper_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: plane_mode
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_cnt_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_cnt_some_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_cnt_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_cnt_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_cnt_some_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_cnt_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: total_bundles
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: down_bundles
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: rx_data_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: tx_data_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: rx_ce_cells_is_overflow
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: rx_ce_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: rx_uce_cells_is_overflow
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: rx_uce_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: rx_pe_cells_is_overflow
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: rx_pe_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: ucast_lost_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: mcast_lost_cells
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_ts
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_reason
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_req_ts
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: last_clear_status
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: is_asic_internal_error
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: asic_internal_drops
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: asic_location_drops
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: ppu_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: asic_internal_error
                        
                        	
                        	**type**\: list of  		 :py:class:`AsicInternalError <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane.AsicInternalError>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane, self).__init__()

                            self.yang_name = "plane"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['planeid']
                            self._child_classes = OrderedDict([("asic_internal_error", ("asic_internal_error", Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane.AsicInternalError))])
                            self._leafs = OrderedDict([
                                ('planeid', (YLeaf(YType.str, 'planeid'), ['str'])),
                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                ('ucast_oper_state', (YLeaf(YType.str, 'ucast_oper_state'), ['str'])),
                                ('mcast_oper_state', (YLeaf(YType.str, 'mcast_oper_state'), ['str'])),
                                ('plane_mode', (YLeaf(YType.str, 'plane_mode'), ['str'])),
                                ('ucast_cnt_up', (YLeaf(YType.int32, 'ucast_cnt_up'), ['int'])),
                                ('ucast_cnt_some_up', (YLeaf(YType.int32, 'ucast_cnt_some_up'), ['int'])),
                                ('ucast_cnt_dn', (YLeaf(YType.int32, 'ucast_cnt_dn'), ['int'])),
                                ('mcast_cnt_up', (YLeaf(YType.int32, 'mcast_cnt_up'), ['int'])),
                                ('mcast_cnt_some_up', (YLeaf(YType.int32, 'mcast_cnt_some_up'), ['int'])),
                                ('mcast_cnt_dn', (YLeaf(YType.int32, 'mcast_cnt_dn'), ['int'])),
                                ('total_bundles', (YLeaf(YType.int32, 'total_bundles'), ['int'])),
                                ('down_bundles', (YLeaf(YType.int32, 'down_bundles'), ['int'])),
                                ('rx_data_cells', (YLeaf(YType.uint64, 'rx_data_cells'), ['int'])),
                                ('tx_data_cells', (YLeaf(YType.uint64, 'tx_data_cells'), ['int'])),
                                ('rx_ce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_ce_cells_is_overflow'), ['bool'])),
                                ('rx_ce_cells', (YLeaf(YType.uint64, 'rx_ce_cells'), ['int'])),
                                ('rx_uce_cells_is_overflow', (YLeaf(YType.boolean, 'rx_uce_cells_is_overflow'), ['bool'])),
                                ('rx_uce_cells', (YLeaf(YType.uint64, 'rx_uce_cells'), ['int'])),
                                ('rx_pe_cells_is_overflow', (YLeaf(YType.boolean, 'rx_pe_cells_is_overflow'), ['bool'])),
                                ('rx_pe_cells', (YLeaf(YType.uint64, 'rx_pe_cells'), ['int'])),
                                ('ucast_lost_cells', (YLeaf(YType.uint32, 'ucast_lost_cells'), ['int'])),
                                ('mcast_lost_cells', (YLeaf(YType.uint32, 'mcast_lost_cells'), ['int'])),
                                ('last_clear_ts', (YLeaf(YType.str, 'last_clear_ts'), ['str'])),
                                ('last_clear_reason', (YLeaf(YType.str, 'last_clear_reason'), ['str'])),
                                ('last_clear_req_ts', (YLeaf(YType.str, 'last_clear_req_ts'), ['str'])),
                                ('last_clear_status', (YLeaf(YType.str, 'last_clear_status'), ['str'])),
                                ('is_asic_internal_error', (YLeaf(YType.boolean, 'is_asic_internal_error'), ['bool'])),
                                ('asic_internal_drops', (YLeaf(YType.uint64, 'asic_internal_drops'), ['int'])),
                                ('asic_location_drops', (YLeaf(YType.str, 'asic_location_drops'), ['str'])),
                                ('ppu_state', (YLeaf(YType.str, 'ppu_state'), ['str'])),
                            ])
                            self.planeid = None
                            self.admin_state = None
                            self.ucast_oper_state = None
                            self.mcast_oper_state = None
                            self.plane_mode = None
                            self.ucast_cnt_up = None
                            self.ucast_cnt_some_up = None
                            self.ucast_cnt_dn = None
                            self.mcast_cnt_up = None
                            self.mcast_cnt_some_up = None
                            self.mcast_cnt_dn = None
                            self.total_bundles = None
                            self.down_bundles = None
                            self.rx_data_cells = None
                            self.tx_data_cells = None
                            self.rx_ce_cells_is_overflow = None
                            self.rx_ce_cells = None
                            self.rx_uce_cells_is_overflow = None
                            self.rx_uce_cells = None
                            self.rx_pe_cells_is_overflow = None
                            self.rx_pe_cells = None
                            self.ucast_lost_cells = None
                            self.mcast_lost_cells = None
                            self.last_clear_ts = None
                            self.last_clear_reason = None
                            self.last_clear_req_ts = None
                            self.last_clear_status = None
                            self.is_asic_internal_error = None
                            self.asic_internal_drops = None
                            self.asic_location_drops = None
                            self.ppu_state = None

                            self.asic_internal_error = YList(self)
                            self._segment_path = lambda: "plane" + "[planeid='" + str(self.planeid) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdbagg_standby/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane, [u'planeid', u'admin_state', u'ucast_oper_state', u'mcast_oper_state', u'plane_mode', u'ucast_cnt_up', u'ucast_cnt_some_up', u'ucast_cnt_dn', u'mcast_cnt_up', u'mcast_cnt_some_up', u'mcast_cnt_dn', u'total_bundles', u'down_bundles', u'rx_data_cells', u'tx_data_cells', u'rx_ce_cells_is_overflow', u'rx_ce_cells', u'rx_uce_cells_is_overflow', u'rx_uce_cells', u'rx_pe_cells_is_overflow', u'rx_pe_cells', u'ucast_lost_cells', u'mcast_lost_cells', u'last_clear_ts', u'last_clear_reason', u'last_clear_req_ts', u'last_clear_status', u'is_asic_internal_error', u'asic_internal_drops', u'asic_location_drops', u'ppu_state'], name, value)


                        class AsicInternalError(Entity):
                            """
                            
                            
                            .. attribute:: asic_number  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-9223372036854775808..9223372036854775807
                            
                            	**config**\: False
                            
                            .. attribute:: asic_location
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: link_crc_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_size_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_mis_align_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_code_group_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_no_sig_lock_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_no_sign_accept_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_token_error
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: error_token_count
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: last_asic_internal_error_ts
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane.AsicInternalError, self).__init__()

                                self.yang_name = "asic_internal_error"
                                self.yang_parent_name = "plane"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['asic_number']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('asic_number', (YLeaf(YType.int64, 'asic_number'), ['int'])),
                                    ('asic_location', (YLeaf(YType.str, 'asic_location'), ['str'])),
                                    ('link_crc_error', (YLeaf(YType.boolean, 'link_crc_error'), ['bool'])),
                                    ('link_size_error', (YLeaf(YType.boolean, 'link_size_error'), ['bool'])),
                                    ('link_mis_align_error', (YLeaf(YType.boolean, 'link_mis_align_error'), ['bool'])),
                                    ('link_code_group_error', (YLeaf(YType.boolean, 'link_code_group_error'), ['bool'])),
                                    ('link_no_sig_lock_error', (YLeaf(YType.boolean, 'link_no_sig_lock_error'), ['bool'])),
                                    ('link_no_sign_accept_error', (YLeaf(YType.boolean, 'link_no_sign_accept_error'), ['bool'])),
                                    ('link_token_error', (YLeaf(YType.boolean, 'link_token_error'), ['bool'])),
                                    ('error_token_count', (YLeaf(YType.boolean, 'error_token_count'), ['bool'])),
                                    ('last_asic_internal_error_ts', (YLeaf(YType.str, 'last_asic_internal_error_ts'), ['str'])),
                                ])
                                self.asic_number = None
                                self.asic_location = None
                                self.link_crc_error = None
                                self.link_size_error = None
                                self.link_mis_align_error = None
                                self.link_code_group_error = None
                                self.link_no_sig_lock_error = None
                                self.link_no_sign_accept_error = None
                                self.link_token_error = None
                                self.error_token_count = None
                                self.last_asic_internal_error_ts = None
                                self._segment_path = lambda: "asic_internal_error" + "[asic_number='" + str(self.asic_number) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbaggStandby.Statistics.Plane.AsicInternalError, [u'asic_number', u'asic_location', u'link_crc_error', u'link_size_error', u'link_mis_align_error', u'link_code_group_error', u'link_no_sig_lock_error', u'link_no_sign_accept_error', u'link_token_error', u'error_token_count', u'last_asic_internal_error_ts'], name, value)






            class FabHealth(Entity):
                """
                
                
                .. attribute:: sys_info_list
                
                	
                	**type**\: list of  		 :py:class:`SysInfoList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FabHealth, self).__init__()

                    self.yang_name = "fab_health"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("sys_info_list", ("sys_info_list", Controller.Fabric.Oper.FabHealth.SysInfoList))])
                    self._leafs = OrderedDict()

                    self.sys_info_list = YList(self)
                    self._segment_path = lambda: "fab_health"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FabHealth, [], name, value)


                class SysInfoList(Entity):
                    """
                    
                    
                    .. attribute:: index_key  (key)
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: aggr_status
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    .. attribute:: available_rack_ids
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: rack_id_separator
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: available_fm_loc
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: fm_loc_separator
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: rack_total
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: rack_lcc
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: rack_fcc
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: plane_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: plane_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: plane_mcast_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: plane_admin_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: show_sys_plane_detail
                    
                    	
                    	**type**\: bool
                    
                    	**config**\: False
                    
                    	**default value**\: false
                    
                    .. attribute:: sfe_asics_total
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: sfe_asics_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: sfe_asics_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: fia_asics_total
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: fia_asics_up
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: fia_asics_dn
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: sys_plane_info_list
                    
                    	
                    	**type**\: list of  		 :py:class:`SysPlaneInfoList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.SysPlaneInfoList>`
                    
                    	**config**\: False
                    
                    .. attribute:: rack_info_list
                    
                    	
                    	**type**\: list of  		 :py:class:`RackInfoList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList>`
                    
                    	**config**\: False
                    
                    .. attribute:: fsdb_status
                    
                    	
                    	**type**\: list of  		 :py:class:`FsdbStatus <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.FsdbStatus>`
                    
                    	**config**\: False
                    
                    .. attribute:: sfe_status
                    
                    	
                    	**type**\: list of  		 :py:class:`SfeStatus <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.SfeStatus>`
                    
                    	**config**\: False
                    
                    .. attribute:: sfe_drvr_loc
                    
                    	
                    	**type**\: list of  		 :py:class:`SfeDrvrLoc <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.SfeDrvrLoc>`
                    
                    	**config**\: False
                    
                    .. attribute:: sfe_fm_sep
                    
                    	
                    	**type**\: list of  		 :py:class:`SfeFmSep <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.SfeFmSep>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FabHealth.SysInfoList, self).__init__()

                        self.yang_name = "sys_info_list"
                        self.yang_parent_name = "fab_health"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['index_key']
                        self._child_classes = OrderedDict([("sys_plane_info_list", ("sys_plane_info_list", Controller.Fabric.Oper.FabHealth.SysInfoList.SysPlaneInfoList)), ("rack_info_list", ("rack_info_list", Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList)), ("fsdb_status", ("fsdb_status", Controller.Fabric.Oper.FabHealth.SysInfoList.FsdbStatus)), ("sfe_status", ("sfe_status", Controller.Fabric.Oper.FabHealth.SysInfoList.SfeStatus)), ("sfe_drvr_loc", ("sfe_drvr_loc", Controller.Fabric.Oper.FabHealth.SysInfoList.SfeDrvrLoc)), ("sfe_fm_sep", ("sfe_fm_sep", Controller.Fabric.Oper.FabHealth.SysInfoList.SfeFmSep))])
                        self._leafs = OrderedDict([
                            ('index_key', (YLeaf(YType.int32, 'index_key'), ['int'])),
                            ('aggr_status', (YLeaf(YType.boolean, 'aggr_status'), ['bool'])),
                            ('available_rack_ids', (YLeaf(YType.str, 'available_rack_ids'), ['str'])),
                            ('rack_id_separator', (YLeaf(YType.str, 'rack_id_separator'), ['str'])),
                            ('available_fm_loc', (YLeaf(YType.str, 'available_fm_loc'), ['str'])),
                            ('fm_loc_separator', (YLeaf(YType.str, 'fm_loc_separator'), ['str'])),
                            ('rack_total', (YLeaf(YType.uint32, 'rack_total'), ['int'])),
                            ('rack_lcc', (YLeaf(YType.uint32, 'rack_lcc'), ['int'])),
                            ('rack_fcc', (YLeaf(YType.uint32, 'rack_fcc'), ['int'])),
                            ('plane_up', (YLeaf(YType.uint32, 'plane_up'), ['int'])),
                            ('plane_dn', (YLeaf(YType.uint32, 'plane_dn'), ['int'])),
                            ('plane_mcast_dn', (YLeaf(YType.uint32, 'plane_mcast_dn'), ['int'])),
                            ('plane_admin_dn', (YLeaf(YType.uint32, 'plane_admin_dn'), ['int'])),
                            ('show_sys_plane_detail', (YLeaf(YType.boolean, 'show_sys_plane_detail'), ['bool'])),
                            ('sfe_asics_total', (YLeaf(YType.uint32, 'sfe_asics_total'), ['int'])),
                            ('sfe_asics_up', (YLeaf(YType.uint32, 'sfe_asics_up'), ['int'])),
                            ('sfe_asics_dn', (YLeaf(YType.uint32, 'sfe_asics_dn'), ['int'])),
                            ('fia_asics_total', (YLeaf(YType.uint32, 'fia_asics_total'), ['int'])),
                            ('fia_asics_up', (YLeaf(YType.uint32, 'fia_asics_up'), ['int'])),
                            ('fia_asics_dn', (YLeaf(YType.uint32, 'fia_asics_dn'), ['int'])),
                        ])
                        self.index_key = None
                        self.aggr_status = None
                        self.available_rack_ids = None
                        self.rack_id_separator = None
                        self.available_fm_loc = None
                        self.fm_loc_separator = None
                        self.rack_total = None
                        self.rack_lcc = None
                        self.rack_fcc = None
                        self.plane_up = None
                        self.plane_dn = None
                        self.plane_mcast_dn = None
                        self.plane_admin_dn = None
                        self.show_sys_plane_detail = None
                        self.sfe_asics_total = None
                        self.sfe_asics_up = None
                        self.sfe_asics_dn = None
                        self.fia_asics_total = None
                        self.fia_asics_up = None
                        self.fia_asics_dn = None

                        self.sys_plane_info_list = YList(self)
                        self.rack_info_list = YList(self)
                        self.fsdb_status = YList(self)
                        self.sfe_status = YList(self)
                        self.sfe_drvr_loc = YList(self)
                        self.sfe_fm_sep = YList(self)
                        self._segment_path = lambda: "sys_info_list" + "[index_key='" + str(self.index_key) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fab_health/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList, [u'index_key', u'aggr_status', u'available_rack_ids', u'rack_id_separator', u'available_fm_loc', u'fm_loc_separator', u'rack_total', u'rack_lcc', u'rack_fcc', u'plane_up', u'plane_dn', u'plane_mcast_dn', u'plane_admin_dn', u'show_sys_plane_detail', u'sfe_asics_total', u'sfe_asics_up', u'sfe_asics_dn', u'fia_asics_total', u'fia_asics_up', u'fia_asics_dn'], name, value)


                    class SysPlaneInfoList(Entity):
                        """
                        
                        
                        .. attribute:: plane_id  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: admin_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: plane_state
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: plane_mode
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: racks_w_plane_fault
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: is_data_drop
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FabHealth.SysInfoList.SysPlaneInfoList, self).__init__()

                            self.yang_name = "sys_plane_info_list"
                            self.yang_parent_name = "sys_info_list"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['plane_id']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('plane_id', (YLeaf(YType.int32, 'plane_id'), ['int'])),
                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                ('plane_state', (YLeaf(YType.str, 'plane_state'), ['str'])),
                                ('plane_mode', (YLeaf(YType.str, 'plane_mode'), ['str'])),
                                ('racks_w_plane_fault', (YLeaf(YType.int32, 'racks_w_plane_fault'), ['int'])),
                                ('is_data_drop', (YLeaf(YType.boolean, 'is_data_drop'), ['bool'])),
                            ])
                            self.plane_id = None
                            self.admin_state = None
                            self.plane_state = None
                            self.plane_mode = None
                            self.racks_w_plane_fault = None
                            self.is_data_drop = None
                            self._segment_path = lambda: "sys_plane_info_list" + "[plane_id='" + str(self.plane_id) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.SysPlaneInfoList, [u'plane_id', u'admin_state', u'plane_state', u'plane_mode', u'racks_w_plane_fault', u'is_data_drop'], name, value)



                    class RackInfoList(Entity):
                        """
                        
                        
                        .. attribute:: rack_id  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: rack_name
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: rack_type
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: sfe_asics_total
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: sfe_asics_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: sfe_asics_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: fia_asics_total
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: fia_asics_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: fia_asics_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: plane_up
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: plane_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: plane_mcast_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: plane_admin_dn
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: show_rack_plane_detail
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        	**default value**\: false
                        
                        .. attribute:: amba_valid
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: rack_plane_info_list
                        
                        	
                        	**type**\: list of  		 :py:class:`RackPlaneInfoList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList, self).__init__()

                            self.yang_name = "rack_info_list"
                            self.yang_parent_name = "sys_info_list"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['rack_id']
                            self._child_classes = OrderedDict([("rack_plane_info_list", ("rack_plane_info_list", Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList))])
                            self._leafs = OrderedDict([
                                ('rack_id', (YLeaf(YType.int32, 'rack_id'), ['int'])),
                                ('rack_name', (YLeaf(YType.str, 'rack_name'), ['str'])),
                                ('rack_type', (YLeaf(YType.str, 'rack_type'), ['str'])),
                                ('sfe_asics_total', (YLeaf(YType.int32, 'sfe_asics_total'), ['int'])),
                                ('sfe_asics_up', (YLeaf(YType.int32, 'sfe_asics_up'), ['int'])),
                                ('sfe_asics_dn', (YLeaf(YType.int32, 'sfe_asics_dn'), ['int'])),
                                ('fia_asics_total', (YLeaf(YType.int32, 'fia_asics_total'), ['int'])),
                                ('fia_asics_up', (YLeaf(YType.int32, 'fia_asics_up'), ['int'])),
                                ('fia_asics_dn', (YLeaf(YType.int32, 'fia_asics_dn'), ['int'])),
                                ('plane_up', (YLeaf(YType.uint32, 'plane_up'), ['int'])),
                                ('plane_dn', (YLeaf(YType.uint32, 'plane_dn'), ['int'])),
                                ('plane_mcast_dn', (YLeaf(YType.uint32, 'plane_mcast_dn'), ['int'])),
                                ('plane_admin_dn', (YLeaf(YType.uint32, 'plane_admin_dn'), ['int'])),
                                ('show_rack_plane_detail', (YLeaf(YType.boolean, 'show_rack_plane_detail'), ['bool'])),
                                ('amba_valid', (YLeaf(YType.int32, 'amba_valid'), ['int'])),
                            ])
                            self.rack_id = None
                            self.rack_name = None
                            self.rack_type = None
                            self.sfe_asics_total = None
                            self.sfe_asics_up = None
                            self.sfe_asics_dn = None
                            self.fia_asics_total = None
                            self.fia_asics_up = None
                            self.fia_asics_dn = None
                            self.plane_up = None
                            self.plane_dn = None
                            self.plane_mcast_dn = None
                            self.plane_admin_dn = None
                            self.show_rack_plane_detail = None
                            self.amba_valid = None

                            self.rack_plane_info_list = YList(self)
                            self._segment_path = lambda: "rack_info_list" + "[rack_id='" + str(self.rack_id) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList, [u'rack_id', u'rack_name', u'rack_type', u'sfe_asics_total', u'sfe_asics_up', u'sfe_asics_dn', u'fia_asics_total', u'fia_asics_up', u'fia_asics_dn', u'plane_up', u'plane_dn', u'plane_mcast_dn', u'plane_admin_dn', u'show_rack_plane_detail', u'amba_valid'], name, value)


                        class RackPlaneInfoList(Entity):
                            """
                            
                            
                            .. attribute:: plane_id  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: plane_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_mode
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: asics_total
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: asics_up
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: asics_dn
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: reachable_amba
                            
                            	
                            	**type**\: list of  		 :py:class:`ReachableAmba <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList.ReachableAmba>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList, self).__init__()

                                self.yang_name = "rack_plane_info_list"
                                self.yang_parent_name = "rack_info_list"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['plane_id']
                                self._child_classes = OrderedDict([("reachable_amba", ("reachable_amba", Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList.ReachableAmba))])
                                self._leafs = OrderedDict([
                                    ('plane_id', (YLeaf(YType.int32, 'plane_id'), ['int'])),
                                    ('plane_state', (YLeaf(YType.str, 'plane_state'), ['str'])),
                                    ('plane_mode', (YLeaf(YType.str, 'plane_mode'), ['str'])),
                                    ('asics_total', (YLeaf(YType.int32, 'asics_total'), ['int'])),
                                    ('asics_up', (YLeaf(YType.int32, 'asics_up'), ['int'])),
                                    ('asics_dn', (YLeaf(YType.int32, 'asics_dn'), ['int'])),
                                ])
                                self.plane_id = None
                                self.plane_state = None
                                self.plane_mode = None
                                self.asics_total = None
                                self.asics_up = None
                                self.asics_dn = None

                                self.reachable_amba = YList(self)
                                self._segment_path = lambda: "rack_plane_info_list" + "[plane_id='" + str(self.plane_id) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList, [u'plane_id', u'plane_state', u'plane_mode', u'asics_total', u'asics_up', u'asics_dn'], name, value)


                            class ReachableAmba(Entity):
                                """
                                
                                
                                .. attribute:: idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-2147483648..2147483647
                                
                                	**config**\: False
                                
                                .. attribute:: num_reachable
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-2147483648..2147483647
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList.ReachableAmba, self).__init__()

                                    self.yang_name = "reachable_amba"
                                    self.yang_parent_name = "rack_plane_info_list"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['idx']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                        ('num_reachable', (YLeaf(YType.int32, 'num_reachable'), ['int'])),
                                    ])
                                    self.idx = None
                                    self.num_reachable = None
                                    self._segment_path = lambda: "reachable_amba" + "[idx='" + str(self.idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.RackInfoList.RackPlaneInfoList.ReachableAmba, [u'idx', u'num_reachable'], name, value)





                    class FsdbStatus(Entity):
                        """
                        
                        
                        .. attribute:: rack_id  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: status
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FabHealth.SysInfoList.FsdbStatus, self).__init__()

                            self.yang_name = "fsdb_status"
                            self.yang_parent_name = "sys_info_list"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['rack_id']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('rack_id', (YLeaf(YType.int32, 'rack_id'), ['int'])),
                                ('status', (YLeaf(YType.boolean, 'status'), ['bool'])),
                            ])
                            self.rack_id = None
                            self.status = None
                            self._segment_path = lambda: "fsdb_status" + "[rack_id='" + str(self.rack_id) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.FsdbStatus, [u'rack_id', u'status'], name, value)



                    class SfeStatus(Entity):
                        """
                        
                        
                        .. attribute:: loc_str  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: status
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FabHealth.SysInfoList.SfeStatus, self).__init__()

                            self.yang_name = "sfe_status"
                            self.yang_parent_name = "sys_info_list"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['loc_str']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                                ('status', (YLeaf(YType.boolean, 'status'), ['bool'])),
                            ])
                            self.loc_str = None
                            self.status = None
                            self._segment_path = lambda: "sfe_status" + "[loc_str='" + str(self.loc_str) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.SfeStatus, [u'loc_str', u'status'], name, value)



                    class SfeDrvrLoc(Entity):
                        """
                        
                        
                        .. attribute:: loc_str  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FabHealth.SysInfoList.SfeDrvrLoc, self).__init__()

                            self.yang_name = "sfe_drvr_loc"
                            self.yang_parent_name = "sys_info_list"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['loc_str']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ])
                            self.loc_str = None
                            self._segment_path = lambda: "sfe_drvr_loc" + "[loc_str='" + str(self.loc_str) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.SfeDrvrLoc, [u'loc_str'], name, value)



                    class SfeFmSep(Entity):
                        """
                        
                        
                        .. attribute:: loc_str  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FabHealth.SysInfoList.SfeFmSep, self).__init__()

                            self.yang_name = "sfe_fm_sep"
                            self.yang_parent_name = "sys_info_list"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['loc_str']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ])
                            self.loc_str = None
                            self._segment_path = lambda: "sfe_fm_sep" + "[loc_str='" + str(self.loc_str) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FabHealth.SysInfoList.SfeFmSep, [u'loc_str'], name, value)





            class FsdbAggregator(Entity):
                """
                FSDB Aggregator information
                
                .. attribute:: fsdbagg
                
                	
                	**type**\:  :py:class:`Fsdbagg <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbAggregator.Fsdbagg>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FsdbAggregator, self).__init__()

                    self.yang_name = "fsdb-aggregator"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("fsdbagg", ("fsdbagg", Controller.Fabric.Oper.FsdbAggregator.Fsdbagg))])
                    self._leafs = OrderedDict()

                    self.fsdbagg = Controller.Fabric.Oper.FsdbAggregator.Fsdbagg()
                    self.fsdbagg.parent = self
                    self._children_name_map["fsdbagg"] = "fsdbagg"
                    self._segment_path = lambda: "fsdb-aggregator"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FsdbAggregator, [], name, value)


                class Fsdbagg(Entity):
                    """
                    
                    
                    .. attribute:: trace
                    
                    	show traceable processes
                    	**type**\: list of  		 :py:class:`Trace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg, self).__init__()

                        self.yang_name = "fsdbagg"
                        self.yang_parent_name = "fsdb-aggregator"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("trace", ("trace", Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace))])
                        self._leafs = OrderedDict()

                        self.trace = YList(self)
                        self._segment_path = lambda: "fsdbagg"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdb-aggregator/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg, [], name, value)


                    class Trace(Entity):
                        """
                        show traceable processes
                        
                        .. attribute:: buffer  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace, self).__init__()

                            self.yang_name = "trace"
                            self.yang_parent_name = "fsdbagg"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['buffer']
                            self._child_classes = OrderedDict([("location", ("location", Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location))])
                            self._leafs = OrderedDict([
                                ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                            ])
                            self.buffer = None

                            self.location = YList(self)
                            self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdb-aggregator/fsdbagg/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace, [u'buffer'], name, value)


                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: location_name  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: all_options
                            
                            	
                            	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "trace"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['location_name']
                                self._child_classes = OrderedDict([("all-options", ("all_options", Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions))])
                                self._leafs = OrderedDict([
                                    ('location_name', (YLeaf(YType.str, 'location_name'), ['str'])),
                                ])
                                self.location_name = None

                                self.all_options = YList(self)
                                self._segment_path = lambda: "location" + "[location_name='" + str(self.location_name) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location, [u'location_name'], name, value)


                            class AllOptions(Entity):
                                """
                                
                                
                                .. attribute:: option  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: trace_blocks
                                
                                	
                                	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions.TraceBlocks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions, self).__init__()

                                    self.yang_name = "all-options"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['option']
                                    self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions.TraceBlocks))])
                                    self._leafs = OrderedDict([
                                        ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                    ])
                                    self.option = None

                                    self.trace_blocks = YList(self)
                                    self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions, [u'option'], name, value)


                                class TraceBlocks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data
                                    
                                    	Trace output block
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions.TraceBlocks, self).__init__()

                                        self.yang_name = "trace-blocks"
                                        self.yang_parent_name = "all-options"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                        ])
                                        self.data = None
                                        self._segment_path = lambda: "trace-blocks"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.FsdbAggregator.Fsdbagg.Trace.Location.AllOptions.TraceBlocks, [u'data'], name, value)








            class Link(Entity):
                """
                Fabric link option
                
                .. attribute:: rack
                
                	
                	**type**\: list of  		 :py:class:`Rack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack>`
                
                	**config**\: False
                
                .. attribute:: node_location
                
                	
                	**type**\: list of  		 :py:class:`NodeLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.Link, self).__init__()

                    self.yang_name = "link"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("rack", ("rack", Controller.Fabric.Oper.Link.Rack)), ("node_location", ("node_location", Controller.Fabric.Oper.Link.NodeLocation))])
                    self._leafs = OrderedDict()

                    self.rack = YList(self)
                    self.node_location = YList(self)
                    self._segment_path = lambda: "link"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.Link, [], name, value)


                class Rack(Entity):
                    """
                    
                    
                    .. attribute:: rack_number  (key)
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: port
                    
                    	
                    	**type**\: list of  		 :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Link.Rack, self).__init__()

                        self.yang_name = "rack"
                        self.yang_parent_name = "link"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['rack_number']
                        self._child_classes = OrderedDict([("port", ("port", Controller.Fabric.Oper.Link.Rack.Port))])
                        self._leafs = OrderedDict([
                            ('rack_number', (YLeaf(YType.int32, 'rack_number'), ['int'])),
                        ])
                        self.rack_number = None

                        self.port = YList(self)
                        self._segment_path = lambda: "rack" + "[rack_number='" + str(self.rack_number) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/link/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack, ['rack_number'], name, value)


                    class Port(Entity):
                        """
                        
                        
                        .. attribute:: portname  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** fia\|s1\|s2\|s3
                        
                        	**config**\: False
                        
                        .. attribute:: description
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        	**default value**\: port.
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location>`
                        
                        	**config**\: False
                        
                        .. attribute:: rx
                        
                        	Rx link option
                        	**type**\:  :py:class:`Rx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx>`
                        
                        	**config**\: False
                        
                        .. attribute:: tx
                        
                        	Tx link option
                        	**type**\:  :py:class:`Tx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Link.Rack.Port, self).__init__()

                            self.yang_name = "port"
                            self.yang_parent_name = "rack"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['portname']
                            self._child_classes = OrderedDict([("location", ("location", Controller.Fabric.Oper.Link.Rack.Port.Location)), ("rx", ("rx", Controller.Fabric.Oper.Link.Rack.Port.Rx)), ("tx", ("tx", Controller.Fabric.Oper.Link.Rack.Port.Tx))])
                            self._leafs = OrderedDict([
                                ('portname', (YLeaf(YType.str, 'portname'), ['str'])),
                                ('description', (YLeaf(YType.str, 'description'), ['str'])),
                            ])
                            self.portname = None
                            self.description = None

                            self.rx = Controller.Fabric.Oper.Link.Rack.Port.Rx()
                            self.rx.parent = self
                            self._children_name_map["rx"] = "rx"

                            self.tx = Controller.Fabric.Oper.Link.Rack.Port.Tx()
                            self.tx.parent = self
                            self._children_name_map["tx"] = "tx"

                            self.location = YList(self)
                            self._segment_path = lambda: "port" + "[portname='" + str(self.portname) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port, ['portname', 'description'], name, value)


                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: loc_str  (key)
                            
                            	
                            	**type**\: str
                            
                            	**pattern:** ((0)/([F\|f][C\|c](0?[0\-5]))/(0?[0\-5])/(0?[0\-9]\|[1\-9][0\-9]\|1[0\-3][0\-9]\|14[0\-3]))\|((0?[0\-9]\|1[0\-5])/(0?[0\-9]\|1[0\-5])/(0?[0\-5])/(0?[0\-9]\|[1\-3][0\-9]\|4[0\-7]))
                            
                            	**config**\: False
                            
                            .. attribute:: rx
                            
                            	Rx link option
                            	**type**\:  :py:class:`Rx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx>`
                            
                            	**config**\: False
                            
                            .. attribute:: tx
                            
                            	Tx link option
                            	**type**\:  :py:class:`Tx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Link.Rack.Port.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['loc_str']
                                self._child_classes = OrderedDict([("rx", ("rx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx)), ("tx", ("tx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx))])
                                self._leafs = OrderedDict([
                                    ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                                ])
                                self.loc_str = None

                                self.rx = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx()
                                self.rx.parent = self
                                self._children_name_map["rx"] = "rx"

                                self.tx = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx()
                                self.tx.parent = self
                                self._children_name_map["tx"] = "tx"
                                self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location, ['loc_str'], name, value)


                            class Rx(Entity):
                                """
                                Rx link option
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail>`
                                
                                	**config**\: False
                                
                                .. attribute:: state
                                
                                	
                                	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State>`
                                
                                	**config**\: False
                                
                                .. attribute:: statistics
                                
                                	
                                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx, self).__init__()

                                    self.yang_name = "rx"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.state = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State()
                                    self.state.parent = self
                                    self._children_name_map["state"] = "state"

                                    self.statistics = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics()
                                    self.statistics.parent = self
                                    self._children_name_map["statistics"] = "statistics"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "rx"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class State(Entity):
                                    """
                                    
                                    
                                    .. attribute:: up
                                    
                                    	
                                    	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: down
                                    
                                    	
                                    	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: mismatch
                                    
                                    	
                                    	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State, self).__init__()

                                        self.yang_name = "state"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch))])
                                        self._leafs = OrderedDict()

                                        self.up = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up()
                                        self.up.parent = self
                                        self._children_name_map["up"] = "up"

                                        self.down = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down()
                                        self.down.parent = self
                                        self._children_name_map["down"] = "down"

                                        self.mismatch = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch()
                                        self.mismatch.parent = self
                                        self._children_name_map["mismatch"] = "mismatch"
                                        self._segment_path = lambda: "state"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State, [], name, value)


                                    class Up(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up, self).__init__()

                                            self.yang_name = "up"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "up"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Down(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down, self).__init__()

                                            self.yang_name = "down"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "down"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Mismatch(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch, self).__init__()

                                            self.yang_name = "mismatch"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "mismatch"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                                class Statistics(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics, self).__init__()

                                        self.yang_name = "statistics"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "statistics"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Rx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)






                            class Tx(Entity):
                                """
                                Tx link option
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail>`
                                
                                	**config**\: False
                                
                                .. attribute:: state
                                
                                	
                                	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State>`
                                
                                	**config**\: False
                                
                                .. attribute:: statistics
                                
                                	
                                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx, self).__init__()

                                    self.yang_name = "tx"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.state = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State()
                                    self.state.parent = self
                                    self._children_name_map["state"] = "state"

                                    self.statistics = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics()
                                    self.statistics.parent = self
                                    self._children_name_map["statistics"] = "statistics"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "tx"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class State(Entity):
                                    """
                                    
                                    
                                    .. attribute:: up
                                    
                                    	
                                    	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: down
                                    
                                    	
                                    	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: mismatch
                                    
                                    	
                                    	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State, self).__init__()

                                        self.yang_name = "state"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch))])
                                        self._leafs = OrderedDict()

                                        self.up = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up()
                                        self.up.parent = self
                                        self._children_name_map["up"] = "up"

                                        self.down = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down()
                                        self.down.parent = self
                                        self._children_name_map["down"] = "down"

                                        self.mismatch = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch()
                                        self.mismatch.parent = self
                                        self._children_name_map["mismatch"] = "mismatch"
                                        self._segment_path = lambda: "state"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State, [], name, value)


                                    class Up(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up, self).__init__()

                                            self.yang_name = "up"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "up"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Down(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down, self).__init__()

                                            self.yang_name = "down"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "down"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Mismatch(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch, self).__init__()

                                            self.yang_name = "mismatch"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "mismatch"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                                class Statistics(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics, self).__init__()

                                        self.yang_name = "statistics"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "statistics"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Location.Tx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)







                        class Rx(Entity):
                            """
                            Rx link option
                            
                            .. attribute:: data_idx
                            
                            	
                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx>`
                            
                            	**config**\: False
                            
                            .. attribute:: brief
                            
                            	
                            	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief>`
                            
                            	**config**\: False
                            
                            .. attribute:: detail
                            
                            	
                            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail>`
                            
                            	**config**\: False
                            
                            .. attribute:: state
                            
                            	
                            	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State>`
                            
                            	**config**\: False
                            
                            .. attribute:: statistics
                            
                            	
                            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx, self).__init__()

                                self.yang_name = "rx"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.Rack.Port.Rx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics))])
                                self._leafs = OrderedDict()

                                self.brief = Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief()
                                self.brief.parent = self
                                self._children_name_map["brief"] = "brief"

                                self.detail = Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail()
                                self.detail.parent = self
                                self._children_name_map["detail"] = "detail"

                                self.state = Controller.Fabric.Oper.Link.Rack.Port.Rx.State()
                                self.state.parent = self
                                self._children_name_map["state"] = "state"

                                self.statistics = Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics()
                                self.statistics.parent = self
                                self._children_name_map["statistics"] = "statistics"

                                self.data_idx = YList(self)
                                self._segment_path = lambda: "rx"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx, [], name, value)


                            class DataIdx(Entity):
                                """
                                
                                
                                .. attribute:: port_data_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: sfe_port
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: neighbor_link
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx, self).__init__()

                                    self.yang_name = "data_idx"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['port_data_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx.History))])
                                    self._leafs = OrderedDict([
                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                    ])
                                    self.port_data_idx = None
                                    self.sfe_port = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.near_end_cdr_ln = None
                                    self.near_end_cxp_ch = None
                                    self.far_end_cxp_ch = None
                                    self.far_end_cdr_ln = None
                                    self.neighbor_link = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "data_idx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                            class Brief(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief, self).__init__()

                                    self.yang_name = "brief"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "brief"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "brief"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class Detail(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail, self).__init__()

                                    self.yang_name = "detail"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "detail"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "detail"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class State(Entity):
                                """
                                
                                
                                .. attribute:: up
                                
                                	
                                	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up>`
                                
                                	**config**\: False
                                
                                .. attribute:: down
                                
                                	
                                	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down>`
                                
                                	**config**\: False
                                
                                .. attribute:: mismatch
                                
                                	
                                	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State, self).__init__()

                                    self.yang_name = "state"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch))])
                                    self._leafs = OrderedDict()

                                    self.up = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up()
                                    self.up.parent = self
                                    self._children_name_map["up"] = "up"

                                    self.down = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down()
                                    self.down.parent = self
                                    self._children_name_map["down"] = "down"

                                    self.mismatch = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch()
                                    self.mismatch.parent = self
                                    self._children_name_map["mismatch"] = "mismatch"
                                    self._segment_path = lambda: "state"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State, [], name, value)


                                class Up(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up, self).__init__()

                                        self.yang_name = "up"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "up"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Down(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down, self).__init__()

                                        self.yang_name = "down"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "down"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Mismatch(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch, self).__init__()

                                        self.yang_name = "mismatch"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "mismatch"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                            class Statistics(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics, self).__init__()

                                    self.yang_name = "statistics"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "statistics"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rack_num
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_crc_errors_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_correctable_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_disparity_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_dropped_retransmitted_control
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_uncorrectable_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_code_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_link_error
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    	**default value**\: false
                                    
                                    .. attribute:: link_crc_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_size_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_mis_align_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_code_group_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_lock_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_accept_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_tokens_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_token_count
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                            ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                            ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                            ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                            ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                            ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                            ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                            ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                            ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                            ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                            ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                            ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                            ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                            ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                            ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                            ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                            ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                            ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                            ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                            ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                        ])
                                        self.port_data_idx = None
                                        self.rack_num = None
                                        self.sfe_port = None
                                        self.tx_control_cells_counter = None
                                        self.tx_data_cell_counter = None
                                        self.tx_data_byte_counter = None
                                        self.rx_crc_errors_counter = None
                                        self.rx_lfec_fec_correctable_error = None
                                        self.rx_8b_10b_disparity_errors = None
                                        self.rx_control_cells_counter = None
                                        self.rx_data_cell_counter = None
                                        self.rx_data_byte_counter = None
                                        self.rx_dropped_retransmitted_control = None
                                        self.tx_asyn_fifo_rate = None
                                        self.rx_asyn_fifo_rate = None
                                        self.rx_lfec_fec_uncorrectable_errors = None
                                        self.rx_8b_10b_code_errors = None
                                        self.is_link_error = None
                                        self.link_crc_error = None
                                        self.link_size_error = None
                                        self.link_mis_align_error = None
                                        self.link_code_group_error = None
                                        self.link_no_sig_lock_error = None
                                        self.link_no_sig_accept_error = None
                                        self.link_tokens_error = None
                                        self.error_token_count = None
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Rx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)






                        class Tx(Entity):
                            """
                            Tx link option
                            
                            .. attribute:: data_idx
                            
                            	
                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx>`
                            
                            	**config**\: False
                            
                            .. attribute:: brief
                            
                            	
                            	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief>`
                            
                            	**config**\: False
                            
                            .. attribute:: detail
                            
                            	
                            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail>`
                            
                            	**config**\: False
                            
                            .. attribute:: state
                            
                            	
                            	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State>`
                            
                            	**config**\: False
                            
                            .. attribute:: statistics
                            
                            	
                            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx, self).__init__()

                                self.yang_name = "tx"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.Rack.Port.Tx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics))])
                                self._leafs = OrderedDict()

                                self.brief = Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief()
                                self.brief.parent = self
                                self._children_name_map["brief"] = "brief"

                                self.detail = Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail()
                                self.detail.parent = self
                                self._children_name_map["detail"] = "detail"

                                self.state = Controller.Fabric.Oper.Link.Rack.Port.Tx.State()
                                self.state.parent = self
                                self._children_name_map["state"] = "state"

                                self.statistics = Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics()
                                self.statistics.parent = self
                                self._children_name_map["statistics"] = "statistics"

                                self.data_idx = YList(self)
                                self._segment_path = lambda: "tx"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx, [], name, value)


                            class DataIdx(Entity):
                                """
                                
                                
                                .. attribute:: port_data_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: sfe_port
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: neighbor_link
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx, self).__init__()

                                    self.yang_name = "data_idx"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['port_data_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx.History))])
                                    self._leafs = OrderedDict([
                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                    ])
                                    self.port_data_idx = None
                                    self.sfe_port = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.near_end_cdr_ln = None
                                    self.near_end_cxp_ch = None
                                    self.far_end_cxp_ch = None
                                    self.far_end_cdr_ln = None
                                    self.neighbor_link = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "data_idx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                            class Brief(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief, self).__init__()

                                    self.yang_name = "brief"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "brief"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "brief"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class Detail(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail, self).__init__()

                                    self.yang_name = "detail"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "detail"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "detail"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class State(Entity):
                                """
                                
                                
                                .. attribute:: up
                                
                                	
                                	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up>`
                                
                                	**config**\: False
                                
                                .. attribute:: down
                                
                                	
                                	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down>`
                                
                                	**config**\: False
                                
                                .. attribute:: mismatch
                                
                                	
                                	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State, self).__init__()

                                    self.yang_name = "state"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch))])
                                    self._leafs = OrderedDict()

                                    self.up = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up()
                                    self.up.parent = self
                                    self._children_name_map["up"] = "up"

                                    self.down = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down()
                                    self.down.parent = self
                                    self._children_name_map["down"] = "down"

                                    self.mismatch = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch()
                                    self.mismatch.parent = self
                                    self._children_name_map["mismatch"] = "mismatch"
                                    self._segment_path = lambda: "state"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State, [], name, value)


                                class Up(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up, self).__init__()

                                        self.yang_name = "up"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "up"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Down(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down, self).__init__()

                                        self.yang_name = "down"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "down"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Mismatch(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch, self).__init__()

                                        self.yang_name = "mismatch"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "mismatch"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                            class Statistics(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics, self).__init__()

                                    self.yang_name = "statistics"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "statistics"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rack_num
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_crc_errors_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_correctable_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_disparity_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_dropped_retransmitted_control
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_uncorrectable_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_code_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_link_error
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    	**default value**\: false
                                    
                                    .. attribute:: link_crc_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_size_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_mis_align_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_code_group_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_lock_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_accept_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_tokens_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_token_count
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                            ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                            ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                            ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                            ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                            ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                            ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                            ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                            ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                            ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                            ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                            ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                            ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                            ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                            ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                            ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                            ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                            ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                            ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                            ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                        ])
                                        self.port_data_idx = None
                                        self.rack_num = None
                                        self.sfe_port = None
                                        self.tx_control_cells_counter = None
                                        self.tx_data_cell_counter = None
                                        self.tx_data_byte_counter = None
                                        self.rx_crc_errors_counter = None
                                        self.rx_lfec_fec_correctable_error = None
                                        self.rx_8b_10b_disparity_errors = None
                                        self.rx_control_cells_counter = None
                                        self.rx_data_cell_counter = None
                                        self.rx_data_byte_counter = None
                                        self.rx_dropped_retransmitted_control = None
                                        self.tx_asyn_fifo_rate = None
                                        self.rx_asyn_fifo_rate = None
                                        self.rx_lfec_fec_uncorrectable_errors = None
                                        self.rx_8b_10b_code_errors = None
                                        self.is_link_error = None
                                        self.link_crc_error = None
                                        self.link_size_error = None
                                        self.link_mis_align_error = None
                                        self.link_code_group_error = None
                                        self.link_no_sig_lock_error = None
                                        self.link_no_sig_accept_error = None
                                        self.link_tokens_error = None
                                        self.error_token_count = None
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.Rack.Port.Tx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)








                class NodeLocation(Entity):
                    """
                    
                    
                    .. attribute:: node_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: port
                    
                    	
                    	**type**\: list of  		 :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Link.NodeLocation, self).__init__()

                        self.yang_name = "node_location"
                        self.yang_parent_name = "link"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['node_str']
                        self._child_classes = OrderedDict([("port", ("port", Controller.Fabric.Oper.Link.NodeLocation.Port))])
                        self._leafs = OrderedDict([
                            ('node_str', (YLeaf(YType.str, 'node_str'), ['str'])),
                        ])
                        self.node_str = None

                        self.port = YList(self)
                        self._segment_path = lambda: "node_location" + "[node_str='" + str(self.node_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/link/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation, ['node_str'], name, value)


                    class Port(Entity):
                        """
                        
                        
                        .. attribute:: portname  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** fia\|s1\|s2\|s3
                        
                        	**config**\: False
                        
                        .. attribute:: description
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        	**default value**\: port.
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location>`
                        
                        	**config**\: False
                        
                        .. attribute:: rx
                        
                        	Rx link option
                        	**type**\:  :py:class:`Rx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx>`
                        
                        	**config**\: False
                        
                        .. attribute:: tx
                        
                        	Tx link option
                        	**type**\:  :py:class:`Tx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Link.NodeLocation.Port, self).__init__()

                            self.yang_name = "port"
                            self.yang_parent_name = "node_location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['portname']
                            self._child_classes = OrderedDict([("location", ("location", Controller.Fabric.Oper.Link.NodeLocation.Port.Location)), ("rx", ("rx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx)), ("tx", ("tx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx))])
                            self._leafs = OrderedDict([
                                ('portname', (YLeaf(YType.str, 'portname'), ['str'])),
                                ('description', (YLeaf(YType.str, 'description'), ['str'])),
                            ])
                            self.portname = None
                            self.description = None

                            self.rx = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx()
                            self.rx.parent = self
                            self._children_name_map["rx"] = "rx"

                            self.tx = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx()
                            self.tx.parent = self
                            self._children_name_map["tx"] = "tx"

                            self.location = YList(self)
                            self._segment_path = lambda: "port" + "[portname='" + str(self.portname) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port, ['portname', 'description'], name, value)


                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: loc_str  (key)
                            
                            	
                            	**type**\: str
                            
                            	**pattern:** ((0)/([F\|f][C\|c](0?[0\-5]))/(0?[0\-5])/(0?[0\-9]\|[1\-9][0\-9]\|1[0\-3][0\-9]\|14[0\-3]))\|((0?[0\-9]\|1[0\-5])/(0?[0\-9]\|1[0\-5])/(0?[0\-5])/(0?[0\-9]\|[1\-3][0\-9]\|4[0\-7]))
                            
                            	**config**\: False
                            
                            .. attribute:: rx
                            
                            	Rx link option
                            	**type**\:  :py:class:`Rx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx>`
                            
                            	**config**\: False
                            
                            .. attribute:: tx
                            
                            	Tx link option
                            	**type**\:  :py:class:`Tx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['loc_str']
                                self._child_classes = OrderedDict([("rx", ("rx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx)), ("tx", ("tx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx))])
                                self._leafs = OrderedDict([
                                    ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                                ])
                                self.loc_str = None

                                self.rx = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx()
                                self.rx.parent = self
                                self._children_name_map["rx"] = "rx"

                                self.tx = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx()
                                self.tx.parent = self
                                self._children_name_map["tx"] = "tx"
                                self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location, ['loc_str'], name, value)


                            class Rx(Entity):
                                """
                                Rx link option
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail>`
                                
                                	**config**\: False
                                
                                .. attribute:: state
                                
                                	
                                	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State>`
                                
                                	**config**\: False
                                
                                .. attribute:: statistics
                                
                                	
                                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx, self).__init__()

                                    self.yang_name = "rx"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.state = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State()
                                    self.state.parent = self
                                    self._children_name_map["state"] = "state"

                                    self.statistics = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics()
                                    self.statistics.parent = self
                                    self._children_name_map["statistics"] = "statistics"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "rx"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class State(Entity):
                                    """
                                    
                                    
                                    .. attribute:: up
                                    
                                    	
                                    	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: down
                                    
                                    	
                                    	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: mismatch
                                    
                                    	
                                    	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State, self).__init__()

                                        self.yang_name = "state"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch))])
                                        self._leafs = OrderedDict()

                                        self.up = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up()
                                        self.up.parent = self
                                        self._children_name_map["up"] = "up"

                                        self.down = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down()
                                        self.down.parent = self
                                        self._children_name_map["down"] = "down"

                                        self.mismatch = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch()
                                        self.mismatch.parent = self
                                        self._children_name_map["mismatch"] = "mismatch"
                                        self._segment_path = lambda: "state"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State, [], name, value)


                                    class Up(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up, self).__init__()

                                            self.yang_name = "up"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "up"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Down(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down, self).__init__()

                                            self.yang_name = "down"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "down"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Mismatch(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch, self).__init__()

                                            self.yang_name = "mismatch"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "mismatch"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                                class Statistics(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics, self).__init__()

                                        self.yang_name = "statistics"
                                        self.yang_parent_name = "rx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "statistics"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Rx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)






                            class Tx(Entity):
                                """
                                Tx link option
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail>`
                                
                                	**config**\: False
                                
                                .. attribute:: state
                                
                                	
                                	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State>`
                                
                                	**config**\: False
                                
                                .. attribute:: statistics
                                
                                	
                                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx, self).__init__()

                                    self.yang_name = "tx"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.state = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State()
                                    self.state.parent = self
                                    self._children_name_map["state"] = "state"

                                    self.statistics = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics()
                                    self.statistics.parent = self
                                    self._children_name_map["statistics"] = "statistics"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "tx"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                class State(Entity):
                                    """
                                    
                                    
                                    .. attribute:: up
                                    
                                    	
                                    	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: down
                                    
                                    	
                                    	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: mismatch
                                    
                                    	
                                    	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State, self).__init__()

                                        self.yang_name = "state"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch))])
                                        self._leafs = OrderedDict()

                                        self.up = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up()
                                        self.up.parent = self
                                        self._children_name_map["up"] = "up"

                                        self.down = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down()
                                        self.down.parent = self
                                        self._children_name_map["down"] = "down"

                                        self.mismatch = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch()
                                        self.mismatch.parent = self
                                        self._children_name_map["mismatch"] = "mismatch"
                                        self._segment_path = lambda: "state"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State, [], name, value)


                                    class Up(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up, self).__init__()

                                            self.yang_name = "up"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "up"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "up"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Down(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down, self).__init__()

                                            self.yang_name = "down"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "down"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "down"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                    class Mismatch(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: brief
                                        
                                        	
                                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: detail
                                        
                                        	
                                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch, self).__init__()

                                            self.yang_name = "mismatch"
                                            self.yang_parent_name = "state"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail))])
                                            self._leafs = OrderedDict()

                                            self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief()
                                            self.brief.parent = self
                                            self._children_name_map["brief"] = "brief"

                                            self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail()
                                            self.detail.parent = self
                                            self._children_name_map["detail"] = "detail"

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "mismatch"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                        class Brief(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief, self).__init__()

                                                self.yang_name = "brief"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "brief"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "brief"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                        class Detail(Entity):
                                            """
                                            
                                            
                                            .. attribute:: data_idx
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail, self).__init__()

                                                self.yang_name = "detail"
                                                self.yang_parent_name = "mismatch"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx))])
                                                self._leafs = OrderedDict()

                                                self.data_idx = YList(self)
                                                self._segment_path = lambda: "detail"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail, [], name, value)


                                            class DataIdx(Entity):
                                                """
                                                
                                                
                                                .. attribute:: port_data_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-9223372036854775808..9223372036854775807
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: sfe_port
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: near_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cxp_ch
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: far_end_cdr_ln
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: neighbor_link
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: history
                                                
                                                	
                                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History>`
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                    self.yang_name = "data_idx"
                                                    self.yang_parent_name = "detail"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['port_data_idx']
                                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History))])
                                                    self._leafs = OrderedDict([
                                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                    ])
                                                    self.port_data_idx = None
                                                    self.sfe_port = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.near_end_cdr_ln = None
                                                    self.near_end_cxp_ch = None
                                                    self.far_end_cxp_ch = None
                                                    self.far_end_cdr_ln = None
                                                    self.neighbor_link = None

                                                    self.history = YList(self)
                                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                                class History(Entity):
                                                    """
                                                    
                                                    
                                                    .. attribute:: history_idx  (key)
                                                    
                                                    	
                                                    	**type**\: int
                                                    
                                                    	**range:** \-2147483648..2147483647
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: time_stamp
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: admin_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: oper_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    .. attribute:: error_state
                                                    
                                                    	
                                                    	**type**\: str
                                                    
                                                    	**config**\: False
                                                    
                                                    

                                                    """

                                                    _prefix = 'calvados_controllers'
                                                    _revision = '2017-10-11'

                                                    def __init__(self):
                                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                        self.yang_name = "history"
                                                        self.yang_parent_name = "data_idx"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = ['history_idx']
                                                        self._child_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                        ])
                                                        self.history_idx = None
                                                        self.time_stamp = None
                                                        self.admin_state = None
                                                        self.oper_state = None
                                                        self.error_state = None
                                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                        self._is_frozen = True

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                                class Statistics(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics, self).__init__()

                                        self.yang_name = "statistics"
                                        self.yang_parent_name = "tx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "statistics"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "statistics"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rack_num
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_crc_errors_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_correctable_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_disparity_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_control_cells_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_cell_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_data_byte_counter
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_dropped_retransmitted_control
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: tx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_asyn_fifo_rate
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_lfec_fec_uncorrectable_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: rx_8b_10b_code_errors
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..18446744073709551615
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: is_link_error
                                            
                                            	
                                            	**type**\: bool
                                            
                                            	**config**\: False
                                            
                                            	**default value**\: false
                                            
                                            .. attribute:: link_crc_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_size_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_mis_align_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_code_group_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_lock_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_no_sig_accept_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: link_tokens_error
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_token_count
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                    ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                    ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                    ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                    ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                    ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                    ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                    ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                    ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                    ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                    ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                    ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                    ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                    ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                    ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                    ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                    ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                    ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                    ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                    ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                    ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                    ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                                ])
                                                self.port_data_idx = None
                                                self.rack_num = None
                                                self.sfe_port = None
                                                self.tx_control_cells_counter = None
                                                self.tx_data_cell_counter = None
                                                self.tx_data_byte_counter = None
                                                self.rx_crc_errors_counter = None
                                                self.rx_lfec_fec_correctable_error = None
                                                self.rx_8b_10b_disparity_errors = None
                                                self.rx_control_cells_counter = None
                                                self.rx_data_cell_counter = None
                                                self.rx_data_byte_counter = None
                                                self.rx_dropped_retransmitted_control = None
                                                self.tx_asyn_fifo_rate = None
                                                self.rx_asyn_fifo_rate = None
                                                self.rx_lfec_fec_uncorrectable_errors = None
                                                self.rx_8b_10b_code_errors = None
                                                self.is_link_error = None
                                                self.link_crc_error = None
                                                self.link_size_error = None
                                                self.link_mis_align_error = None
                                                self.link_code_group_error = None
                                                self.link_no_sig_lock_error = None
                                                self.link_no_sig_accept_error = None
                                                self.link_tokens_error = None
                                                self.error_token_count = None
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Location.Tx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)







                        class Rx(Entity):
                            """
                            Rx link option
                            
                            .. attribute:: data_idx
                            
                            	
                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx>`
                            
                            	**config**\: False
                            
                            .. attribute:: brief
                            
                            	
                            	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief>`
                            
                            	**config**\: False
                            
                            .. attribute:: detail
                            
                            	
                            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail>`
                            
                            	**config**\: False
                            
                            .. attribute:: state
                            
                            	
                            	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State>`
                            
                            	**config**\: False
                            
                            .. attribute:: statistics
                            
                            	
                            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx, self).__init__()

                                self.yang_name = "rx"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics))])
                                self._leafs = OrderedDict()

                                self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief()
                                self.brief.parent = self
                                self._children_name_map["brief"] = "brief"

                                self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail()
                                self.detail.parent = self
                                self._children_name_map["detail"] = "detail"

                                self.state = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State()
                                self.state.parent = self
                                self._children_name_map["state"] = "state"

                                self.statistics = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics()
                                self.statistics.parent = self
                                self._children_name_map["statistics"] = "statistics"

                                self.data_idx = YList(self)
                                self._segment_path = lambda: "rx"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx, [], name, value)


                            class DataIdx(Entity):
                                """
                                
                                
                                .. attribute:: port_data_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: sfe_port
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: neighbor_link
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx, self).__init__()

                                    self.yang_name = "data_idx"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['port_data_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx.History))])
                                    self._leafs = OrderedDict([
                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                    ])
                                    self.port_data_idx = None
                                    self.sfe_port = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.near_end_cdr_ln = None
                                    self.near_end_cxp_ch = None
                                    self.far_end_cxp_ch = None
                                    self.far_end_cdr_ln = None
                                    self.neighbor_link = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "data_idx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                            class Brief(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief, self).__init__()

                                    self.yang_name = "brief"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "brief"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "brief"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class Detail(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail, self).__init__()

                                    self.yang_name = "detail"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "detail"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "detail"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class State(Entity):
                                """
                                
                                
                                .. attribute:: up
                                
                                	
                                	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up>`
                                
                                	**config**\: False
                                
                                .. attribute:: down
                                
                                	
                                	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down>`
                                
                                	**config**\: False
                                
                                .. attribute:: mismatch
                                
                                	
                                	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State, self).__init__()

                                    self.yang_name = "state"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch))])
                                    self._leafs = OrderedDict()

                                    self.up = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up()
                                    self.up.parent = self
                                    self._children_name_map["up"] = "up"

                                    self.down = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down()
                                    self.down.parent = self
                                    self._children_name_map["down"] = "down"

                                    self.mismatch = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch()
                                    self.mismatch.parent = self
                                    self._children_name_map["mismatch"] = "mismatch"
                                    self._segment_path = lambda: "state"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State, [], name, value)


                                class Up(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up, self).__init__()

                                        self.yang_name = "up"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "up"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Down(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down, self).__init__()

                                        self.yang_name = "down"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "down"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Mismatch(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch, self).__init__()

                                        self.yang_name = "mismatch"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "mismatch"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                            class Statistics(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics, self).__init__()

                                    self.yang_name = "statistics"
                                    self.yang_parent_name = "rx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "statistics"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rack_num
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_crc_errors_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_correctable_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_disparity_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_dropped_retransmitted_control
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_uncorrectable_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_code_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_link_error
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    	**default value**\: false
                                    
                                    .. attribute:: link_crc_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_size_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_mis_align_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_code_group_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_lock_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_accept_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_tokens_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_token_count
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                            ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                            ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                            ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                            ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                            ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                            ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                            ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                            ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                            ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                            ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                            ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                            ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                            ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                            ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                            ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                            ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                            ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                            ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                            ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                        ])
                                        self.port_data_idx = None
                                        self.rack_num = None
                                        self.sfe_port = None
                                        self.tx_control_cells_counter = None
                                        self.tx_data_cell_counter = None
                                        self.tx_data_byte_counter = None
                                        self.rx_crc_errors_counter = None
                                        self.rx_lfec_fec_correctable_error = None
                                        self.rx_8b_10b_disparity_errors = None
                                        self.rx_control_cells_counter = None
                                        self.rx_data_cell_counter = None
                                        self.rx_data_byte_counter = None
                                        self.rx_dropped_retransmitted_control = None
                                        self.tx_asyn_fifo_rate = None
                                        self.rx_asyn_fifo_rate = None
                                        self.rx_lfec_fec_uncorrectable_errors = None
                                        self.rx_8b_10b_code_errors = None
                                        self.is_link_error = None
                                        self.link_crc_error = None
                                        self.link_size_error = None
                                        self.link_mis_align_error = None
                                        self.link_code_group_error = None
                                        self.link_no_sig_lock_error = None
                                        self.link_no_sig_accept_error = None
                                        self.link_tokens_error = None
                                        self.error_token_count = None
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Rx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)






                        class Tx(Entity):
                            """
                            Tx link option
                            
                            .. attribute:: data_idx
                            
                            	
                            	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx>`
                            
                            	**config**\: False
                            
                            .. attribute:: brief
                            
                            	
                            	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief>`
                            
                            	**config**\: False
                            
                            .. attribute:: detail
                            
                            	
                            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail>`
                            
                            	**config**\: False
                            
                            .. attribute:: state
                            
                            	
                            	**type**\:  :py:class:`State <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State>`
                            
                            	**config**\: False
                            
                            .. attribute:: statistics
                            
                            	
                            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx, self).__init__()

                                self.yang_name = "tx"
                                self.yang_parent_name = "port"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail)), ("state", ("state", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State)), ("statistics", ("statistics", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics))])
                                self._leafs = OrderedDict()

                                self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief()
                                self.brief.parent = self
                                self._children_name_map["brief"] = "brief"

                                self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail()
                                self.detail.parent = self
                                self._children_name_map["detail"] = "detail"

                                self.state = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State()
                                self.state.parent = self
                                self._children_name_map["state"] = "state"

                                self.statistics = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics()
                                self.statistics.parent = self
                                self._children_name_map["statistics"] = "statistics"

                                self.data_idx = YList(self)
                                self._segment_path = lambda: "tx"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx, [], name, value)


                            class DataIdx(Entity):
                                """
                                
                                
                                .. attribute:: port_data_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: sfe_port
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: near_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cxp_ch
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_cdr_ln
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: neighbor_link
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx, self).__init__()

                                    self.yang_name = "data_idx"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['port_data_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx.History))])
                                    self._leafs = OrderedDict([
                                        ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                        ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                        ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                        ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                        ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                        ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                    ])
                                    self.port_data_idx = None
                                    self.sfe_port = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.near_end_cdr_ln = None
                                    self.near_end_cxp_ch = None
                                    self.far_end_cxp_ch = None
                                    self.far_end_cdr_ln = None
                                    self.neighbor_link = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "data_idx"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                            class Brief(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief, self).__init__()

                                    self.yang_name = "brief"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "brief"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "brief"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class Detail(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail, self).__init__()

                                    self.yang_name = "detail"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx))])
                                    self._leafs = OrderedDict()

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "detail"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: near_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cxp_ch
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_cdr_ln
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: neighbor_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "detail"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx.History))])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                            ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                            ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                            ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                            ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                        ])
                                        self.port_data_idx = None
                                        self.sfe_port = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.near_end_cdr_ln = None
                                        self.near_end_cxp_ch = None
                                        self.far_end_cxp_ch = None
                                        self.far_end_cdr_ln = None
                                        self.neighbor_link = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "data_idx"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class State(Entity):
                                """
                                
                                
                                .. attribute:: up
                                
                                	
                                	**type**\:  :py:class:`Up <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up>`
                                
                                	**config**\: False
                                
                                .. attribute:: down
                                
                                	
                                	**type**\:  :py:class:`Down <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down>`
                                
                                	**config**\: False
                                
                                .. attribute:: mismatch
                                
                                	
                                	**type**\:  :py:class:`Mismatch <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State, self).__init__()

                                    self.yang_name = "state"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("up", ("up", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up)), ("down", ("down", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down)), ("mismatch", ("mismatch", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch))])
                                    self._leafs = OrderedDict()

                                    self.up = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up()
                                    self.up.parent = self
                                    self._children_name_map["up"] = "up"

                                    self.down = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down()
                                    self.down.parent = self
                                    self._children_name_map["down"] = "down"

                                    self.mismatch = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch()
                                    self.mismatch.parent = self
                                    self._children_name_map["mismatch"] = "mismatch"
                                    self._segment_path = lambda: "state"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State, [], name, value)


                                class Up(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up, self).__init__()

                                        self.yang_name = "up"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "up"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "up"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Up.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Down(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down, self).__init__()

                                        self.yang_name = "down"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "down"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "down"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Down.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                                class Mismatch(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: brief
                                    
                                    	
                                    	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief>`
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: detail
                                    
                                    	
                                    	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch, self).__init__()

                                        self.yang_name = "mismatch"
                                        self.yang_parent_name = "state"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail))])
                                        self._leafs = OrderedDict()

                                        self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief()
                                        self.brief.parent = self
                                        self._children_name_map["brief"] = "brief"

                                        self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail()
                                        self.detail.parent = self
                                        self._children_name_map["detail"] = "detail"

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "mismatch"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: near_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cxp_ch
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_cdr_ln
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: neighbor_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx.History))])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                            ])
                                            self.port_data_idx = None
                                            self.sfe_port = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.near_end_cdr_ln = None
                                            self.near_end_cxp_ch = None
                                            self.far_end_cxp_ch = None
                                            self.far_end_cdr_ln = None
                                            self.neighbor_link = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "data_idx"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                                    class Brief(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief, self).__init__()

                                            self.yang_name = "brief"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "brief"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "brief"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Brief.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                                    class Detail(Entity):
                                        """
                                        
                                        
                                        .. attribute:: data_idx
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail, self).__init__()

                                            self.yang_name = "detail"
                                            self.yang_parent_name = "mismatch"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx))])
                                            self._leafs = OrderedDict()

                                            self.data_idx = YList(self)
                                            self._segment_path = lambda: "detail"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail, [], name, value)


                                        class DataIdx(Entity):
                                            """
                                            
                                            
                                            .. attribute:: port_data_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-9223372036854775808..9223372036854775807
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: sfe_port
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: near_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cxp_ch
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: far_end_cdr_ln
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: neighbor_link
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: history
                                            
                                            	
                                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx.History>`
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx, self).__init__()

                                                self.yang_name = "data_idx"
                                                self.yang_parent_name = "detail"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['port_data_idx']
                                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx.History))])
                                                self._leafs = OrderedDict([
                                                    ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                    ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('near_end_cdr_ln', (YLeaf(YType.str, 'near_end_cdr_ln'), ['str'])),
                                                    ('near_end_cxp_ch', (YLeaf(YType.str, 'near_end_cxp_ch'), ['str'])),
                                                    ('far_end_cxp_ch', (YLeaf(YType.str, 'far_end_cxp_ch'), ['str'])),
                                                    ('far_end_cdr_ln', (YLeaf(YType.str, 'far_end_cdr_ln'), ['str'])),
                                                    ('neighbor_link', (YLeaf(YType.str, 'neighbor_link'), ['str'])),
                                                ])
                                                self.port_data_idx = None
                                                self.sfe_port = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.near_end_cdr_ln = None
                                                self.near_end_cxp_ch = None
                                                self.far_end_cxp_ch = None
                                                self.far_end_cdr_ln = None
                                                self.neighbor_link = None

                                                self.history = YList(self)
                                                self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx, ['port_data_idx', 'sfe_port', 'admin_state', 'oper_state', 'near_end_cdr_ln', 'near_end_cxp_ch', 'far_end_cxp_ch', 'far_end_cdr_ln', 'neighbor_link'], name, value)


                                            class History(Entity):
                                                """
                                                
                                                
                                                .. attribute:: history_idx  (key)
                                                
                                                	
                                                	**type**\: int
                                                
                                                	**range:** \-2147483648..2147483647
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: time_stamp
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: admin_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: oper_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                .. attribute:: error_state
                                                
                                                	
                                                	**type**\: str
                                                
                                                	**config**\: False
                                                
                                                

                                                """

                                                _prefix = 'calvados_controllers'
                                                _revision = '2017-10-11'

                                                def __init__(self):
                                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx.History, self).__init__()

                                                    self.yang_name = "history"
                                                    self.yang_parent_name = "data_idx"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = ['history_idx']
                                                    self._child_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ])
                                                    self.history_idx = None
                                                    self.time_stamp = None
                                                    self.admin_state = None
                                                    self.oper_state = None
                                                    self.error_state = None
                                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                    self._is_frozen = True

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.State.Mismatch.Detail.DataIdx.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)







                            class Statistics(Entity):
                                """
                                
                                
                                .. attribute:: data_idx
                                
                                	
                                	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.DataIdx>`
                                
                                	**config**\: False
                                
                                .. attribute:: brief
                                
                                	
                                	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief>`
                                
                                	**config**\: False
                                
                                .. attribute:: detail
                                
                                	
                                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics, self).__init__()

                                    self.yang_name = "statistics"
                                    self.yang_parent_name = "tx"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.DataIdx)), ("brief", ("brief", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail))])
                                    self._leafs = OrderedDict()

                                    self.brief = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief()
                                    self.brief.parent = self
                                    self._children_name_map["brief"] = "brief"

                                    self.detail = Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail()
                                    self.detail.parent = self
                                    self._children_name_map["detail"] = "detail"

                                    self.data_idx = YList(self)
                                    self._segment_path = lambda: "statistics"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics, [], name, value)


                                class DataIdx(Entity):
                                    """
                                    
                                    
                                    .. attribute:: port_data_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rack_num
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: sfe_port
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_crc_errors_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_correctable_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_disparity_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_dropped_retransmitted_control
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_uncorrectable_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_8b_10b_code_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_link_error
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    	**default value**\: false
                                    
                                    .. attribute:: link_crc_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_size_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_mis_align_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_code_group_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_lock_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_no_sig_accept_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_tokens_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_token_count
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.DataIdx, self).__init__()

                                        self.yang_name = "data_idx"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['port_data_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                            ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                            ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                            ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                            ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                            ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                            ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                            ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                            ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                            ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                            ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                            ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                            ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                            ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                            ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                            ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                            ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                            ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                            ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                            ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                            ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                            ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                            ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                        ])
                                        self.port_data_idx = None
                                        self.rack_num = None
                                        self.sfe_port = None
                                        self.tx_control_cells_counter = None
                                        self.tx_data_cell_counter = None
                                        self.tx_data_byte_counter = None
                                        self.rx_crc_errors_counter = None
                                        self.rx_lfec_fec_correctable_error = None
                                        self.rx_8b_10b_disparity_errors = None
                                        self.rx_control_cells_counter = None
                                        self.rx_data_cell_counter = None
                                        self.rx_data_byte_counter = None
                                        self.rx_dropped_retransmitted_control = None
                                        self.tx_asyn_fifo_rate = None
                                        self.rx_asyn_fifo_rate = None
                                        self.rx_lfec_fec_uncorrectable_errors = None
                                        self.rx_8b_10b_code_errors = None
                                        self.is_link_error = None
                                        self.link_crc_error = None
                                        self.link_size_error = None
                                        self.link_mis_align_error = None
                                        self.link_code_group_error = None
                                        self.link_no_sig_lock_error = None
                                        self.link_no_sig_accept_error = None
                                        self.link_tokens_error = None
                                        self.error_token_count = None
                                        self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)



                                class Brief(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief, self).__init__()

                                        self.yang_name = "brief"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "brief"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "brief"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Brief.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)




                                class Detail(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data_idx
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`DataIdx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail.DataIdx>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail, self).__init__()

                                        self.yang_name = "detail"
                                        self.yang_parent_name = "statistics"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("data_idx", ("data_idx", Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail.DataIdx))])
                                        self._leafs = OrderedDict()

                                        self.data_idx = YList(self)
                                        self._segment_path = lambda: "detail"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail, [], name, value)


                                    class DataIdx(Entity):
                                        """
                                        
                                        
                                        .. attribute:: port_data_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rack_num
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: sfe_port
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_disparity_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_8b_10b_code_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: is_link_error
                                        
                                        	
                                        	**type**\: bool
                                        
                                        	**config**\: False
                                        
                                        	**default value**\: false
                                        
                                        .. attribute:: link_crc_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_size_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_mis_align_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_code_group_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_lock_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_no_sig_accept_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_tokens_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_token_count
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail.DataIdx, self).__init__()

                                            self.yang_name = "data_idx"
                                            self.yang_parent_name = "detail"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['port_data_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('port_data_idx', (YLeaf(YType.int64, 'port_data_idx'), ['int'])),
                                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                                ('sfe_port', (YLeaf(YType.str, 'sfe_port'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_8b_10b_disparity_errors', (YLeaf(YType.uint64, 'RX_8b_10b_disparity_errors'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_8b_10b_code_errors', (YLeaf(YType.uint64, 'RX_8b_10b_code_errors'), ['int'])),
                                                ('is_link_error', (YLeaf(YType.boolean, 'is_link_error'), ['bool'])),
                                                ('link_crc_error', (YLeaf(YType.uint32, 'link_crc_error'), ['int'])),
                                                ('link_size_error', (YLeaf(YType.uint32, 'link_size_error'), ['int'])),
                                                ('link_mis_align_error', (YLeaf(YType.uint32, 'link_mis_align_error'), ['int'])),
                                                ('link_code_group_error', (YLeaf(YType.uint32, 'link_code_group_error'), ['int'])),
                                                ('link_no_sig_lock_error', (YLeaf(YType.uint32, 'link_no_sig_lock_error'), ['int'])),
                                                ('link_no_sig_accept_error', (YLeaf(YType.uint32, 'link_no_sig_accept_error'), ['int'])),
                                                ('link_tokens_error', (YLeaf(YType.uint32, 'link_tokens_error'), ['int'])),
                                                ('error_token_count', (YLeaf(YType.uint32, 'error_token_count'), ['int'])),
                                            ])
                                            self.port_data_idx = None
                                            self.rack_num = None
                                            self.sfe_port = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_8b_10b_disparity_errors = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_dropped_retransmitted_control = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_8b_10b_code_errors = None
                                            self.is_link_error = None
                                            self.link_crc_error = None
                                            self.link_size_error = None
                                            self.link_mis_align_error = None
                                            self.link_code_group_error = None
                                            self.link_no_sig_lock_error = None
                                            self.link_no_sig_accept_error = None
                                            self.link_tokens_error = None
                                            self.error_token_count = None
                                            self._segment_path = lambda: "data_idx" + "[port_data_idx='" + str(self.port_data_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Link.NodeLocation.Port.Tx.Statistics.Detail.DataIdx, ['port_data_idx', 'rack_num', 'sfe_port', 'tx_control_cells_counter', 'tx_data_cell_counter', 'tx_data_byte_counter', 'rx_crc_errors_counter', 'rx_lfec_fec_correctable_error', 'rx_8b_10b_disparity_errors', 'rx_control_cells_counter', 'rx_data_cell_counter', 'rx_data_byte_counter', 'rx_dropped_retransmitted_control', 'tx_asyn_fifo_rate', 'rx_asyn_fifo_rate', 'rx_lfec_fec_uncorrectable_errors', 'rx_8b_10b_code_errors', 'is_link_error', 'link_crc_error', 'link_size_error', 'link_mis_align_error', 'link_code_group_error', 'link_no_sig_lock_error', 'link_no_sig_accept_error', 'link_tokens_error', 'error_token_count'], name, value)









            class Sfe(Entity):
                """
                Switch Fabric Element option
                
                .. attribute:: rack
                
                	
                	**type**\: list of  		 :py:class:`Rack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.Sfe, self).__init__()

                    self.yang_name = "sfe"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("rack", ("rack", Controller.Fabric.Oper.Sfe.Rack))])
                    self._leafs = OrderedDict()

                    self.rack = YList(self)
                    self._segment_path = lambda: "sfe"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.Sfe, [], name, value)


                class Rack(Entity):
                    """
                    
                    
                    .. attribute:: rack_number  (key)
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: asic_stages
                    
                    	
                    	**type**\: list of  		 :py:class:`AsicStages <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.Sfe.Rack, self).__init__()

                        self.yang_name = "rack"
                        self.yang_parent_name = "sfe"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['rack_number']
                        self._child_classes = OrderedDict([("asic_stages", ("asic_stages", Controller.Fabric.Oper.Sfe.Rack.AsicStages))])
                        self._leafs = OrderedDict([
                            ('rack_number', (YLeaf(YType.int32, 'rack_number'), ['int'])),
                        ])
                        self.rack_number = None

                        self.asic_stages = YList(self)
                        self._segment_path = lambda: "rack" + "[rack_number='" + str(self.rack_number) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/sfe/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack, ['rack_number'], name, value)


                    class AsicStages(Entity):
                        """
                        
                        
                        .. attribute:: asic_stage_name  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** fia\|s123\|s13\|s2\|b2b
                        
                        	**config**\: False
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location>`
                        
                        	**config**\: False
                        
                        .. attribute:: asic_list
                        
                        	
                        	**type**\: list of  		 :py:class:`AsicList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList>`
                        
                        	**config**\: False
                        
                        .. attribute:: brief
                        
                        	
                        	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief>`
                        
                        	**config**\: False
                        
                        .. attribute:: detail
                        
                        	
                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.Sfe.Rack.AsicStages, self).__init__()

                            self.yang_name = "asic_stages"
                            self.yang_parent_name = "rack"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['asic_stage_name']
                            self._child_classes = OrderedDict([("location", ("location", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location)), ("asic_list", ("asic_list", Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList)), ("brief", ("brief", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail))])
                            self._leafs = OrderedDict([
                                ('asic_stage_name', (YLeaf(YType.str, 'asic_stage_name'), ['str'])),
                            ])
                            self.asic_stage_name = None

                            self.brief = Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief()
                            self.brief.parent = self
                            self._children_name_map["brief"] = "brief"

                            self.detail = Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail()
                            self.detail.parent = self
                            self._children_name_map["detail"] = "detail"

                            self.location = YList(self)
                            self.asic_list = YList(self)
                            self._segment_path = lambda: "asic_stages" + "[asic_stage_name='" + str(self.asic_stage_name) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages, ['asic_stage_name'], name, value)


                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: loc_str  (key)
                            
                            	
                            	**type**\: str
                            
                            	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5]))/(0?[0\-5]))\|((0?[0\-9]\|1[0\-5])/(0?[0\-9]\|1[0\-5])/(0?[0\-5]))\|(([F\|f][0\-3])/([F\|f][C\|c](0?[0\-9]\|1[0\-1]))/(0?[0\-2]))
                            
                            	**config**\: False
                            
                            .. attribute:: asic_list
                            
                            	
                            	**type**\: list of  		 :py:class:`AsicList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList>`
                            
                            	**config**\: False
                            
                            .. attribute:: brief
                            
                            	
                            	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief>`
                            
                            	**config**\: False
                            
                            .. attribute:: detail
                            
                            	
                            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "asic_stages"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['loc_str']
                                self._child_classes = OrderedDict([("asic_list", ("asic_list", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList)), ("brief", ("brief", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief)), ("detail", ("detail", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail))])
                                self._leafs = OrderedDict([
                                    ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                                ])
                                self.loc_str = None

                                self.brief = Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief()
                                self.brief.parent = self
                                self._children_name_map["brief"] = "brief"

                                self.detail = Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail()
                                self.detail.parent = self
                                self._children_name_map["detail"] = "detail"

                                self.asic_list = YList(self)
                                self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location, ['loc_str'], name, value)


                            class AsicList(Entity):
                                """
                                
                                
                                .. attribute:: asic_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: asic_loc_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: down_flags
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: fab_group
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList, self).__init__()

                                    self.yang_name = "asic_list"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['asic_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList.History))])
                                    self._leafs = OrderedDict([
                                        ('asic_idx', (YLeaf(YType.int64, 'asic_idx'), ['int'])),
                                        ('asic_loc_str', (YLeaf(YType.str, 'asic_loc_str'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                        ('fab_group', (YLeaf(YType.str, 'fab_group'), ['str'])),
                                    ])
                                    self.asic_idx = None
                                    self.asic_loc_str = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.down_flags = None
                                    self.fab_group = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "asic_list" + "[asic_idx='" + str(self.asic_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList, ['asic_idx', 'asic_loc_str', 'admin_state', 'oper_state', 'down_flags', 'fab_group'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "asic_list"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.AsicList.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                            class Brief(Entity):
                                """
                                
                                
                                .. attribute:: asic_list
                                
                                	
                                	**type**\: list of  		 :py:class:`AsicList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief, self).__init__()

                                    self.yang_name = "brief"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("asic_list", ("asic_list", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList))])
                                    self._leafs = OrderedDict()

                                    self.asic_list = YList(self)
                                    self._segment_path = lambda: "brief"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief, [], name, value)


                                class AsicList(Entity):
                                    """
                                    
                                    
                                    .. attribute:: asic_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: asic_loc_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: down_flags
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_group
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList, self).__init__()

                                        self.yang_name = "asic_list"
                                        self.yang_parent_name = "brief"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['asic_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList.History))])
                                        self._leafs = OrderedDict([
                                            ('asic_idx', (YLeaf(YType.int64, 'asic_idx'), ['int'])),
                                            ('asic_loc_str', (YLeaf(YType.str, 'asic_loc_str'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                            ('fab_group', (YLeaf(YType.str, 'fab_group'), ['str'])),
                                        ])
                                        self.asic_idx = None
                                        self.asic_loc_str = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.down_flags = None
                                        self.fab_group = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "asic_list" + "[asic_idx='" + str(self.asic_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList, ['asic_idx', 'asic_loc_str', 'admin_state', 'oper_state', 'down_flags', 'fab_group'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "asic_list"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Brief.AsicList.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                            class Detail(Entity):
                                """
                                
                                
                                .. attribute:: asic_list
                                
                                	
                                	**type**\: list of  		 :py:class:`AsicList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail, self).__init__()

                                    self.yang_name = "detail"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("asic_list", ("asic_list", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList))])
                                    self._leafs = OrderedDict()

                                    self.asic_list = YList(self)
                                    self._segment_path = lambda: "detail"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail, [], name, value)


                                class AsicList(Entity):
                                    """
                                    
                                    
                                    .. attribute:: asic_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: asic_loc_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: down_flags
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_group
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList, self).__init__()

                                        self.yang_name = "asic_list"
                                        self.yang_parent_name = "detail"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['asic_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList.History))])
                                        self._leafs = OrderedDict([
                                            ('asic_idx', (YLeaf(YType.int64, 'asic_idx'), ['int'])),
                                            ('asic_loc_str', (YLeaf(YType.str, 'asic_loc_str'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                            ('fab_group', (YLeaf(YType.str, 'fab_group'), ['str'])),
                                        ])
                                        self.asic_idx = None
                                        self.asic_loc_str = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.down_flags = None
                                        self.fab_group = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "asic_list" + "[asic_idx='" + str(self.asic_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList, ['asic_idx', 'asic_loc_str', 'admin_state', 'oper_state', 'down_flags', 'fab_group'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "asic_list"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Location.Detail.AsicList.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)






                        class AsicList(Entity):
                            """
                            
                            
                            .. attribute:: asic_idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-9223372036854775808..9223372036854775807
                            
                            	**config**\: False
                            
                            .. attribute:: asic_loc_str
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: admin_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: oper_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: down_flags
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: fab_group
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: history
                            
                            	
                            	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList.History>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList, self).__init__()

                                self.yang_name = "asic_list"
                                self.yang_parent_name = "asic_stages"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['asic_idx']
                                self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList.History))])
                                self._leafs = OrderedDict([
                                    ('asic_idx', (YLeaf(YType.int64, 'asic_idx'), ['int'])),
                                    ('asic_loc_str', (YLeaf(YType.str, 'asic_loc_str'), ['str'])),
                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                    ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                    ('fab_group', (YLeaf(YType.str, 'fab_group'), ['str'])),
                                ])
                                self.asic_idx = None
                                self.asic_loc_str = None
                                self.admin_state = None
                                self.oper_state = None
                                self.down_flags = None
                                self.fab_group = None

                                self.history = YList(self)
                                self._segment_path = lambda: "asic_list" + "[asic_idx='" + str(self.asic_idx) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList, ['asic_idx', 'asic_loc_str', 'admin_state', 'oper_state', 'down_flags', 'fab_group'], name, value)


                            class History(Entity):
                                """
                                
                                
                                .. attribute:: history_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-2147483648..2147483647
                                
                                	**config**\: False
                                
                                .. attribute:: time_stamp
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: error_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList.History, self).__init__()

                                    self.yang_name = "history"
                                    self.yang_parent_name = "asic_list"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['history_idx']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                        ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                    ])
                                    self.history_idx = None
                                    self.time_stamp = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.error_state = None
                                    self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.AsicList.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)




                        class Brief(Entity):
                            """
                            
                            
                            .. attribute:: asic_list
                            
                            	
                            	**type**\: list of  		 :py:class:`AsicList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief, self).__init__()

                                self.yang_name = "brief"
                                self.yang_parent_name = "asic_stages"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("asic_list", ("asic_list", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList))])
                                self._leafs = OrderedDict()

                                self.asic_list = YList(self)
                                self._segment_path = lambda: "brief"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief, [], name, value)


                            class AsicList(Entity):
                                """
                                
                                
                                .. attribute:: asic_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: asic_loc_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: down_flags
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: fab_group
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList, self).__init__()

                                    self.yang_name = "asic_list"
                                    self.yang_parent_name = "brief"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['asic_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList.History))])
                                    self._leafs = OrderedDict([
                                        ('asic_idx', (YLeaf(YType.int64, 'asic_idx'), ['int'])),
                                        ('asic_loc_str', (YLeaf(YType.str, 'asic_loc_str'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                        ('fab_group', (YLeaf(YType.str, 'fab_group'), ['str'])),
                                    ])
                                    self.asic_idx = None
                                    self.asic_loc_str = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.down_flags = None
                                    self.fab_group = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "asic_list" + "[asic_idx='" + str(self.asic_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList, ['asic_idx', 'asic_loc_str', 'admin_state', 'oper_state', 'down_flags', 'fab_group'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "asic_list"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Brief.AsicList.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)





                        class Detail(Entity):
                            """
                            
                            
                            .. attribute:: asic_list
                            
                            	
                            	**type**\: list of  		 :py:class:`AsicList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail, self).__init__()

                                self.yang_name = "detail"
                                self.yang_parent_name = "asic_stages"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("asic_list", ("asic_list", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList))])
                                self._leafs = OrderedDict()

                                self.asic_list = YList(self)
                                self._segment_path = lambda: "detail"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail, [], name, value)


                            class AsicList(Entity):
                                """
                                
                                
                                .. attribute:: asic_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: asic_loc_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: down_flags
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: fab_group
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList, self).__init__()

                                    self.yang_name = "asic_list"
                                    self.yang_parent_name = "detail"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['asic_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList.History))])
                                    self._leafs = OrderedDict([
                                        ('asic_idx', (YLeaf(YType.int64, 'asic_idx'), ['int'])),
                                        ('asic_loc_str', (YLeaf(YType.str, 'asic_loc_str'), ['str'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('down_flags', (YLeaf(YType.str, 'down_flags'), ['str'])),
                                        ('fab_group', (YLeaf(YType.str, 'fab_group'), ['str'])),
                                    ])
                                    self.asic_idx = None
                                    self.asic_loc_str = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.down_flags = None
                                    self.fab_group = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "asic_list" + "[asic_idx='" + str(self.asic_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList, ['asic_idx', 'asic_loc_str', 'admin_state', 'oper_state', 'down_flags', 'fab_group'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "asic_list"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.Sfe.Rack.AsicStages.Detail.AsicList.History, ['history_idx', 'time_stamp', 'admin_state', 'oper_state', 'error_state'], name, value)








            class FsdbPla(Entity):
                """
                plane availability status option
                
                .. attribute:: rack
                
                	Rack
                	**type**\: list of  		 :py:class:`Rack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FsdbPla, self).__init__()

                    self.yang_name = "fsdb_pla"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("rack", ("rack", Controller.Fabric.Oper.FsdbPla.Rack))])
                    self._leafs = OrderedDict()

                    self.rack = YList(self)
                    self._segment_path = lambda: "fsdb_pla"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FsdbPla, [], name, value)


                class Rack(Entity):
                    """
                    Rack
                    
                    .. attribute:: rack_number  (key)
                    
                    	
                    	**type**\: int
                    
                    	**range:** \-2147483648..2147483647
                    
                    	**config**\: False
                    
                    .. attribute:: asic_stages
                    
                    	
                    	**type**\: list of  		 :py:class:`AsicStages <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack.AsicStages>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbPla.Rack, self).__init__()

                        self.yang_name = "rack"
                        self.yang_parent_name = "fsdb_pla"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['rack_number']
                        self._child_classes = OrderedDict([("asic_stages", ("asic_stages", Controller.Fabric.Oper.FsdbPla.Rack.AsicStages))])
                        self._leafs = OrderedDict([
                            ('rack_number', (YLeaf(YType.int32, 'rack_number'), ['int'])),
                        ])
                        self.rack_number = None

                        self.asic_stages = YList(self)
                        self._segment_path = lambda: "rack" + "[rack_number='" + str(self.rack_number) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdb_pla/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack, ['rack_number'], name, value)


                    class AsicStages(Entity):
                        """
                        
                        
                        .. attribute:: asic_stage_idx  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** s1\|s2\|s3\|s123
                        
                        	**config**\: False
                        
                        .. attribute:: asic_stage_name
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** s1\|s2\|s3\|s123
                        
                        	**config**\: False
                        
                        .. attribute:: rack_number
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: plane_number
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: fabids
                        
                        	
                        	**type**\: list of  		 :py:class:`Fabids <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Fabids>`
                        
                        	**config**\: False
                        
                        .. attribute:: down_fabids
                        
                        	
                        	**type**\: list of  		 :py:class:`DownFabids <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.DownFabids>`
                        
                        	**config**\: False
                        
                        .. attribute:: destination
                        
                        	
                        	**type**\: list of  		 :py:class:`Destination <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages, self).__init__()

                            self.yang_name = "asic_stages"
                            self.yang_parent_name = "rack"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['asic_stage_idx']
                            self._child_classes = OrderedDict([("fabids", ("fabids", Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Fabids)), ("down_fabids", ("down_fabids", Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.DownFabids)), ("destination", ("destination", Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination))])
                            self._leafs = OrderedDict([
                                ('asic_stage_idx', (YLeaf(YType.str, 'asic_stage_idx'), ['str'])),
                                ('asic_stage_name', (YLeaf(YType.str, 'asic_stage_name'), ['str'])),
                                ('rack_number', (YLeaf(YType.str, 'rack_number'), ['str'])),
                                ('plane_number', (YLeaf(YType.int32, 'plane_number'), ['int'])),
                            ])
                            self.asic_stage_idx = None
                            self.asic_stage_name = None
                            self.rack_number = None
                            self.plane_number = None

                            self.fabids = YList(self)
                            self.down_fabids = YList(self)
                            self.destination = YList(self)
                            self._segment_path = lambda: "asic_stages" + "[asic_stage_idx='" + str(self.asic_stage_idx) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages, ['asic_stage_idx', 'asic_stage_name', 'rack_number', 'plane_number'], name, value)


                        class Fabids(Entity):
                            """
                            
                            
                            .. attribute:: idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: fabid_address
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_num
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: plane_0_mask
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_1_mask
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_2_mask
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_3_mask
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_4_mask
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: plane_5_mask
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: min_links_per_asic
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: max_links_per_asic
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: total_links
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: min_up_links_per_asic
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: max_up_links_per_asic
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: total_up_links
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Fabids, self).__init__()

                                self.yang_name = "fabids"
                                self.yang_parent_name = "asic_stages"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                    ('fabid_address', (YLeaf(YType.str, 'fabid_address'), ['str'])),
                                    ('plane_num', (YLeaf(YType.int32, 'plane_num'), ['int'])),
                                    ('plane_0_mask', (YLeaf(YType.str, 'plane_0_mask'), ['str'])),
                                    ('plane_1_mask', (YLeaf(YType.str, 'plane_1_mask'), ['str'])),
                                    ('plane_2_mask', (YLeaf(YType.str, 'plane_2_mask'), ['str'])),
                                    ('plane_3_mask', (YLeaf(YType.str, 'plane_3_mask'), ['str'])),
                                    ('plane_4_mask', (YLeaf(YType.str, 'plane_4_mask'), ['str'])),
                                    ('plane_5_mask', (YLeaf(YType.str, 'plane_5_mask'), ['str'])),
                                    ('min_links_per_asic', (YLeaf(YType.int32, 'min_links_per_asic'), ['int'])),
                                    ('max_links_per_asic', (YLeaf(YType.int32, 'max_links_per_asic'), ['int'])),
                                    ('total_links', (YLeaf(YType.int32, 'total_links'), ['int'])),
                                    ('min_up_links_per_asic', (YLeaf(YType.int32, 'min_up_links_per_asic'), ['int'])),
                                    ('max_up_links_per_asic', (YLeaf(YType.int32, 'max_up_links_per_asic'), ['int'])),
                                    ('total_up_links', (YLeaf(YType.int32, 'total_up_links'), ['int'])),
                                ])
                                self.idx = None
                                self.fabid_address = None
                                self.plane_num = None
                                self.plane_0_mask = None
                                self.plane_1_mask = None
                                self.plane_2_mask = None
                                self.plane_3_mask = None
                                self.plane_4_mask = None
                                self.plane_5_mask = None
                                self.min_links_per_asic = None
                                self.max_links_per_asic = None
                                self.total_links = None
                                self.min_up_links_per_asic = None
                                self.max_up_links_per_asic = None
                                self.total_up_links = None
                                self._segment_path = lambda: "fabids" + "[idx='" + str(self.idx) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Fabids, ['idx', 'fabid_address', 'plane_num', 'plane_0_mask', 'plane_1_mask', 'plane_2_mask', 'plane_3_mask', 'plane_4_mask', 'plane_5_mask', 'min_links_per_asic', 'max_links_per_asic', 'total_links', 'min_up_links_per_asic', 'max_up_links_per_asic', 'total_up_links'], name, value)



                        class DownFabids(Entity):
                            """
                            
                            
                            .. attribute:: idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: fabid_address
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: fabid_status
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.DownFabids, self).__init__()

                                self.yang_name = "down_fabids"
                                self.yang_parent_name = "asic_stages"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                    ('fabid_address', (YLeaf(YType.str, 'fabid_address'), ['str'])),
                                    ('fabid_status', (YLeaf(YType.str, 'fabid_status'), ['str'])),
                                ])
                                self.idx = None
                                self.fabid_address = None
                                self.fabid_status = None
                                self._segment_path = lambda: "down_fabids" + "[idx='" + str(self.idx) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.DownFabids, ['idx', 'fabid_address', 'fabid_status'], name, value)



                        class Destination(Entity):
                            """
                            
                            
                            .. attribute:: amba_id  (key)
                            
                            	
                            	**type**\: str
                            
                            	**pattern:** (0?[0\-9]\|1[0\-5])/(0?[0\-7])/(0?[0\-5])\|([0\-9]\|[1\-9][0\-9]\|[1\-9][0\-9][0\-9]\|10[0\-1][0\-9]\|102[0\-3])
                            
                            	**config**\: False
                            
                            .. attribute:: planes
                            
                            	
                            	**type**\: list of  		 :py:class:`Planes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination, self).__init__()

                                self.yang_name = "destination"
                                self.yang_parent_name = "asic_stages"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['amba_id']
                                self._child_classes = OrderedDict([("planes", ("planes", Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes))])
                                self._leafs = OrderedDict([
                                    ('amba_id', (YLeaf(YType.str, 'amba_id'), ['str'])),
                                ])
                                self.amba_id = None

                                self.planes = YList(self)
                                self._segment_path = lambda: "destination" + "[amba_id='" + str(self.amba_id) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination, ['amba_id'], name, value)


                            class Planes(Entity):
                                """
                                
                                
                                .. attribute:: plane_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-2147483648..2147483647
                                
                                	**config**\: False
                                
                                .. attribute:: plane_num
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-2147483648..2147483647
                                
                                	**config**\: False
                                
                                .. attribute:: fabid_name
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: show_fabid
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                .. attribute:: asic_stage
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: cards
                                
                                	
                                	**type**\: list of  		 :py:class:`Cards <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes, self).__init__()

                                    self.yang_name = "planes"
                                    self.yang_parent_name = "destination"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['plane_idx']
                                    self._child_classes = OrderedDict([("cards", ("cards", Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards))])
                                    self._leafs = OrderedDict([
                                        ('plane_idx', (YLeaf(YType.int32, 'plane_idx'), ['int'])),
                                        ('plane_num', (YLeaf(YType.int32, 'plane_num'), ['int'])),
                                        ('fabid_name', (YLeaf(YType.str, 'fabid_name'), ['str'])),
                                        ('show_fabid', (YLeaf(YType.boolean, 'show_fabid'), ['bool'])),
                                        ('asic_stage', (YLeaf(YType.str, 'asic_stage'), ['str'])),
                                    ])
                                    self.plane_idx = None
                                    self.plane_num = None
                                    self.fabid_name = None
                                    self.show_fabid = None
                                    self.asic_stage = None

                                    self.cards = YList(self)
                                    self._segment_path = lambda: "planes" + "[plane_idx='" + str(self.plane_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes, ['plane_idx', 'plane_num', 'fabid_name', 'show_fabid', 'asic_stage'], name, value)


                                class Cards(Entity):
                                    """
                                    
                                    
                                    .. attribute:: card_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: asics
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`Asics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards.Asics>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards, self).__init__()

                                        self.yang_name = "cards"
                                        self.yang_parent_name = "planes"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['card_idx']
                                        self._child_classes = OrderedDict([("asics", ("asics", Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards.Asics))])
                                        self._leafs = OrderedDict([
                                            ('card_idx', (YLeaf(YType.int32, 'card_idx'), ['int'])),
                                        ])
                                        self.card_idx = None

                                        self.asics = YList(self)
                                        self._segment_path = lambda: "cards" + "[card_idx='" + str(self.card_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards, ['card_idx'], name, value)


                                    class Asics(Entity):
                                        """
                                        
                                        
                                        .. attribute:: asic_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: asic_rsa
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: reachability_mask
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: linkup_mask
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: all_reach_mask
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: total_links
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: total_up_links
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: total_all_reach_links
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: asic_stage_name
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**pattern:** s1\|s2\|s3\|s123
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards.Asics, self).__init__()

                                            self.yang_name = "asics"
                                            self.yang_parent_name = "cards"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['asic_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('asic_idx', (YLeaf(YType.int32, 'asic_idx'), ['int'])),
                                                ('asic_rsa', (YLeaf(YType.str, 'asic_RSA'), ['str'])),
                                                ('reachability_mask', (YLeaf(YType.str, 'reachability_mask'), ['str'])),
                                                ('linkup_mask', (YLeaf(YType.str, 'linkup_mask'), ['str'])),
                                                ('all_reach_mask', (YLeaf(YType.str, 'all_reach_mask'), ['str'])),
                                                ('total_links', (YLeaf(YType.int32, 'total_links'), ['int'])),
                                                ('total_up_links', (YLeaf(YType.int32, 'total_up_links'), ['int'])),
                                                ('total_all_reach_links', (YLeaf(YType.int32, 'total_all_reach_links'), ['int'])),
                                                ('asic_stage_name', (YLeaf(YType.str, 'asic_stage_name'), ['str'])),
                                            ])
                                            self.asic_idx = None
                                            self.asic_rsa = None
                                            self.reachability_mask = None
                                            self.linkup_mask = None
                                            self.all_reach_mask = None
                                            self.total_links = None
                                            self.total_up_links = None
                                            self.total_all_reach_links = None
                                            self.asic_stage_name = None
                                            self._segment_path = lambda: "asics" + "[asic_idx='" + str(self.asic_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Fabric.Oper.FsdbPla.Rack.AsicStages.Destination.Planes.Cards.Asics, ['asic_idx', 'asic_rsa', 'reachability_mask', 'linkup_mask', 'all_reach_mask', 'total_links', 'total_up_links', 'total_all_reach_links', 'asic_stage_name'], name, value)









            class FsdbSrvr(Entity):
                """
                FSDB Server information
                
                .. attribute:: fsdb_server
                
                	
                	**type**\:  :py:class:`FsdbServer <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbSrvr.FsdbServer>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Fabric.Oper.FsdbSrvr, self).__init__()

                    self.yang_name = "fsdb_srvr"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("fsdb_server", ("fsdb_server", Controller.Fabric.Oper.FsdbSrvr.FsdbServer))])
                    self._leafs = OrderedDict()

                    self.fsdb_server = Controller.Fabric.Oper.FsdbSrvr.FsdbServer()
                    self.fsdb_server.parent = self
                    self._children_name_map["fsdb_server"] = "fsdb_server"
                    self._segment_path = lambda: "fsdb_srvr"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Fabric.Oper.FsdbSrvr, [], name, value)


                class FsdbServer(Entity):
                    """
                    
                    
                    .. attribute:: trace
                    
                    	show traceable processes
                    	**type**\: list of  		 :py:class:`Trace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Fabric.Oper.FsdbSrvr.FsdbServer, self).__init__()

                        self.yang_name = "fsdb_server"
                        self.yang_parent_name = "fsdb_srvr"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("trace", ("trace", Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace))])
                        self._leafs = OrderedDict()

                        self.trace = YList(self)
                        self._segment_path = lambda: "fsdb_server"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdb_srvr/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Fabric.Oper.FsdbSrvr.FsdbServer, [], name, value)


                    class Trace(Entity):
                        """
                        show traceable processes
                        
                        .. attribute:: buffer  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace, self).__init__()

                            self.yang_name = "trace"
                            self.yang_parent_name = "fsdb_server"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['buffer']
                            self._child_classes = OrderedDict([("location", ("location", Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location))])
                            self._leafs = OrderedDict([
                                ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                            ])
                            self.buffer = None

                            self.location = YList(self)
                            self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric/oper/fsdb_srvr/fsdb_server/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace, [u'buffer'], name, value)


                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: location_name  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: all_options
                            
                            	
                            	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "trace"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['location_name']
                                self._child_classes = OrderedDict([("all-options", ("all_options", Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions))])
                                self._leafs = OrderedDict([
                                    ('location_name', (YLeaf(YType.str, 'location_name'), ['str'])),
                                ])
                                self.location_name = None

                                self.all_options = YList(self)
                                self._segment_path = lambda: "location" + "[location_name='" + str(self.location_name) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location, [u'location_name'], name, value)


                            class AllOptions(Entity):
                                """
                                
                                
                                .. attribute:: option  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: trace_blocks
                                
                                	
                                	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions.TraceBlocks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions, self).__init__()

                                    self.yang_name = "all-options"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['option']
                                    self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions.TraceBlocks))])
                                    self._leafs = OrderedDict([
                                        ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                    ])
                                    self.option = None

                                    self.trace_blocks = YList(self)
                                    self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions, [u'option'], name, value)


                                class TraceBlocks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data
                                    
                                    	Trace output block
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions.TraceBlocks, self).__init__()

                                        self.yang_name = "trace-blocks"
                                        self.yang_parent_name = "all-options"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                        ])
                                        self.data = None
                                        self._segment_path = lambda: "trace-blocks"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Fabric.Oper.FsdbSrvr.FsdbServer.Trace.Location.AllOptions.TraceBlocks, [u'data'], name, value)










    class SfeOper(Entity):
        """
        
        
        .. attribute:: sfe
        
        	Fabric SFE driver commands
        	**type**\:  :py:class:`Sfe <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe>`
        
        	**config**\: False
        
        .. attribute:: sfe_trace
        
        	
        	**type**\:  :py:class:`SfeTrace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.SfeTrace>`
        
        	**config**\: False
        
        

        """

        _prefix = 'calvados_controllers'
        _revision = '2017-10-11'

        def __init__(self):
            super(Controller.SfeOper, self).__init__()

            self.yang_name = "sfe_oper"
            self.yang_parent_name = "controller"
            self.is_top_level_class = False
            self.has_list_ancestor = False
            self.ylist_key_names = []
            self._child_classes = OrderedDict([("sfe", ("sfe", Controller.SfeOper.Sfe)), ("sfe_trace", ("sfe_trace", Controller.SfeOper.SfeTrace))])
            self._leafs = OrderedDict()

            self.sfe = Controller.SfeOper.Sfe()
            self.sfe.parent = self
            self._children_name_map["sfe"] = "sfe"

            self.sfe_trace = Controller.SfeOper.SfeTrace()
            self.sfe_trace.parent = self
            self._children_name_map["sfe_trace"] = "sfe_trace"
            self._segment_path = lambda: "sfe_oper"
            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/%s" % self._segment_path()
            self._is_frozen = True

        def __setattr__(self, name, value):
            self._perform_setattr(Controller.SfeOper, [], name, value)


        class Sfe(Entity):
            """
            Fabric SFE driver commands
            
            .. attribute:: driver
            
            	
            	**type**\:  :py:class:`Driver <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Driver>`
            
            	**config**\: False
            
            .. attribute:: statistics
            
            	
            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Statistics>`
            
            	**config**\: False
            
            .. attribute:: link_info
            
            	
            	**type**\:  :py:class:`LinkInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo>`
            
            	**config**\: False
            
            .. attribute:: diagshell
            
            	
            	**type**\:  :py:class:`Diagshell <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Diagshell>`
            
            	**config**\: False
            
            .. attribute:: register
            
            	
            	**type**\:  :py:class:`Register <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Register>`
            
            	**config**\: False
            
            .. attribute:: dump_file
            
            	
            	**type**\:  :py:class:`DumpFile <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.DumpFile>`
            
            	**config**\: False
            
            .. attribute:: parse
            
            	
            	**type**\:  :py:class:`Parse <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Parse>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.SfeOper.Sfe, self).__init__()

                self.yang_name = "sfe"
                self.yang_parent_name = "sfe_oper"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("driver", ("driver", Controller.SfeOper.Sfe.Driver)), ("statistics", ("statistics", Controller.SfeOper.Sfe.Statistics)), ("link-info", ("link_info", Controller.SfeOper.Sfe.LinkInfo)), ("diagshell", ("diagshell", Controller.SfeOper.Sfe.Diagshell)), ("register", ("register", Controller.SfeOper.Sfe.Register)), ("dump-file", ("dump_file", Controller.SfeOper.Sfe.DumpFile)), ("parse", ("parse", Controller.SfeOper.Sfe.Parse))])
                self._leafs = OrderedDict()

                self.driver = Controller.SfeOper.Sfe.Driver()
                self.driver.parent = self
                self._children_name_map["driver"] = "driver"

                self.statistics = Controller.SfeOper.Sfe.Statistics()
                self.statistics.parent = self
                self._children_name_map["statistics"] = "statistics"

                self.link_info = Controller.SfeOper.Sfe.LinkInfo()
                self.link_info.parent = self
                self._children_name_map["link_info"] = "link-info"

                self.diagshell = Controller.SfeOper.Sfe.Diagshell()
                self.diagshell.parent = self
                self._children_name_map["diagshell"] = "diagshell"

                self.register = Controller.SfeOper.Sfe.Register()
                self.register.parent = self
                self._children_name_map["register"] = "register"

                self.dump_file = Controller.SfeOper.Sfe.DumpFile()
                self.dump_file.parent = self
                self._children_name_map["dump_file"] = "dump-file"

                self.parse = Controller.SfeOper.Sfe.Parse()
                self.parse.parent = self
                self._children_name_map["parse"] = "parse"
                self._segment_path = lambda: "sfe"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.SfeOper.Sfe, [], name, value)


            class Driver(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Driver.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.Sfe.Driver, self).__init__()

                    self.yang_name = "driver"
                    self.yang_parent_name = "sfe"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.Sfe.Driver.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "driver"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.Sfe.Driver, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: loc_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5])))\|(0/([R\|r][P\|p]0))
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: location (R/S).
                    
                    .. attribute:: drvr_info
                    
                    	
                    	**type**\: list of  		 :py:class:`DrvrInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Driver.Location.DrvrInfo>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.Sfe.Driver.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "driver"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['loc_str']
                        self._child_classes = OrderedDict([("drvr_info", ("drvr_info", Controller.SfeOper.Sfe.Driver.Location.DrvrInfo))])
                        self._leafs = OrderedDict([
                            ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.loc_str = None
                        self.description = None

                        self.drvr_info = YList(self)
                        self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/driver/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.Sfe.Driver.Location, [u'loc_str', u'description'], name, value)


                    class DrvrInfo(Entity):
                        """
                        
                        
                        .. attribute:: idx  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** \-2147483648..2147483647
                        
                        	**config**\: False
                        
                        .. attribute:: drv_version
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: coeff_major_rev
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: coeff_minor_rev
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: func_role
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: issu_role
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: rack_name
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: rack_type
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: rack_num
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: ip_address
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: card_avail_mask
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: asic_avail_mask
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: exp_asic_avail_mask
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..18446744073709551615
                        
                        	**config**\: False
                        
                        .. attribute:: ucmc_ratio
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: pm_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: platform_local_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: fsdb_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: fgid_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: cm_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: ccc_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: issu_mgr_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: peer_sfe_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: cxp_conn_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: pm_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: platform_local_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: fsdb_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: fgid_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: cm_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: issu_mgr_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: peer_sfe_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: cxp_reg_active
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: num_pm_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_platform_local_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_fsdb_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_fgid_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_fstats_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_cm_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_ccc_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_issu_mgr_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_peer_sfe_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: num_cxp_conn_reqs
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: is_gaspp_registered
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: is_cih_registered
                        
                        	
                        	**type**\: bool
                        
                        	**config**\: False
                        
                        .. attribute:: startup_time
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: asic_list
                        
                        	
                        	**type**\: list of  		 :py:class:`AsicList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Driver.Location.DrvrInfo.AsicList>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.Driver.Location.DrvrInfo, self).__init__()

                            self.yang_name = "drvr_info"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['idx']
                            self._child_classes = OrderedDict([("asic_list", ("asic_list", Controller.SfeOper.Sfe.Driver.Location.DrvrInfo.AsicList))])
                            self._leafs = OrderedDict([
                                ('idx', (YLeaf(YType.int32, 'idx'), ['int'])),
                                ('drv_version', (YLeaf(YType.uint32, 'drv_version'), ['int'])),
                                ('coeff_major_rev', (YLeaf(YType.uint32, 'coeff_major_rev'), ['int'])),
                                ('coeff_minor_rev', (YLeaf(YType.uint32, 'coeff_minor_rev'), ['int'])),
                                ('func_role', (YLeaf(YType.str, 'func_role'), ['str'])),
                                ('issu_role', (YLeaf(YType.str, 'issu_role'), ['str'])),
                                ('rack_name', (YLeaf(YType.str, 'rack_name'), ['str'])),
                                ('rack_type', (YLeaf(YType.str, 'rack_type'), ['str'])),
                                ('rack_num', (YLeaf(YType.str, 'rack_num'), ['str'])),
                                ('ip_address', (YLeaf(YType.str, 'ip_address'), ['str'])),
                                ('card_avail_mask', (YLeaf(YType.uint32, 'card_avail_mask'), ['int'])),
                                ('asic_avail_mask', (YLeaf(YType.uint64, 'asic_avail_mask'), ['int'])),
                                ('exp_asic_avail_mask', (YLeaf(YType.uint64, 'exp_asic_avail_mask'), ['int'])),
                                ('ucmc_ratio', (YLeaf(YType.uint32, 'ucmc_ratio'), ['int'])),
                                ('pm_conn_active', (YLeaf(YType.boolean, 'pm_conn_active'), ['bool'])),
                                ('platform_local_conn_active', (YLeaf(YType.boolean, 'platform_local_conn_active'), ['bool'])),
                                ('fsdb_conn_active', (YLeaf(YType.boolean, 'fsdb_conn_active'), ['bool'])),
                                ('fgid_conn_active', (YLeaf(YType.boolean, 'fgid_conn_active'), ['bool'])),
                                ('cm_conn_active', (YLeaf(YType.boolean, 'cm_conn_active'), ['bool'])),
                                ('ccc_conn_active', (YLeaf(YType.boolean, 'ccc_conn_active'), ['bool'])),
                                ('issu_mgr_conn_active', (YLeaf(YType.boolean, 'issu_mgr_conn_active'), ['bool'])),
                                ('peer_sfe_conn_active', (YLeaf(YType.boolean, 'peer_sfe_conn_active'), ['bool'])),
                                ('cxp_conn_active', (YLeaf(YType.boolean, 'cxp_conn_active'), ['bool'])),
                                ('pm_reg_active', (YLeaf(YType.boolean, 'pm_reg_active'), ['bool'])),
                                ('platform_local_reg_active', (YLeaf(YType.boolean, 'platform_local_reg_active'), ['bool'])),
                                ('fsdb_reg_active', (YLeaf(YType.boolean, 'fsdb_reg_active'), ['bool'])),
                                ('fgid_reg_active', (YLeaf(YType.boolean, 'fgid_reg_active'), ['bool'])),
                                ('cm_reg_active', (YLeaf(YType.boolean, 'cm_reg_active'), ['bool'])),
                                ('issu_mgr_reg_active', (YLeaf(YType.boolean, 'issu_mgr_reg_active'), ['bool'])),
                                ('peer_sfe_reg_active', (YLeaf(YType.boolean, 'peer_sfe_reg_active'), ['bool'])),
                                ('cxp_reg_active', (YLeaf(YType.boolean, 'cxp_reg_active'), ['bool'])),
                                ('num_pm_conn_reqs', (YLeaf(YType.uint8, 'num_pm_conn_reqs'), ['int'])),
                                ('num_platform_local_conn_reqs', (YLeaf(YType.uint8, 'num_platform_local_conn_reqs'), ['int'])),
                                ('num_fsdb_conn_reqs', (YLeaf(YType.uint8, 'num_fsdb_conn_reqs'), ['int'])),
                                ('num_fgid_conn_reqs', (YLeaf(YType.uint8, 'num_fgid_conn_reqs'), ['int'])),
                                ('num_fstats_conn_reqs', (YLeaf(YType.uint8, 'num_fstats_conn_reqs'), ['int'])),
                                ('num_cm_conn_reqs', (YLeaf(YType.uint8, 'num_cm_conn_reqs'), ['int'])),
                                ('num_ccc_conn_reqs', (YLeaf(YType.uint8, 'num_ccc_conn_reqs'), ['int'])),
                                ('num_issu_mgr_conn_reqs', (YLeaf(YType.uint8, 'num_issu_mgr_conn_reqs'), ['int'])),
                                ('num_peer_sfe_conn_reqs', (YLeaf(YType.uint8, 'num_peer_sfe_conn_reqs'), ['int'])),
                                ('num_cxp_conn_reqs', (YLeaf(YType.uint8, 'num_cxp_conn_reqs'), ['int'])),
                                ('is_gaspp_registered', (YLeaf(YType.boolean, 'is_gaspp_registered'), ['bool'])),
                                ('is_cih_registered', (YLeaf(YType.boolean, 'is_cih_registered'), ['bool'])),
                                ('startup_time', (YLeaf(YType.str, 'startup_time'), ['str'])),
                            ])
                            self.idx = None
                            self.drv_version = None
                            self.coeff_major_rev = None
                            self.coeff_minor_rev = None
                            self.func_role = None
                            self.issu_role = None
                            self.rack_name = None
                            self.rack_type = None
                            self.rack_num = None
                            self.ip_address = None
                            self.card_avail_mask = None
                            self.asic_avail_mask = None
                            self.exp_asic_avail_mask = None
                            self.ucmc_ratio = None
                            self.pm_conn_active = None
                            self.platform_local_conn_active = None
                            self.fsdb_conn_active = None
                            self.fgid_conn_active = None
                            self.cm_conn_active = None
                            self.ccc_conn_active = None
                            self.issu_mgr_conn_active = None
                            self.peer_sfe_conn_active = None
                            self.cxp_conn_active = None
                            self.pm_reg_active = None
                            self.platform_local_reg_active = None
                            self.fsdb_reg_active = None
                            self.fgid_reg_active = None
                            self.cm_reg_active = None
                            self.issu_mgr_reg_active = None
                            self.peer_sfe_reg_active = None
                            self.cxp_reg_active = None
                            self.num_pm_conn_reqs = None
                            self.num_platform_local_conn_reqs = None
                            self.num_fsdb_conn_reqs = None
                            self.num_fgid_conn_reqs = None
                            self.num_fstats_conn_reqs = None
                            self.num_cm_conn_reqs = None
                            self.num_ccc_conn_reqs = None
                            self.num_issu_mgr_conn_reqs = None
                            self.num_peer_sfe_conn_reqs = None
                            self.num_cxp_conn_reqs = None
                            self.is_gaspp_registered = None
                            self.is_cih_registered = None
                            self.startup_time = None

                            self.asic_list = YList(self)
                            self._segment_path = lambda: "drvr_info" + "[idx='" + str(self.idx) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.Driver.Location.DrvrInfo, [u'idx', u'drv_version', u'coeff_major_rev', u'coeff_minor_rev', u'func_role', u'issu_role', u'rack_name', u'rack_type', u'rack_num', u'ip_address', u'card_avail_mask', u'asic_avail_mask', u'exp_asic_avail_mask', u'ucmc_ratio', u'pm_conn_active', u'platform_local_conn_active', u'fsdb_conn_active', u'fgid_conn_active', u'cm_conn_active', u'ccc_conn_active', u'issu_mgr_conn_active', u'peer_sfe_conn_active', u'cxp_conn_active', u'pm_reg_active', u'platform_local_reg_active', u'fsdb_reg_active', u'fgid_reg_active', u'cm_reg_active', u'issu_mgr_reg_active', u'peer_sfe_reg_active', u'cxp_reg_active', u'num_pm_conn_reqs', u'num_platform_local_conn_reqs', u'num_fsdb_conn_reqs', u'num_fgid_conn_reqs', u'num_fstats_conn_reqs', u'num_cm_conn_reqs', u'num_ccc_conn_reqs', u'num_issu_mgr_conn_reqs', u'num_peer_sfe_conn_reqs', u'num_cxp_conn_reqs', u'is_gaspp_registered', u'is_cih_registered', u'startup_time'], name, value)


                        class AsicList(Entity):
                            """
                            
                            
                            .. attribute:: asic_idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: asic_instance
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: card_present
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: card_powered
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: hotplug_event
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: asic_type
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: asic_cardname
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: admin_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: oper_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: fab_plane
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: fab_group
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: fgid_download
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: asic_state
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: asic_disconnect_signal
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: last_init_cause
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: num_pon_resets
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: num_hard_resets
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.Driver.Location.DrvrInfo.AsicList, self).__init__()

                                self.yang_name = "asic_list"
                                self.yang_parent_name = "drvr_info"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['asic_idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('asic_idx', (YLeaf(YType.uint32, 'asic_idx'), ['int'])),
                                    ('asic_instance', (YLeaf(YType.str, 'asic_instance'), ['str'])),
                                    ('card_present', (YLeaf(YType.str, 'card_present'), ['str'])),
                                    ('card_powered', (YLeaf(YType.str, 'card_powered'), ['str'])),
                                    ('hotplug_event', (YLeaf(YType.uint32, 'hotplug_event'), ['int'])),
                                    ('asic_type', (YLeaf(YType.str, 'asic_type'), ['str'])),
                                    ('asic_cardname', (YLeaf(YType.str, 'asic_cardname'), ['str'])),
                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                    ('fab_plane', (YLeaf(YType.str, 'fab_plane'), ['str'])),
                                    ('fab_group', (YLeaf(YType.str, 'fab_group'), ['str'])),
                                    ('fgid_download', (YLeaf(YType.str, 'fgid_download'), ['str'])),
                                    ('asic_state', (YLeaf(YType.str, 'asic_state'), ['str'])),
                                    ('asic_disconnect_signal', (YLeaf(YType.str, 'asic_disconnect_signal'), ['str'])),
                                    ('last_init_cause', (YLeaf(YType.str, 'last_init_cause'), ['str'])),
                                    ('num_pon_resets', (YLeaf(YType.uint32, 'num_pon_resets'), ['int'])),
                                    ('num_hard_resets', (YLeaf(YType.uint32, 'num_hard_resets'), ['int'])),
                                ])
                                self.asic_idx = None
                                self.asic_instance = None
                                self.card_present = None
                                self.card_powered = None
                                self.hotplug_event = None
                                self.asic_type = None
                                self.asic_cardname = None
                                self.admin_state = None
                                self.oper_state = None
                                self.fab_plane = None
                                self.fab_group = None
                                self.fgid_download = None
                                self.asic_state = None
                                self.asic_disconnect_signal = None
                                self.last_init_cause = None
                                self.num_pon_resets = None
                                self.num_hard_resets = None
                                self._segment_path = lambda: "asic_list" + "[asic_idx='" + str(self.asic_idx) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.Driver.Location.DrvrInfo.AsicList, [u'asic_idx', u'asic_instance', u'card_present', u'card_powered', u'hotplug_event', u'asic_type', u'asic_cardname', u'admin_state', u'oper_state', u'fab_plane', u'fab_group', u'fgid_download', u'asic_state', u'asic_disconnect_signal', u'last_init_cause', u'num_pon_resets', u'num_hard_resets'], name, value)






            class Statistics(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Statistics.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.Sfe.Statistics, self).__init__()

                    self.yang_name = "statistics"
                    self.yang_parent_name = "sfe"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.Sfe.Statistics.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "statistics"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.Sfe.Statistics, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: loc_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5])))\|(0/([R\|r][P\|p]0))
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: location (R/S).
                    
                    .. attribute:: asic_types
                    
                    	
                    	**type**\: list of  		 :py:class:`AsicTypes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Statistics.Location.AsicTypes>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.Sfe.Statistics.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "statistics"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['loc_str']
                        self._child_classes = OrderedDict([("asic_types", ("asic_types", Controller.SfeOper.Sfe.Statistics.Location.AsicTypes))])
                        self._leafs = OrderedDict([
                            ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.loc_str = None
                        self.description = None

                        self.asic_types = YList(self)
                        self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/statistics/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.Sfe.Statistics.Location, [u'loc_str', u'description'], name, value)


                    class AsicTypes(Entity):
                        """
                        
                        
                        .. attribute:: asicname  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: block
                        
                        	
                        	**type**\: list of  		 :py:class:`Block <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.Statistics.Location.AsicTypes, self).__init__()

                            self.yang_name = "asic_types"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['asicname']
                            self._child_classes = OrderedDict([("block", ("block", Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block))])
                            self._leafs = OrderedDict([
                                ('asicname', (YLeaf(YType.str, 'asicname'), ['str'])),
                            ])
                            self.asicname = None

                            self.block = YList(self)
                            self._segment_path = lambda: "asic_types" + "[asicname='" + str(self.asicname) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.Statistics.Location.AsicTypes, [u'asicname'], name, value)


                        class Block(Entity):
                            """
                            
                            
                            .. attribute:: blockname  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: instance
                            
                            	
                            	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block.Instance>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block, self).__init__()

                                self.yang_name = "block"
                                self.yang_parent_name = "asic_types"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['blockname']
                                self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block.Instance))])
                                self._leafs = OrderedDict([
                                    ('blockname', (YLeaf(YType.str, 'blockname'), ['str'])),
                                ])
                                self.blockname = None

                                self.instance = YList(self)
                                self._segment_path = lambda: "block" + "[blockname='" + str(self.blockname) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block, [u'blockname'], name, value)


                            class Instance(Entity):
                                """
                                
                                
                                .. attribute:: instance_id  (key)
                                
                                	
                                	**type**\: str
                                
                                	**pattern:** [0\-5]\|all
                                
                                	**config**\: False
                                
                                .. attribute:: stats_output
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block.Instance, self).__init__()

                                    self.yang_name = "instance"
                                    self.yang_parent_name = "block"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['instance_id']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                        ('stats_output', (YLeaf(YType.str, 'stats_output'), ['str'])),
                                    ])
                                    self.instance_id = None
                                    self.stats_output = None
                                    self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.Statistics.Location.AsicTypes.Block.Instance, [u'instance_id', u'stats_output'], name, value)







            class LinkInfo(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.Sfe.LinkInfo, self).__init__()

                    self.yang_name = "link-info"
                    self.yang_parent_name = "sfe"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.Sfe.LinkInfo.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "link-info"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: loc_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5])))\|(0/([R\|r][P\|p]0))
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: location (R/S)
                    
                    .. attribute:: rx
                    
                    	
                    	**type**\: list of  		 :py:class:`Rx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx>`
                    
                    	**config**\: False
                    
                    .. attribute:: tx
                    
                    	
                    	**type**\: list of  		 :py:class:`Tx <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.Sfe.LinkInfo.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "link-info"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['loc_str']
                        self._child_classes = OrderedDict([("rx", ("rx", Controller.SfeOper.Sfe.LinkInfo.Location.Rx)), ("tx", ("tx", Controller.SfeOper.Sfe.LinkInfo.Location.Tx))])
                        self._leafs = OrderedDict([
                            ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.loc_str = None
                        self.description = None

                        self.rx = YList(self)
                        self.tx = YList(self)
                        self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/link-info/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location, [u'loc_str', u'description'], name, value)


                    class Rx(Entity):
                        """
                        
                        
                        .. attribute:: start  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..143
                        
                        	**config**\: False
                        
                        .. attribute:: end  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..143
                        
                        	**config**\: False
                        
                        .. attribute:: detail
                        
                        	
                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail>`
                        
                        	**config**\: False
                        
                        .. attribute:: topo
                        
                        	
                        	**type**\:  :py:class:`Topo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo>`
                        
                        	**config**\: False
                        
                        .. attribute:: flap
                        
                        	
                        	**type**\:  :py:class:`Flap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap>`
                        
                        	**config**\: False
                        
                        .. attribute:: stats
                        
                        	
                        	**type**\:  :py:class:`Stats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx, self).__init__()

                            self.yang_name = "rx"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['start','end']
                            self._child_classes = OrderedDict([("detail", ("detail", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail)), ("topo", ("topo", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo)), ("flap", ("flap", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap)), ("stats", ("stats", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats))])
                            self._leafs = OrderedDict([
                                ('start', (YLeaf(YType.int32, 'start'), ['int'])),
                                ('end', (YLeaf(YType.int32, 'end'), ['int'])),
                            ])
                            self.start = None
                            self.end = None

                            self.detail = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail()
                            self.detail.parent = self
                            self._children_name_map["detail"] = "detail"

                            self.topo = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo()
                            self.topo.parent = self
                            self._children_name_map["topo"] = "topo"

                            self.flap = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap()
                            self.flap.parent = self
                            self._children_name_map["flap"] = "flap"

                            self.stats = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats()
                            self.stats.parent = self
                            self._children_name_map["stats"] = "stats"
                            self._segment_path = lambda: "rx" + "[start='" + str(self.start) + "']" + "[end='" + str(self.end) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx, [u'start', u'end'], name, value)


                        class Detail(Entity):
                            """
                            
                            
                            .. attribute:: topo
                            
                            	
                            	**type**\:  :py:class:`Topo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo>`
                            
                            	**config**\: False
                            
                            .. attribute:: flap
                            
                            	
                            	**type**\:  :py:class:`Flap <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail, self).__init__()

                                self.yang_name = "detail"
                                self.yang_parent_name = "rx"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("topo", ("topo", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo)), ("flap", ("flap", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap))])
                                self._leafs = OrderedDict()

                                self.topo = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo()
                                self.topo.parent = self
                                self._children_name_map["topo"] = "topo"

                                self.flap = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap()
                                self.flap.parent = self
                                self._children_name_map["flap"] = "flap"
                                self._segment_path = lambda: "detail"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail, [], name, value)


                            class Topo(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo, self).__init__()

                                    self.yang_name = "topo"
                                    self.yang_parent_name = "detail"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "topo"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "topo"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Topo.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                            class Flap(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap, self).__init__()

                                    self.yang_name = "flap"
                                    self.yang_parent_name = "detail"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "flap"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "flap"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Detail.Flap.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)







                        class Topo(Entity):
                            """
                            
                            
                            .. attribute:: instance
                            
                            	
                            	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo, self).__init__()

                                self.yang_name = "topo"
                                self.yang_parent_name = "rx"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance))])
                                self._leafs = OrderedDict()

                                self.instance = YList(self)
                                self._segment_path = lambda: "topo"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo, [], name, value)


                            class Instance(Entity):
                                """
                                
                                
                                .. attribute:: instance_id  (key)
                                
                                	
                                	**type**\: str
                                
                                	**pattern:** [0\-5]\|all
                                
                                	**config**\: False
                                
                                .. attribute:: nodeid_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: is_show
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                .. attribute:: link_idx_list
                                
                                	
                                	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance, self).__init__()

                                    self.yang_name = "instance"
                                    self.yang_parent_name = "topo"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['instance_id']
                                    self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList))])
                                    self._leafs = OrderedDict([
                                        ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                        ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                        ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                    ])
                                    self.instance_id = None
                                    self.nodeid_str = None
                                    self.is_show = None

                                    self.link_idx_list = YList(self)
                                    self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                class LinkIdxList(Entity):
                                    """
                                    
                                    
                                    .. attribute:: link_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_id_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: phy_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: speed
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: stage
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_plane
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_group
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: flap_cnt
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: num_admin_shuts
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: flags
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_link_fsdb
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_link_hw
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: coeff1
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: coeff2
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fsm_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_bec_retransmit
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_bec_retransmit
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_crc_errors_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_correctable_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_uncorrectable_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_dropped_retransmitted_control
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList, self).__init__()

                                        self.yang_name = "link_idx_list"
                                        self.yang_parent_name = "instance"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['link_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList.History))])
                                        self._leafs = OrderedDict([
                                            ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                            ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                            ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                            ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                            ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                            ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                            ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                            ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                            ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                            ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                            ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                            ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                            ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                            ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                            ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                            ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                            ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                            ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                            ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                            ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                            ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                            ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                            ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                            ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                            ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                            ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                        ])
                                        self.link_idx = None
                                        self.link_id_str = None
                                        self.phy_link = None
                                        self.speed = None
                                        self.stage = None
                                        self.fab_plane = None
                                        self.fab_group = None
                                        self.flap_cnt = None
                                        self.num_admin_shuts = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.flags = None
                                        self.far_end_link_fsdb = None
                                        self.far_end_link_hw = None
                                        self.coeff1 = None
                                        self.coeff2 = None
                                        self.fsm_state = None
                                        self.tx_control_cells_counter = None
                                        self.tx_data_cell_counter = None
                                        self.tx_data_byte_counter = None
                                        self.tx_bec_retransmit = None
                                        self.tx_asyn_fifo_rate = None
                                        self.rx_control_cells_counter = None
                                        self.rx_data_cell_counter = None
                                        self.rx_data_byte_counter = None
                                        self.rx_bec_retransmit = None
                                        self.rx_asyn_fifo_rate = None
                                        self.rx_crc_errors_counter = None
                                        self.rx_lfec_fec_correctable_error = None
                                        self.rx_lfec_fec_uncorrectable_errors = None
                                        self.rx_dropped_retransmitted_control = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: down_reasons
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "link_idx_list"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self.down_reasons = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Topo.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                        class Flap(Entity):
                            """
                            
                            
                            .. attribute:: instance
                            
                            	
                            	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap, self).__init__()

                                self.yang_name = "flap"
                                self.yang_parent_name = "rx"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance))])
                                self._leafs = OrderedDict()

                                self.instance = YList(self)
                                self._segment_path = lambda: "flap"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap, [], name, value)


                            class Instance(Entity):
                                """
                                
                                
                                .. attribute:: instance_id  (key)
                                
                                	
                                	**type**\: str
                                
                                	**pattern:** [0\-5]\|all
                                
                                	**config**\: False
                                
                                .. attribute:: nodeid_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: is_show
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                .. attribute:: link_idx_list
                                
                                	
                                	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance, self).__init__()

                                    self.yang_name = "instance"
                                    self.yang_parent_name = "flap"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['instance_id']
                                    self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList))])
                                    self._leafs = OrderedDict([
                                        ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                        ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                        ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                    ])
                                    self.instance_id = None
                                    self.nodeid_str = None
                                    self.is_show = None

                                    self.link_idx_list = YList(self)
                                    self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                class LinkIdxList(Entity):
                                    """
                                    
                                    
                                    .. attribute:: link_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_id_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: phy_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: speed
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: stage
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_plane
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_group
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: flap_cnt
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: num_admin_shuts
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: flags
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_link_fsdb
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_link_hw
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: coeff1
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: coeff2
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fsm_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_bec_retransmit
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_bec_retransmit
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_crc_errors_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_correctable_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_uncorrectable_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_dropped_retransmitted_control
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList, self).__init__()

                                        self.yang_name = "link_idx_list"
                                        self.yang_parent_name = "instance"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['link_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList.History))])
                                        self._leafs = OrderedDict([
                                            ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                            ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                            ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                            ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                            ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                            ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                            ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                            ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                            ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                            ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                            ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                            ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                            ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                            ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                            ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                            ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                            ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                            ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                            ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                            ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                            ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                            ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                            ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                            ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                            ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                            ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                        ])
                                        self.link_idx = None
                                        self.link_id_str = None
                                        self.phy_link = None
                                        self.speed = None
                                        self.stage = None
                                        self.fab_plane = None
                                        self.fab_group = None
                                        self.flap_cnt = None
                                        self.num_admin_shuts = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.flags = None
                                        self.far_end_link_fsdb = None
                                        self.far_end_link_hw = None
                                        self.coeff1 = None
                                        self.coeff2 = None
                                        self.fsm_state = None
                                        self.tx_control_cells_counter = None
                                        self.tx_data_cell_counter = None
                                        self.tx_data_byte_counter = None
                                        self.tx_bec_retransmit = None
                                        self.tx_asyn_fifo_rate = None
                                        self.rx_control_cells_counter = None
                                        self.rx_data_cell_counter = None
                                        self.rx_data_byte_counter = None
                                        self.rx_bec_retransmit = None
                                        self.rx_asyn_fifo_rate = None
                                        self.rx_crc_errors_counter = None
                                        self.rx_lfec_fec_correctable_error = None
                                        self.rx_lfec_fec_uncorrectable_errors = None
                                        self.rx_dropped_retransmitted_control = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: down_reasons
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "link_idx_list"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self.down_reasons = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Flap.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                        class Stats(Entity):
                            """
                            
                            
                            .. attribute:: data
                            
                            	
                            	**type**\:  :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data>`
                            
                            	**config**\: False
                            
                            .. attribute:: ctrl
                            
                            	
                            	**type**\:  :py:class:`Ctrl <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl>`
                            
                            	**config**\: False
                            
                            .. attribute:: all
                            
                            	
                            	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats, self).__init__()

                                self.yang_name = "stats"
                                self.yang_parent_name = "rx"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("data", ("data", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data)), ("ctrl", ("ctrl", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl)), ("all", ("all", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All))])
                                self._leafs = OrderedDict()

                                self.data = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data()
                                self.data.parent = self
                                self._children_name_map["data"] = "data"

                                self.ctrl = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl()
                                self.ctrl.parent = self
                                self._children_name_map["ctrl"] = "ctrl"

                                self.all = Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All()
                                self.all.parent = self
                                self._children_name_map["all"] = "all"
                                self._segment_path = lambda: "stats"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats, [], name, value)


                            class Data(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data, self).__init__()

                                    self.yang_name = "data"
                                    self.yang_parent_name = "stats"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "data"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "data"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Data.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                            class Ctrl(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl, self).__init__()

                                    self.yang_name = "ctrl"
                                    self.yang_parent_name = "stats"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "ctrl"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "ctrl"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.Ctrl.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                            class All(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All, self).__init__()

                                    self.yang_name = "all"
                                    self.yang_parent_name = "stats"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "all"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "all"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Rx.Stats.All.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)








                    class Tx(Entity):
                        """
                        
                        
                        .. attribute:: start  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..143
                        
                        	**config**\: False
                        
                        .. attribute:: end  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..143
                        
                        	**config**\: False
                        
                        .. attribute:: detail
                        
                        	
                        	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail>`
                        
                        	**config**\: False
                        
                        .. attribute:: instance
                        
                        	
                        	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance>`
                        
                        	**config**\: False
                        
                        .. attribute:: stats
                        
                        	
                        	**type**\:  :py:class:`Stats <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx, self).__init__()

                            self.yang_name = "tx"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['start','end']
                            self._child_classes = OrderedDict([("detail", ("detail", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail)), ("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance)), ("stats", ("stats", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats))])
                            self._leafs = OrderedDict([
                                ('start', (YLeaf(YType.int32, 'start'), ['int'])),
                                ('end', (YLeaf(YType.int32, 'end'), ['int'])),
                            ])
                            self.start = None
                            self.end = None

                            self.detail = Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail()
                            self.detail.parent = self
                            self._children_name_map["detail"] = "detail"

                            self.stats = Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats()
                            self.stats.parent = self
                            self._children_name_map["stats"] = "stats"

                            self.instance = YList(self)
                            self._segment_path = lambda: "tx" + "[start='" + str(self.start) + "']" + "[end='" + str(self.end) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx, [u'start', u'end'], name, value)


                        class Detail(Entity):
                            """
                            
                            
                            .. attribute:: instance
                            
                            	
                            	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail, self).__init__()

                                self.yang_name = "detail"
                                self.yang_parent_name = "tx"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance))])
                                self._leafs = OrderedDict()

                                self.instance = YList(self)
                                self._segment_path = lambda: "detail"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail, [], name, value)


                            class Instance(Entity):
                                """
                                
                                
                                .. attribute:: instance_id  (key)
                                
                                	
                                	**type**\: str
                                
                                	**pattern:** [0\-5]\|all
                                
                                	**config**\: False
                                
                                .. attribute:: nodeid_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: is_show
                                
                                	
                                	**type**\: bool
                                
                                	**config**\: False
                                
                                .. attribute:: link_idx_list
                                
                                	
                                	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance, self).__init__()

                                    self.yang_name = "instance"
                                    self.yang_parent_name = "detail"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['instance_id']
                                    self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList))])
                                    self._leafs = OrderedDict([
                                        ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                        ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                        ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                    ])
                                    self.instance_id = None
                                    self.nodeid_str = None
                                    self.is_show = None

                                    self.link_idx_list = YList(self)
                                    self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                class LinkIdxList(Entity):
                                    """
                                    
                                    
                                    .. attribute:: link_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-9223372036854775808..9223372036854775807
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_id_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: phy_link
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: speed
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: stage
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_plane
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fab_group
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: flap_cnt
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: num_admin_shuts
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: flags
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_link_fsdb
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: far_end_link_hw
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: coeff1
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: coeff2
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: fsm_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_bec_retransmit
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: tx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_control_cells_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_cell_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_data_byte_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_bec_retransmit
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_asyn_fifo_rate
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_crc_errors_counter
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_correctable_error
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_lfec_fec_uncorrectable_errors
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: rx_dropped_retransmitted_control
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..18446744073709551615
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: history
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList.History>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList, self).__init__()

                                        self.yang_name = "link_idx_list"
                                        self.yang_parent_name = "instance"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['link_idx']
                                        self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList.History))])
                                        self._leafs = OrderedDict([
                                            ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                            ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                            ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                            ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                            ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                            ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                            ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                            ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                            ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                            ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                            ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                            ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                            ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                            ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                            ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                            ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                            ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                            ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                            ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                            ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                            ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                            ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                            ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                            ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                            ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                            ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                            ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                        ])
                                        self.link_idx = None
                                        self.link_id_str = None
                                        self.phy_link = None
                                        self.speed = None
                                        self.stage = None
                                        self.fab_plane = None
                                        self.fab_group = None
                                        self.flap_cnt = None
                                        self.num_admin_shuts = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.flags = None
                                        self.far_end_link_fsdb = None
                                        self.far_end_link_hw = None
                                        self.coeff1 = None
                                        self.coeff2 = None
                                        self.fsm_state = None
                                        self.tx_control_cells_counter = None
                                        self.tx_data_cell_counter = None
                                        self.tx_data_byte_counter = None
                                        self.tx_bec_retransmit = None
                                        self.tx_asyn_fifo_rate = None
                                        self.rx_control_cells_counter = None
                                        self.rx_data_cell_counter = None
                                        self.rx_data_byte_counter = None
                                        self.rx_bec_retransmit = None
                                        self.rx_asyn_fifo_rate = None
                                        self.rx_crc_errors_counter = None
                                        self.rx_lfec_fec_correctable_error = None
                                        self.rx_lfec_fec_uncorrectable_errors = None
                                        self.rx_dropped_retransmitted_control = None

                                        self.history = YList(self)
                                        self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                    class History(Entity):
                                        """
                                        
                                        
                                        .. attribute:: history_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-2147483648..2147483647
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: time_stamp
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: error_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: down_reasons
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList.History, self).__init__()

                                            self.yang_name = "history"
                                            self.yang_parent_name = "link_idx_list"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['history_idx']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                            ])
                                            self.history_idx = None
                                            self.time_stamp = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.error_state = None
                                            self.down_reasons = None
                                            self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Detail.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                        class Instance(Entity):
                            """
                            
                            
                            .. attribute:: instance_id  (key)
                            
                            	
                            	**type**\: str
                            
                            	**pattern:** [0\-5]\|all
                            
                            	**config**\: False
                            
                            .. attribute:: nodeid_str
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: is_show
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_idx_list
                            
                            	
                            	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance, self).__init__()

                                self.yang_name = "instance"
                                self.yang_parent_name = "tx"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['instance_id']
                                self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList))])
                                self._leafs = OrderedDict([
                                    ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                    ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                    ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                ])
                                self.instance_id = None
                                self.nodeid_str = None
                                self.is_show = None

                                self.link_idx_list = YList(self)
                                self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                            class LinkIdxList(Entity):
                                """
                                
                                
                                .. attribute:: link_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: link_id_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: phy_link
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: speed
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: stage
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: fab_plane
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: fab_group
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: flap_cnt
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: num_admin_shuts
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: admin_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: oper_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: flags
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_link_fsdb
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: far_end_link_hw
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: coeff1
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: coeff2
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: fsm_state
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: tx_control_cells_counter
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: tx_data_cell_counter
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: tx_data_byte_counter
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: tx_bec_retransmit
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: tx_asyn_fifo_rate
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_control_cells_counter
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_data_cell_counter
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_data_byte_counter
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_bec_retransmit
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_asyn_fifo_rate
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_crc_errors_counter
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_lfec_fec_correctable_error
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_lfec_fec_uncorrectable_errors
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: rx_dropped_retransmitted_control
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: history
                                
                                	
                                	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList.History>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList, self).__init__()

                                    self.yang_name = "link_idx_list"
                                    self.yang_parent_name = "instance"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['link_idx']
                                    self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList.History))])
                                    self._leafs = OrderedDict([
                                        ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                        ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                        ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                        ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                        ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                        ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                        ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                        ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                        ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                        ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                        ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                        ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                        ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                        ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                        ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                        ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                        ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                        ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                        ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                        ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                        ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                        ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                        ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                        ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                        ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                        ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                        ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                        ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                        ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                        ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                        ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                    ])
                                    self.link_idx = None
                                    self.link_id_str = None
                                    self.phy_link = None
                                    self.speed = None
                                    self.stage = None
                                    self.fab_plane = None
                                    self.fab_group = None
                                    self.flap_cnt = None
                                    self.num_admin_shuts = None
                                    self.admin_state = None
                                    self.oper_state = None
                                    self.flags = None
                                    self.far_end_link_fsdb = None
                                    self.far_end_link_hw = None
                                    self.coeff1 = None
                                    self.coeff2 = None
                                    self.fsm_state = None
                                    self.tx_control_cells_counter = None
                                    self.tx_data_cell_counter = None
                                    self.tx_data_byte_counter = None
                                    self.tx_bec_retransmit = None
                                    self.tx_asyn_fifo_rate = None
                                    self.rx_control_cells_counter = None
                                    self.rx_data_cell_counter = None
                                    self.rx_data_byte_counter = None
                                    self.rx_bec_retransmit = None
                                    self.rx_asyn_fifo_rate = None
                                    self.rx_crc_errors_counter = None
                                    self.rx_lfec_fec_correctable_error = None
                                    self.rx_lfec_fec_uncorrectable_errors = None
                                    self.rx_dropped_retransmitted_control = None

                                    self.history = YList(self)
                                    self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                class History(Entity):
                                    """
                                    
                                    
                                    .. attribute:: history_idx  (key)
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** \-2147483648..2147483647
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: time_stamp
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: admin_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: oper_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: error_state
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: down_reasons
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList.History, self).__init__()

                                        self.yang_name = "history"
                                        self.yang_parent_name = "link_idx_list"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['history_idx']
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                            ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                            ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                            ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                            ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                            ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                        ])
                                        self.history_idx = None
                                        self.time_stamp = None
                                        self.admin_state = None
                                        self.oper_state = None
                                        self.error_state = None
                                        self.down_reasons = None
                                        self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)





                        class Stats(Entity):
                            """
                            
                            
                            .. attribute:: data
                            
                            	
                            	**type**\:  :py:class:`Data <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data>`
                            
                            	**config**\: False
                            
                            .. attribute:: ctrl
                            
                            	
                            	**type**\:  :py:class:`Ctrl <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl>`
                            
                            	**config**\: False
                            
                            .. attribute:: all
                            
                            	
                            	**type**\:  :py:class:`All <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats, self).__init__()

                                self.yang_name = "stats"
                                self.yang_parent_name = "tx"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("data", ("data", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data)), ("ctrl", ("ctrl", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl)), ("all", ("all", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All))])
                                self._leafs = OrderedDict()

                                self.data = Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data()
                                self.data.parent = self
                                self._children_name_map["data"] = "data"

                                self.ctrl = Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl()
                                self.ctrl.parent = self
                                self._children_name_map["ctrl"] = "ctrl"

                                self.all = Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All()
                                self.all.parent = self
                                self._children_name_map["all"] = "all"
                                self._segment_path = lambda: "stats"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats, [], name, value)


                            class Data(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data, self).__init__()

                                    self.yang_name = "data"
                                    self.yang_parent_name = "stats"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "data"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "data"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Data.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                            class Ctrl(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl, self).__init__()

                                    self.yang_name = "ctrl"
                                    self.yang_parent_name = "stats"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "ctrl"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "ctrl"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.Ctrl.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)






                            class All(Entity):
                                """
                                
                                
                                .. attribute:: instance
                                
                                	
                                	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All, self).__init__()

                                    self.yang_name = "all"
                                    self.yang_parent_name = "stats"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance))])
                                    self._leafs = OrderedDict()

                                    self.instance = YList(self)
                                    self._segment_path = lambda: "all"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All, [], name, value)


                                class Instance(Entity):
                                    """
                                    
                                    
                                    .. attribute:: instance_id  (key)
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**pattern:** [0\-5]\|all
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: nodeid_str
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: is_show
                                    
                                    	
                                    	**type**\: bool
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: link_idx_list
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance, self).__init__()

                                        self.yang_name = "instance"
                                        self.yang_parent_name = "all"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = ['instance_id']
                                        self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList))])
                                        self._leafs = OrderedDict([
                                            ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                            ('nodeid_str', (YLeaf(YType.str, 'nodeid_str'), ['str'])),
                                            ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                        ])
                                        self.instance_id = None
                                        self.nodeid_str = None
                                        self.is_show = None

                                        self.link_idx_list = YList(self)
                                        self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance, [u'instance_id', u'nodeid_str', u'is_show'], name, value)


                                    class LinkIdxList(Entity):
                                        """
                                        
                                        
                                        .. attribute:: link_idx  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** \-9223372036854775808..9223372036854775807
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: link_id_str
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: phy_link
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: speed
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: stage
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_plane
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fab_group
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flap_cnt
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: num_admin_shuts
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: admin_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: oper_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: flags
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_fsdb
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: far_end_link_hw
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff1
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: coeff2
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fsm_state
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: tx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_control_cells_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_cell_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_data_byte_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_bec_retransmit
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_asyn_fifo_rate
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_crc_errors_counter
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_correctable_error
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_lfec_fec_uncorrectable_errors
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: rx_dropped_retransmitted_control
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..18446744073709551615
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: history
                                        
                                        	
                                        	**type**\: list of  		 :py:class:`History <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList.History>`
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList, self).__init__()

                                            self.yang_name = "link_idx_list"
                                            self.yang_parent_name = "instance"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['link_idx']
                                            self._child_classes = OrderedDict([("history", ("history", Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList.History))])
                                            self._leafs = OrderedDict([
                                                ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                                ('link_id_str', (YLeaf(YType.str, 'link_id_str'), ['str'])),
                                                ('phy_link', (YLeaf(YType.str, 'phy_link'), ['str'])),
                                                ('speed', (YLeaf(YType.str, 'speed'), ['str'])),
                                                ('stage', (YLeaf(YType.str, 'stage'), ['str'])),
                                                ('fab_plane', (YLeaf(YType.uint32, 'fab_plane'), ['int'])),
                                                ('fab_group', (YLeaf(YType.uint32, 'fab_group'), ['int'])),
                                                ('flap_cnt', (YLeaf(YType.uint32, 'flap_cnt'), ['int'])),
                                                ('num_admin_shuts', (YLeaf(YType.uint32, 'num_admin_shuts'), ['int'])),
                                                ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                ('flags', (YLeaf(YType.str, 'flags'), ['str'])),
                                                ('far_end_link_fsdb', (YLeaf(YType.str, 'far_end_link_fsdb'), ['str'])),
                                                ('far_end_link_hw', (YLeaf(YType.str, 'far_end_link_hw'), ['str'])),
                                                ('coeff1', (YLeaf(YType.uint32, 'coeff1'), ['int'])),
                                                ('coeff2', (YLeaf(YType.uint32, 'coeff2'), ['int'])),
                                                ('fsm_state', (YLeaf(YType.str, 'fsm_state'), ['str'])),
                                                ('tx_control_cells_counter', (YLeaf(YType.uint64, 'TX_Control_cells_counter'), ['int'])),
                                                ('tx_data_cell_counter', (YLeaf(YType.uint64, 'TX_Data_cell_counter'), ['int'])),
                                                ('tx_data_byte_counter', (YLeaf(YType.uint64, 'TX_Data_byte_counter'), ['int'])),
                                                ('tx_bec_retransmit', (YLeaf(YType.uint64, 'TX_BEC_retransmit'), ['int'])),
                                                ('tx_asyn_fifo_rate', (YLeaf(YType.uint64, 'TX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_control_cells_counter', (YLeaf(YType.uint64, 'RX_Control_cells_counter'), ['int'])),
                                                ('rx_data_cell_counter', (YLeaf(YType.uint64, 'RX_Data_cell_counter'), ['int'])),
                                                ('rx_data_byte_counter', (YLeaf(YType.uint64, 'RX_Data_byte_counter'), ['int'])),
                                                ('rx_bec_retransmit', (YLeaf(YType.uint64, 'RX_BEC_retransmit'), ['int'])),
                                                ('rx_asyn_fifo_rate', (YLeaf(YType.uint64, 'RX_Asyn_fifo_rate'), ['int'])),
                                                ('rx_crc_errors_counter', (YLeaf(YType.uint64, 'RX_CRC_errors_counter'), ['int'])),
                                                ('rx_lfec_fec_correctable_error', (YLeaf(YType.uint64, 'RX_LFEC_FEC_correctable_error'), ['int'])),
                                                ('rx_lfec_fec_uncorrectable_errors', (YLeaf(YType.uint64, 'RX_LFEC_FEC_uncorrectable_errors'), ['int'])),
                                                ('rx_dropped_retransmitted_control', (YLeaf(YType.uint64, 'RX_dropped_retransmitted_control'), ['int'])),
                                            ])
                                            self.link_idx = None
                                            self.link_id_str = None
                                            self.phy_link = None
                                            self.speed = None
                                            self.stage = None
                                            self.fab_plane = None
                                            self.fab_group = None
                                            self.flap_cnt = None
                                            self.num_admin_shuts = None
                                            self.admin_state = None
                                            self.oper_state = None
                                            self.flags = None
                                            self.far_end_link_fsdb = None
                                            self.far_end_link_hw = None
                                            self.coeff1 = None
                                            self.coeff2 = None
                                            self.fsm_state = None
                                            self.tx_control_cells_counter = None
                                            self.tx_data_cell_counter = None
                                            self.tx_data_byte_counter = None
                                            self.tx_bec_retransmit = None
                                            self.tx_asyn_fifo_rate = None
                                            self.rx_control_cells_counter = None
                                            self.rx_data_cell_counter = None
                                            self.rx_data_byte_counter = None
                                            self.rx_bec_retransmit = None
                                            self.rx_asyn_fifo_rate = None
                                            self.rx_crc_errors_counter = None
                                            self.rx_lfec_fec_correctable_error = None
                                            self.rx_lfec_fec_uncorrectable_errors = None
                                            self.rx_dropped_retransmitted_control = None

                                            self.history = YList(self)
                                            self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList, [u'link_idx', u'link_id_str', u'phy_link', u'speed', u'stage', u'fab_plane', u'fab_group', u'flap_cnt', u'num_admin_shuts', u'admin_state', u'oper_state', u'flags', u'far_end_link_fsdb', u'far_end_link_hw', u'coeff1', u'coeff2', u'fsm_state', u'tx_control_cells_counter', u'tx_data_cell_counter', u'tx_data_byte_counter', u'tx_bec_retransmit', u'tx_asyn_fifo_rate', u'rx_control_cells_counter', u'rx_data_cell_counter', u'rx_data_byte_counter', u'rx_bec_retransmit', u'rx_asyn_fifo_rate', u'rx_crc_errors_counter', u'rx_lfec_fec_correctable_error', u'rx_lfec_fec_uncorrectable_errors', u'rx_dropped_retransmitted_control'], name, value)


                                        class History(Entity):
                                            """
                                            
                                            
                                            .. attribute:: history_idx  (key)
                                            
                                            	
                                            	**type**\: int
                                            
                                            	**range:** \-2147483648..2147483647
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: time_stamp
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: admin_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: oper_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: error_state
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            .. attribute:: down_reasons
                                            
                                            	
                                            	**type**\: str
                                            
                                            	**config**\: False
                                            
                                            

                                            """

                                            _prefix = 'calvados_controllers'
                                            _revision = '2017-10-11'

                                            def __init__(self):
                                                super(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList.History, self).__init__()

                                                self.yang_name = "history"
                                                self.yang_parent_name = "link_idx_list"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = ['history_idx']
                                                self._child_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('history_idx', (YLeaf(YType.int32, 'history_idx'), ['int'])),
                                                    ('time_stamp', (YLeaf(YType.str, 'time_stamp'), ['str'])),
                                                    ('admin_state', (YLeaf(YType.str, 'admin-state'), ['str'])),
                                                    ('oper_state', (YLeaf(YType.str, 'oper_state'), ['str'])),
                                                    ('error_state', (YLeaf(YType.str, 'error_state'), ['str'])),
                                                    ('down_reasons', (YLeaf(YType.str, 'down_reasons'), ['str'])),
                                                ])
                                                self.history_idx = None
                                                self.time_stamp = None
                                                self.admin_state = None
                                                self.oper_state = None
                                                self.error_state = None
                                                self.down_reasons = None
                                                self._segment_path = lambda: "history" + "[history_idx='" + str(self.history_idx) + "']"
                                                self._is_frozen = True

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(Controller.SfeOper.Sfe.LinkInfo.Location.Tx.Stats.All.Instance.LinkIdxList.History, [u'history_idx', u'time_stamp', u'admin_state', u'oper_state', u'error_state', u'down_reasons'], name, value)










            class Diagshell(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Diagshell.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.Sfe.Diagshell, self).__init__()

                    self.yang_name = "diagshell"
                    self.yang_parent_name = "sfe"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.Sfe.Diagshell.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "diagshell"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.Sfe.Diagshell, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: loc_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5])))\|(0/([R\|r][P\|p]0))
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: location (R/S)
                    
                    .. attribute:: instance
                    
                    	
                    	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Diagshell.Location.Instance>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.Sfe.Diagshell.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "diagshell"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['loc_str']
                        self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.Diagshell.Location.Instance))])
                        self._leafs = OrderedDict([
                            ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.loc_str = None
                        self.description = None

                        self.instance = YList(self)
                        self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/diagshell/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.Sfe.Diagshell.Location, [u'loc_str', u'description'], name, value)


                    class Instance(Entity):
                        """
                        
                        
                        .. attribute:: instance_num  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..5
                        
                        	**config**\: False
                        
                        .. attribute:: diag_cmd
                        
                        	
                        	**type**\: list of  		 :py:class:`DiagCmd <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.Diagshell.Location.Instance, self).__init__()

                            self.yang_name = "instance"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['instance_num']
                            self._child_classes = OrderedDict([("diag_cmd", ("diag_cmd", Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd))])
                            self._leafs = OrderedDict([
                                ('instance_num', (YLeaf(YType.int32, 'instance_num'), ['int'])),
                            ])
                            self.instance_num = None

                            self.diag_cmd = YList(self)
                            self._segment_path = lambda: "instance" + "[instance_num='" + str(self.instance_num) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.Diagshell.Location.Instance, [u'instance_num'], name, value)


                        class DiagCmd(Entity):
                            """
                            
                            
                            .. attribute:: cmd_str  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: bytes
                            
                            	
                            	**type**\: list of  		 :py:class:`Bytes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd.Bytes>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd, self).__init__()

                                self.yang_name = "diag_cmd"
                                self.yang_parent_name = "instance"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['cmd_str']
                                self._child_classes = OrderedDict([("bytes", ("bytes", Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd.Bytes))])
                                self._leafs = OrderedDict([
                                    ('cmd_str', (YLeaf(YType.str, 'cmd_str'), ['str'])),
                                ])
                                self.cmd_str = None

                                self.bytes = YList(self)
                                self._segment_path = lambda: "diag_cmd" + "[cmd_str='" + str(self.cmd_str) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd, [u'cmd_str'], name, value)


                            class Bytes(Entity):
                                """
                                
                                
                                .. attribute:: byte_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: data
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd.Bytes, self).__init__()

                                    self.yang_name = "bytes"
                                    self.yang_parent_name = "diag_cmd"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['byte_idx']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('byte_idx', (YLeaf(YType.int64, 'byte_idx'), ['int'])),
                                        ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                    ])
                                    self.byte_idx = None
                                    self.data = None
                                    self._segment_path = lambda: "bytes" + "[byte_idx='" + str(self.byte_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.Diagshell.Location.Instance.DiagCmd.Bytes, [u'byte_idx', u'data'], name, value)







            class Register(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Register.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.Sfe.Register, self).__init__()

                    self.yang_name = "register"
                    self.yang_parent_name = "sfe"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.Sfe.Register.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "register"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.Sfe.Register, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: loc_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5])))\|(0/([R\|r][P\|p]0))
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: location (R/S)
                    
                    .. attribute:: instance
                    
                    	
                    	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Register.Location.Instance>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.Sfe.Register.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "register"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['loc_str']
                        self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.Register.Location.Instance))])
                        self._leafs = OrderedDict([
                            ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.loc_str = None
                        self.description = None

                        self.instance = YList(self)
                        self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/register/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.Sfe.Register.Location, [u'loc_str', u'description'], name, value)


                    class Instance(Entity):
                        """
                        
                        
                        .. attribute:: instance_num  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..5
                        
                        	**config**\: False
                        
                        .. attribute:: bytes
                        
                        	
                        	**type**\: list of  		 :py:class:`Bytes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Register.Location.Instance.Bytes>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.Register.Location.Instance, self).__init__()

                            self.yang_name = "instance"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['instance_num']
                            self._child_classes = OrderedDict([("bytes", ("bytes", Controller.SfeOper.Sfe.Register.Location.Instance.Bytes))])
                            self._leafs = OrderedDict([
                                ('instance_num', (YLeaf(YType.int32, 'instance_num'), ['int'])),
                            ])
                            self.instance_num = None

                            self.bytes = YList(self)
                            self._segment_path = lambda: "instance" + "[instance_num='" + str(self.instance_num) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.Register.Location.Instance, [u'instance_num'], name, value)


                        class Bytes(Entity):
                            """
                            
                            
                            .. attribute:: byte_idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-9223372036854775808..9223372036854775807
                            
                            	**config**\: False
                            
                            .. attribute:: data
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.Register.Location.Instance.Bytes, self).__init__()

                                self.yang_name = "bytes"
                                self.yang_parent_name = "instance"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['byte_idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('byte_idx', (YLeaf(YType.int64, 'byte_idx'), ['int'])),
                                    ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                ])
                                self.byte_idx = None
                                self.data = None
                                self._segment_path = lambda: "bytes" + "[byte_idx='" + str(self.byte_idx) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.Register.Location.Instance.Bytes, [u'byte_idx', u'data'], name, value)






            class DumpFile(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.DumpFile.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.Sfe.DumpFile, self).__init__()

                    self.yang_name = "dump-file"
                    self.yang_parent_name = "sfe"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.Sfe.DumpFile.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "dump-file"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.Sfe.DumpFile, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: loc_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5])))\|(0/([R\|r][P\|p]0))
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: location (R/S)
                    
                    .. attribute:: file
                    
                    	
                    	**type**\: list of  		 :py:class:`File <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.DumpFile.Location.File>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.Sfe.DumpFile.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "dump-file"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['loc_str']
                        self._child_classes = OrderedDict([("file", ("file", Controller.SfeOper.Sfe.DumpFile.Location.File))])
                        self._leafs = OrderedDict([
                            ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.loc_str = None
                        self.description = None

                        self.file = YList(self)
                        self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/dump-file/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.Sfe.DumpFile.Location, [u'loc_str', u'description'], name, value)


                    class File(Entity):
                        """
                        
                        
                        .. attribute:: file_name  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: bytes
                        
                        	
                        	**type**\: list of  		 :py:class:`Bytes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.DumpFile.Location.File.Bytes>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.DumpFile.Location.File, self).__init__()

                            self.yang_name = "file"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['file_name']
                            self._child_classes = OrderedDict([("bytes", ("bytes", Controller.SfeOper.Sfe.DumpFile.Location.File.Bytes))])
                            self._leafs = OrderedDict([
                                ('file_name', (YLeaf(YType.str, 'file_name'), ['str'])),
                            ])
                            self.file_name = None

                            self.bytes = YList(self)
                            self._segment_path = lambda: "file" + "[file_name='" + str(self.file_name) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.DumpFile.Location.File, [u'file_name'], name, value)


                        class Bytes(Entity):
                            """
                            
                            
                            .. attribute:: byte_idx  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-9223372036854775808..9223372036854775807
                            
                            	**config**\: False
                            
                            .. attribute:: data
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.DumpFile.Location.File.Bytes, self).__init__()

                                self.yang_name = "bytes"
                                self.yang_parent_name = "file"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['byte_idx']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('byte_idx', (YLeaf(YType.int64, 'byte_idx'), ['int'])),
                                    ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                ])
                                self.byte_idx = None
                                self.data = None
                                self._segment_path = lambda: "bytes" + "[byte_idx='" + str(self.byte_idx) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.DumpFile.Location.File.Bytes, [u'byte_idx', u'data'], name, value)






            class Parse(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Parse.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.Sfe.Parse, self).__init__()

                    self.yang_name = "parse"
                    self.yang_parent_name = "sfe"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.Sfe.Parse.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "parse"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.Sfe.Parse, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: loc_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**pattern:** ((0?[0\-9]\|1[0\-5])/([F\|f][C\|c](0?[0\-5])))\|(0/([R\|r][P\|p]0))
                    
                    	**config**\: False
                    
                    .. attribute:: description
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    	**default value**\: location (R/S)
                    
                    .. attribute:: link
                    
                    	
                    	**type**\: list of  		 :py:class:`Link <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Parse.Location.Link>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.Sfe.Parse.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "parse"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['loc_str']
                        self._child_classes = OrderedDict([("link", ("link", Controller.SfeOper.Sfe.Parse.Location.Link))])
                        self._leafs = OrderedDict([
                            ('loc_str', (YLeaf(YType.str, 'loc_str'), ['str'])),
                            ('description', (YLeaf(YType.str, 'description'), ['str'])),
                        ])
                        self.loc_str = None
                        self.description = None

                        self.link = YList(self)
                        self._segment_path = lambda: "location" + "[loc_str='" + str(self.loc_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe/parse/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.Sfe.Parse.Location, [u'loc_str', u'description'], name, value)


                    class Link(Entity):
                        """
                        
                        
                        .. attribute:: start  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..143
                        
                        	**config**\: False
                        
                        .. attribute:: end  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..143
                        
                        	**config**\: False
                        
                        .. attribute:: instance
                        
                        	
                        	**type**\: list of  		 :py:class:`Instance <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Parse.Location.Link.Instance>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.Sfe.Parse.Location.Link, self).__init__()

                            self.yang_name = "link"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['start','end']
                            self._child_classes = OrderedDict([("instance", ("instance", Controller.SfeOper.Sfe.Parse.Location.Link.Instance))])
                            self._leafs = OrderedDict([
                                ('start', (YLeaf(YType.int32, 'start'), ['int'])),
                                ('end', (YLeaf(YType.int32, 'end'), ['int'])),
                            ])
                            self.start = None
                            self.end = None

                            self.instance = YList(self)
                            self._segment_path = lambda: "link" + "[start='" + str(self.start) + "']" + "[end='" + str(self.end) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.Sfe.Parse.Location.Link, [u'start', u'end'], name, value)


                        class Instance(Entity):
                            """
                            
                            
                            .. attribute:: instance_id  (key)
                            
                            	
                            	**type**\: str
                            
                            	**pattern:** [0\-5]\|all
                            
                            	**config**\: False
                            
                            .. attribute:: is_show
                            
                            	
                            	**type**\: bool
                            
                            	**config**\: False
                            
                            .. attribute:: link_idx_list
                            
                            	
                            	**type**\: list of  		 :py:class:`LinkIdxList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.Sfe.Parse.Location.Link.Instance.LinkIdxList>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.Sfe.Parse.Location.Link.Instance, self).__init__()

                                self.yang_name = "instance"
                                self.yang_parent_name = "link"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['instance_id']
                                self._child_classes = OrderedDict([("link_idx_list", ("link_idx_list", Controller.SfeOper.Sfe.Parse.Location.Link.Instance.LinkIdxList))])
                                self._leafs = OrderedDict([
                                    ('instance_id', (YLeaf(YType.str, 'instance-id'), ['str'])),
                                    ('is_show', (YLeaf(YType.boolean, 'is_show'), ['bool'])),
                                ])
                                self.instance_id = None
                                self.is_show = None

                                self.link_idx_list = YList(self)
                                self._segment_path = lambda: "instance" + "[instance-id='" + str(self.instance_id) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.Sfe.Parse.Location.Link.Instance, [u'instance_id', u'is_show'], name, value)


                            class LinkIdxList(Entity):
                                """
                                
                                
                                .. attribute:: link_idx  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** \-9223372036854775808..9223372036854775807
                                
                                	**config**\: False
                                
                                .. attribute:: rack_id_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: slot_id_str
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: asic_inst_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: link_num_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: log_slot
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: phy_slot
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: fap_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: unit
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: sfi_id
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: ip_addr
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: driver_run
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.Sfe.Parse.Location.Link.Instance.LinkIdxList, self).__init__()

                                    self.yang_name = "link_idx_list"
                                    self.yang_parent_name = "instance"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['link_idx']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('link_idx', (YLeaf(YType.int64, 'link_idx'), ['int'])),
                                        ('rack_id_str', (YLeaf(YType.str, 'rack_id_str'), ['str'])),
                                        ('slot_id_str', (YLeaf(YType.str, 'slot_id_str'), ['str'])),
                                        ('asic_inst_id', (YLeaf(YType.uint32, 'asic_inst_id'), ['int'])),
                                        ('link_num_id', (YLeaf(YType.uint32, 'link_num_id'), ['int'])),
                                        ('log_slot', (YLeaf(YType.uint32, 'log_slot'), ['int'])),
                                        ('phy_slot', (YLeaf(YType.uint32, 'phy_slot'), ['int'])),
                                        ('fap_id', (YLeaf(YType.uint32, 'fap_id'), ['int'])),
                                        ('unit', (YLeaf(YType.uint32, 'unit'), ['int'])),
                                        ('sfi_id', (YLeaf(YType.uint32, 'sfi_id'), ['int'])),
                                        ('ip_addr', (YLeaf(YType.str, 'ip_addr'), ['str'])),
                                        ('driver_run', (YLeaf(YType.str, 'driver_run'), ['str'])),
                                    ])
                                    self.link_idx = None
                                    self.rack_id_str = None
                                    self.slot_id_str = None
                                    self.asic_inst_id = None
                                    self.link_num_id = None
                                    self.log_slot = None
                                    self.phy_slot = None
                                    self.fap_id = None
                                    self.unit = None
                                    self.sfi_id = None
                                    self.ip_addr = None
                                    self.driver_run = None
                                    self._segment_path = lambda: "link_idx_list" + "[link_idx='" + str(self.link_idx) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.Sfe.Parse.Location.Link.Instance.LinkIdxList, [u'link_idx', u'rack_id_str', u'slot_id_str', u'asic_inst_id', u'link_num_id', u'log_slot', u'phy_slot', u'fap_id', u'unit', u'sfi_id', u'ip_addr', u'driver_run'], name, value)








        class SfeTrace(Entity):
            """
            
            
            .. attribute:: sfe_driver
            
            	
            	**type**\:  :py:class:`SfeDriver <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.SfeTrace.SfeDriver>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.SfeOper.SfeTrace, self).__init__()

                self.yang_name = "sfe_trace"
                self.yang_parent_name = "sfe_oper"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("sfe_driver", ("sfe_driver", Controller.SfeOper.SfeTrace.SfeDriver))])
                self._leafs = OrderedDict()

                self.sfe_driver = Controller.SfeOper.SfeTrace.SfeDriver()
                self.sfe_driver.parent = self
                self._children_name_map["sfe_driver"] = "sfe_driver"
                self._segment_path = lambda: "sfe_trace"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.SfeOper.SfeTrace, [], name, value)


            class SfeDriver(Entity):
                """
                
                
                .. attribute:: trace
                
                	show traceable processes
                	**type**\: list of  		 :py:class:`Trace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.SfeTrace.SfeDriver.Trace>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.SfeOper.SfeTrace.SfeDriver, self).__init__()

                    self.yang_name = "sfe_driver"
                    self.yang_parent_name = "sfe_trace"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("trace", ("trace", Controller.SfeOper.SfeTrace.SfeDriver.Trace))])
                    self._leafs = OrderedDict()

                    self.trace = YList(self)
                    self._segment_path = lambda: "sfe_driver"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe_trace/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.SfeOper.SfeTrace.SfeDriver, [], name, value)


                class Trace(Entity):
                    """
                    show traceable processes
                    
                    .. attribute:: buffer  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.SfeOper.SfeTrace.SfeDriver.Trace, self).__init__()

                        self.yang_name = "trace"
                        self.yang_parent_name = "sfe_driver"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['buffer']
                        self._child_classes = OrderedDict([("location", ("location", Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location))])
                        self._leafs = OrderedDict([
                            ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                        ])
                        self.buffer = None

                        self.location = YList(self)
                        self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/sfe_oper/sfe_trace/sfe_driver/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.SfeOper.SfeTrace.SfeDriver.Trace, [u'buffer'], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: location_name  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: all_options
                        
                        	
                        	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "trace"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['location_name']
                            self._child_classes = OrderedDict([("all-options", ("all_options", Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions))])
                            self._leafs = OrderedDict([
                                ('location_name', (YLeaf(YType.str, 'location_name'), ['str'])),
                            ])
                            self.location_name = None

                            self.all_options = YList(self)
                            self._segment_path = lambda: "location" + "[location_name='" + str(self.location_name) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location, [u'location_name'], name, value)


                        class AllOptions(Entity):
                            """
                            
                            
                            .. attribute:: option  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: trace_blocks
                            
                            	
                            	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions.TraceBlocks>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions, self).__init__()

                                self.yang_name = "all-options"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['option']
                                self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions.TraceBlocks))])
                                self._leafs = OrderedDict([
                                    ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                ])
                                self.option = None

                                self.trace_blocks = YList(self)
                                self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions, [u'option'], name, value)


                            class TraceBlocks(Entity):
                                """
                                
                                
                                .. attribute:: data
                                
                                	Trace output block
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions.TraceBlocks, self).__init__()

                                    self.yang_name = "trace-blocks"
                                    self.yang_parent_name = "all-options"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                    ])
                                    self.data = None
                                    self._segment_path = lambda: "trace-blocks"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.SfeOper.SfeTrace.SfeDriver.Trace.Location.AllOptions.TraceBlocks, [u'data'], name, value)









    class Switch(Entity):
        """
        
        
        .. attribute:: oper
        
        	Control Ethernet switch operational data
        	**type**\:  :py:class:`Oper <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper>`
        
        	**config**\: False
        
        

        """

        _prefix = 'calvados_controllers'
        _revision = '2017-10-11'

        def __init__(self):
            super(Controller.Switch, self).__init__()

            self.yang_name = "switch"
            self.yang_parent_name = "controller"
            self.is_top_level_class = False
            self.has_list_ancestor = False
            self.ylist_key_names = []
            self._child_classes = OrderedDict([("oper", ("oper", Controller.Switch.Oper))])
            self._leafs = OrderedDict()

            self.oper = Controller.Switch.Oper()
            self.oper.parent = self
            self._children_name_map["oper"] = "oper"
            self._segment_path = lambda: "switch"
            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/%s" % self._segment_path()
            self._is_frozen = True

        def __setattr__(self, name, value):
            self._perform_setattr(Controller.Switch, [], name, value)


        class Oper(Entity):
            """
            Control Ethernet switch operational data.
            
            .. attribute:: reachable
            
            	
            	**type**\:  :py:class:`Reachable <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Reachable>`
            
            	**config**\: False
            
            .. attribute:: summary
            
            	
            	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Summary>`
            
            	**config**\: False
            
            .. attribute:: statistics
            
            	
            	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics>`
            
            	**config**\: False
            
            .. attribute:: mac
            
            	
            	**type**\:  :py:class:`Mac <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Mac>`
            
            	**config**\: False
            
            .. attribute:: bridge
            
            	
            	**type**\:  :py:class:`Bridge <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Bridge>`
            
            	**config**\: False
            
            .. attribute:: fdb
            
            	
            	**type**\:  :py:class:`Fdb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb>`
            
            	**config**\: False
            
            .. attribute:: vlan
            
            	
            	**type**\:  :py:class:`Vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan>`
            
            	**config**\: False
            
            .. attribute:: trace
            
            	
            	**type**\:  :py:class:`Trace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace>`
            
            	**config**\: False
            
            .. attribute:: mgmt_agent
            
            	
            	**type**\:  :py:class:`MgmtAgent <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent>`
            
            	**config**\: False
            
            .. attribute:: port_state
            
            	
            	**type**\:  :py:class:`PortState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.PortState>`
            
            	**config**\: False
            
            .. attribute:: trunk
            
            	
            	**type**\:  :py:class:`Trunk <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trunk>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.Switch.Oper, self).__init__()

                self.yang_name = "oper"
                self.yang_parent_name = "switch"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("reachable", ("reachable", Controller.Switch.Oper.Reachable)), ("summary", ("summary", Controller.Switch.Oper.Summary)), ("statistics", ("statistics", Controller.Switch.Oper.Statistics)), ("mac", ("mac", Controller.Switch.Oper.Mac)), ("bridge", ("bridge", Controller.Switch.Oper.Bridge)), ("fdb", ("fdb", Controller.Switch.Oper.Fdb)), ("vlan", ("vlan", Controller.Switch.Oper.Vlan)), ("trace", ("trace", Controller.Switch.Oper.Trace)), ("mgmt-agent", ("mgmt_agent", Controller.Switch.Oper.MgmtAgent)), ("port-state", ("port_state", Controller.Switch.Oper.PortState)), ("trunk", ("trunk", Controller.Switch.Oper.Trunk))])
                self._leafs = OrderedDict()

                self.reachable = Controller.Switch.Oper.Reachable()
                self.reachable.parent = self
                self._children_name_map["reachable"] = "reachable"

                self.summary = Controller.Switch.Oper.Summary()
                self.summary.parent = self
                self._children_name_map["summary"] = "summary"

                self.statistics = Controller.Switch.Oper.Statistics()
                self.statistics.parent = self
                self._children_name_map["statistics"] = "statistics"

                self.mac = Controller.Switch.Oper.Mac()
                self.mac.parent = self
                self._children_name_map["mac"] = "mac"

                self.bridge = Controller.Switch.Oper.Bridge()
                self.bridge.parent = self
                self._children_name_map["bridge"] = "bridge"

                self.fdb = Controller.Switch.Oper.Fdb()
                self.fdb.parent = self
                self._children_name_map["fdb"] = "fdb"

                self.vlan = Controller.Switch.Oper.Vlan()
                self.vlan.parent = self
                self._children_name_map["vlan"] = "vlan"

                self.trace = Controller.Switch.Oper.Trace()
                self.trace.parent = self
                self._children_name_map["trace"] = "trace"

                self.mgmt_agent = Controller.Switch.Oper.MgmtAgent()
                self.mgmt_agent.parent = self
                self._children_name_map["mgmt_agent"] = "mgmt-agent"

                self.port_state = Controller.Switch.Oper.PortState()
                self.port_state.parent = self
                self._children_name_map["port_state"] = "port-state"

                self.trunk = Controller.Switch.Oper.Trunk()
                self.trunk.parent = self
                self._children_name_map["trunk"] = "trunk"
                self._segment_path = lambda: "oper"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.Switch.Oper, [], name, value)


            class Reachable(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Reachable.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Reachable, self).__init__()

                    self.yang_name = "reachable"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Reachable.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "reachable"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Reachable, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: rack  (key)
                    
                    	
                    	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                    
                    	**config**\: False
                    
                    .. attribute:: card  (key)
                    
                    	
                    	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                    
                    	**config**\: False
                    
                    .. attribute:: switch_id  (key)
                    
                    	
                    	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Reachable.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "reachable"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['rack','card','switch_id']
                        self._child_classes = OrderedDict([])
                        self._leafs = OrderedDict([
                            ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                            ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                            ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                        ])
                        self.rack = None
                        self.card = None
                        self.switch_id = None
                        self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/reachable/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Reachable.Location, [u'rack', u'card', u'switch_id'], name, value)




            class Summary(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Summary.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Summary, self).__init__()

                    self.yang_name = "summary"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Summary.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "summary"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Summary, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: rack  (key)
                    
                    	
                    	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                    
                    	**config**\: False
                    
                    .. attribute:: card  (key)
                    
                    	Card that owns a switch of interest
                    	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                    
                    	**config**\: False
                    
                    .. attribute:: switch_id  (key)
                    
                    	Switch type
                    	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                    
                    	**config**\: False
                    
                    .. attribute:: serial_num
                    
                    	Rack serial number
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: port_iter
                    
                    	
                    	**type**\: list of  		 :py:class:`PortIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Summary.Location.PortIter>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Summary.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "summary"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['rack','card','switch_id']
                        self._child_classes = OrderedDict([("port-iter", ("port_iter", Controller.Switch.Oper.Summary.Location.PortIter))])
                        self._leafs = OrderedDict([
                            ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                            ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                            ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                            ('serial_num', (YLeaf(YType.str, 'serial-num'), ['str'])),
                        ])
                        self.rack = None
                        self.card = None
                        self.switch_id = None
                        self.serial_num = None

                        self.port_iter = YList(self)
                        self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/summary/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Summary.Location, [u'rack', u'card', u'switch_id', u'serial_num'], name, value)


                    class PortIter(Entity):
                        """
                        
                        
                        .. attribute:: port  (key)
                        
                        	Switch port
                        	**type**\: int
                        
                        	**range:** 0..127
                        
                        	**config**\: False
                        
                        .. attribute:: phys_state
                        
                        	Physical port state
                        	**type**\:  :py:class:`EsdmaSwitchPortState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchPortState>`
                        
                        	**config**\: False
                        
                        .. attribute:: admin_state
                        
                        	Administrative port state
                        	**type**\:  :py:class:`EsdmaSwitchPortState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchPortState>`
                        
                        	**config**\: False
                        
                        .. attribute:: port_speed
                        
                        	Indicates the port speed in bits per second
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: protocol_state
                        
                        	Protocol invoked port state
                        	**type**\:  :py:class:`MlapStateEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.MlapStateEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: forwarding
                        
                        	Indicates whether this port is allowed to forward traffic
                        	**type**\:  :py:class:`SwitchForwardingState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.SwitchForwardingState>`
                        
                        	**config**\: False
                        
                        .. attribute:: connects_to
                        
                        	Indicates what this port connects to
                        	**type**\: str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Summary.Location.PortIter, self).__init__()

                            self.yang_name = "port-iter"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['port']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('port', (YLeaf(YType.int32, 'port'), ['int'])),
                                ('phys_state', (YLeaf(YType.enumeration, 'phys-state'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchPortState', '')])),
                                ('admin_state', (YLeaf(YType.enumeration, 'admin-state'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchPortState', '')])),
                                ('port_speed', (YLeaf(YType.str, 'port-speed'), ['str'])),
                                ('protocol_state', (YLeaf(YType.enumeration, 'protocol-state'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'MlapStateEnum', '')])),
                                ('forwarding', (YLeaf(YType.enumeration, 'forwarding'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'SwitchForwardingState', '')])),
                                ('connects_to', (YLeaf(YType.str, 'connects-to'), ['str'])),
                            ])
                            self.port = None
                            self.phys_state = None
                            self.admin_state = None
                            self.port_speed = None
                            self.protocol_state = None
                            self.forwarding = None
                            self.connects_to = None
                            self._segment_path = lambda: "port-iter" + "[port='" + str(self.port) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Summary.Location.PortIter, [u'port', u'phys_state', u'admin_state', u'port_speed', u'protocol_state', u'forwarding', u'connects_to'], name, value)





            class Statistics(Entity):
                """
                
                
                .. attribute:: summary_statistics
                
                	
                	**type**\:  :py:class:`SummaryStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics.SummaryStatistics>`
                
                	**config**\: False
                
                .. attribute:: detail
                
                	
                	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics.Detail>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Statistics, self).__init__()

                    self.yang_name = "statistics"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("summary-statistics", ("summary_statistics", Controller.Switch.Oper.Statistics.SummaryStatistics)), ("detail", ("detail", Controller.Switch.Oper.Statistics.Detail))])
                    self._leafs = OrderedDict()

                    self.summary_statistics = Controller.Switch.Oper.Statistics.SummaryStatistics()
                    self.summary_statistics.parent = self
                    self._children_name_map["summary_statistics"] = "summary-statistics"

                    self.detail = Controller.Switch.Oper.Statistics.Detail()
                    self.detail.parent = self
                    self._children_name_map["detail"] = "detail"
                    self._segment_path = lambda: "statistics"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Statistics, [], name, value)


                class SummaryStatistics(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics.SummaryStatistics.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Statistics.SummaryStatistics, self).__init__()

                        self.yang_name = "summary-statistics"
                        self.yang_parent_name = "statistics"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Statistics.SummaryStatistics.Location))])
                        self._leafs = OrderedDict()

                        self.location = YList(self)
                        self._segment_path = lambda: "summary-statistics"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/statistics/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Statistics.SummaryStatistics, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card that owns a switch of interest
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: serial_num
                        
                        	Rack serial number
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: port_iter
                        
                        	
                        	**type**\: list of  		 :py:class:`PortIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics.SummaryStatistics.Location.PortIter>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Statistics.SummaryStatistics.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "summary-statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("port-iter", ("port_iter", Controller.Switch.Oper.Statistics.SummaryStatistics.Location.PortIter))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                                ('serial_num', (YLeaf(YType.str, 'serial-num'), ['str'])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None
                            self.serial_num = None

                            self.port_iter = YList(self)
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/statistics/summary-statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Statistics.SummaryStatistics.Location, [u'rack', u'card', u'switch_id', u'serial_num'], name, value)


                        class PortIter(Entity):
                            """
                            
                            
                            .. attribute:: port  (key)
                            
                            	Switch port
                            	**type**\: int
                            
                            	**range:** 0..127
                            
                            	**config**\: False
                            
                            .. attribute:: phys_state
                            
                            	Physical port state
                            	**type**\:  :py:class:`EsdmaSwitchPortState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchPortState>`
                            
                            	**config**\: False
                            
                            .. attribute:: state_changes
                            
                            	Physical port state changes
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: sw_sum_tx_packets
                            
                            	Packets transmitted on this switch port
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: sw_sum_rx_packets
                            
                            	Indicates the port speed in bits per second
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: sw_sum_tx_drops_errors
                            
                            	Indicates the number of transmitted packets that had an error or were dropped by the policer
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: sw_sum_rx_drops_errors
                            
                            	Indicates the number of received packets that had an error or were dropped by the policer
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: connects_to
                            
                            	Indicates what this port connects to
                            	**type**\: str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Statistics.SummaryStatistics.Location.PortIter, self).__init__()

                                self.yang_name = "port-iter"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['port']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('port', (YLeaf(YType.int32, 'port'), ['int'])),
                                    ('phys_state', (YLeaf(YType.enumeration, 'phys-state'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchPortState', '')])),
                                    ('state_changes', (YLeaf(YType.uint32, 'state-changes'), ['int'])),
                                    ('sw_sum_tx_packets', (YLeaf(YType.uint64, 'sw-sum-tx-packets'), ['int'])),
                                    ('sw_sum_rx_packets', (YLeaf(YType.uint64, 'sw-sum-rx-packets'), ['int'])),
                                    ('sw_sum_tx_drops_errors', (YLeaf(YType.uint64, 'sw-sum-tx-drops-errors'), ['int'])),
                                    ('sw_sum_rx_drops_errors', (YLeaf(YType.uint64, 'sw-sum-rx-drops-errors'), ['int'])),
                                    ('connects_to', (YLeaf(YType.str, 'connects-to'), ['str'])),
                                ])
                                self.port = None
                                self.phys_state = None
                                self.state_changes = None
                                self.sw_sum_tx_packets = None
                                self.sw_sum_rx_packets = None
                                self.sw_sum_tx_drops_errors = None
                                self.sw_sum_rx_drops_errors = None
                                self.connects_to = None
                                self._segment_path = lambda: "port-iter" + "[port='" + str(self.port) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Statistics.SummaryStatistics.Location.PortIter, [u'port', u'phys_state', u'state_changes', u'sw_sum_tx_packets', u'sw_sum_rx_packets', u'sw_sum_tx_drops_errors', u'sw_sum_rx_drops_errors', u'connects_to'], name, value)





                class Detail(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics.Detail.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Statistics.Detail, self).__init__()

                        self.yang_name = "detail"
                        self.yang_parent_name = "statistics"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Statistics.Detail.Location))])
                        self._leafs = OrderedDict()

                        self.location = YList(self)
                        self._segment_path = lambda: "detail"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/statistics/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Statistics.Detail, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card that owns a switch of interest
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: port_iter
                        
                        	
                        	**type**\: list of  		 :py:class:`PortIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics.Detail.Location.PortIter>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Statistics.Detail.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "detail"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("port-iter", ("port_iter", Controller.Switch.Oper.Statistics.Detail.Location.PortIter))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None

                            self.port_iter = YList(self)
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/statistics/detail/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Statistics.Detail.Location, [u'rack', u'card', u'switch_id'], name, value)


                        class PortIter(Entity):
                            """
                            
                            
                            .. attribute:: port  (key)
                            
                            	Switch port
                            	**type**\: int
                            
                            	**range:** 0..127
                            
                            	**config**\: False
                            
                            .. attribute:: phys_state
                            
                            	Physical port state
                            	**type**\:  :py:class:`EsdmaSwitchPortState <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchPortState>`
                            
                            	**config**\: False
                            
                            .. attribute:: port_speed
                            
                            	Indicates the port speed in bits per second
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: connects_to
                            
                            	Indicates what this port connects to
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: counters
                            
                            	
                            	**type**\:  :py:class:`Counters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Statistics.Detail.Location.PortIter.Counters>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Statistics.Detail.Location.PortIter, self).__init__()

                                self.yang_name = "port-iter"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['port']
                                self._child_classes = OrderedDict([("counters", ("counters", Controller.Switch.Oper.Statistics.Detail.Location.PortIter.Counters))])
                                self._leafs = OrderedDict([
                                    ('port', (YLeaf(YType.int32, 'port'), ['int'])),
                                    ('phys_state', (YLeaf(YType.enumeration, 'phys-state'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchPortState', '')])),
                                    ('port_speed', (YLeaf(YType.str, 'port-speed'), ['str'])),
                                    ('connects_to', (YLeaf(YType.str, 'connects-to'), ['str'])),
                                ])
                                self.port = None
                                self.phys_state = None
                                self.port_speed = None
                                self.connects_to = None

                                self.counters = Controller.Switch.Oper.Statistics.Detail.Location.PortIter.Counters()
                                self.counters.parent = self
                                self._children_name_map["counters"] = "counters"
                                self._segment_path = lambda: "port-iter" + "[port='" + str(self.port) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Statistics.Detail.Location.PortIter, [u'port', u'phys_state', u'port_speed', u'connects_to'], name, value)


                            class Counters(Entity):
                                """
                                
                                
                                .. attribute:: sw_det_rx_ucast_packets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_mcast_packets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_bcast_packets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_flow_control
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_good_octets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_bad_octets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_fifo_overrun
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_undersize
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_fragments
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_oversize
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_jabber
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_errors
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_bad_crc
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_collisions
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rx_policing_drops
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_ucast_packets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_mcast_packets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_bcast_packets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_flow_control
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_good_octets
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_deferred
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_fifo_unrun
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_mult_collision
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_excess_collision
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_late_collisions
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_tx_policing_drops
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_txq_drops
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rxtx_packets_64
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rxtx_packets_65_127
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rxtx_packets_128_255
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rxtx_packets_256_511
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rxtx_packets_512_1023
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                .. attribute:: sw_det_rxtx_packets_1024_max
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..18446744073709551615
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Statistics.Detail.Location.PortIter.Counters, self).__init__()

                                    self.yang_name = "counters"
                                    self.yang_parent_name = "port-iter"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('sw_det_rx_ucast_packets', (YLeaf(YType.uint64, 'sw-det-rx-ucast-packets'), ['int'])),
                                        ('sw_det_rx_mcast_packets', (YLeaf(YType.uint64, 'sw-det-rx-mcast-packets'), ['int'])),
                                        ('sw_det_rx_bcast_packets', (YLeaf(YType.uint64, 'sw-det-rx-bcast-packets'), ['int'])),
                                        ('sw_det_rx_flow_control', (YLeaf(YType.uint64, 'sw-det-rx-flow-control'), ['int'])),
                                        ('sw_det_rx_good_octets', (YLeaf(YType.uint64, 'sw-det-rx-good-octets'), ['int'])),
                                        ('sw_det_rx_bad_octets', (YLeaf(YType.uint64, 'sw-det-rx-bad-octets'), ['int'])),
                                        ('sw_det_rx_fifo_overrun', (YLeaf(YType.uint64, 'sw-det-rx-fifo-overrun'), ['int'])),
                                        ('sw_det_rx_undersize', (YLeaf(YType.uint64, 'sw-det-rx-undersize'), ['int'])),
                                        ('sw_det_rx_fragments', (YLeaf(YType.uint64, 'sw-det-rx-fragments'), ['int'])),
                                        ('sw_det_rx_oversize', (YLeaf(YType.uint64, 'sw-det-rx-oversize'), ['int'])),
                                        ('sw_det_rx_jabber', (YLeaf(YType.uint64, 'sw-det-rx-jabber'), ['int'])),
                                        ('sw_det_rx_errors', (YLeaf(YType.uint64, 'sw-det-rx-errors'), ['int'])),
                                        ('sw_det_rx_bad_crc', (YLeaf(YType.uint64, 'sw-det-rx-bad-crc'), ['int'])),
                                        ('sw_det_rx_collisions', (YLeaf(YType.uint64, 'sw-det-rx-collisions'), ['int'])),
                                        ('sw_det_rx_policing_drops', (YLeaf(YType.uint64, 'sw-det-rx-policing-drops'), ['int'])),
                                        ('sw_det_tx_ucast_packets', (YLeaf(YType.uint64, 'sw-det-tx-ucast-packets'), ['int'])),
                                        ('sw_det_tx_mcast_packets', (YLeaf(YType.uint64, 'sw-det-tx-mcast-packets'), ['int'])),
                                        ('sw_det_tx_bcast_packets', (YLeaf(YType.uint64, 'sw-det-tx-bcast-packets'), ['int'])),
                                        ('sw_det_tx_flow_control', (YLeaf(YType.uint64, 'sw-det-tx-flow-control'), ['int'])),
                                        ('sw_det_tx_good_octets', (YLeaf(YType.uint64, 'sw-det-tx-good-octets'), ['int'])),
                                        ('sw_det_tx_deferred', (YLeaf(YType.uint64, 'sw-det-tx-deferred'), ['int'])),
                                        ('sw_det_tx_fifo_unrun', (YLeaf(YType.uint64, 'sw-det-tx-fifo-unrun'), ['int'])),
                                        ('sw_det_tx_mult_collision', (YLeaf(YType.uint64, 'sw-det-tx-mult-collision'), ['int'])),
                                        ('sw_det_tx_excess_collision', (YLeaf(YType.uint64, 'sw-det-tx-excess-collision'), ['int'])),
                                        ('sw_det_tx_late_collisions', (YLeaf(YType.uint64, 'sw-det-tx-late-collisions'), ['int'])),
                                        ('sw_det_tx_policing_drops', (YLeaf(YType.uint64, 'sw-det-tx-policing-drops'), ['int'])),
                                        ('sw_det_txq_drops', (YLeaf(YType.uint64, 'sw-det-txq-drops'), ['int'])),
                                        ('sw_det_rxtx_packets_64', (YLeaf(YType.uint64, 'sw-det-rxtx-packets-64'), ['int'])),
                                        ('sw_det_rxtx_packets_65_127', (YLeaf(YType.uint64, 'sw-det-rxtx-packets-65-127'), ['int'])),
                                        ('sw_det_rxtx_packets_128_255', (YLeaf(YType.uint64, 'sw-det-rxtx-packets-128-255'), ['int'])),
                                        ('sw_det_rxtx_packets_256_511', (YLeaf(YType.uint64, 'sw-det-rxtx-packets-256-511'), ['int'])),
                                        ('sw_det_rxtx_packets_512_1023', (YLeaf(YType.uint64, 'sw-det-rxtx-packets-512-1023'), ['int'])),
                                        ('sw_det_rxtx_packets_1024_max', (YLeaf(YType.uint64, 'sw-det-rxtx-packets-1024-max'), ['int'])),
                                    ])
                                    self.sw_det_rx_ucast_packets = None
                                    self.sw_det_rx_mcast_packets = None
                                    self.sw_det_rx_bcast_packets = None
                                    self.sw_det_rx_flow_control = None
                                    self.sw_det_rx_good_octets = None
                                    self.sw_det_rx_bad_octets = None
                                    self.sw_det_rx_fifo_overrun = None
                                    self.sw_det_rx_undersize = None
                                    self.sw_det_rx_fragments = None
                                    self.sw_det_rx_oversize = None
                                    self.sw_det_rx_jabber = None
                                    self.sw_det_rx_errors = None
                                    self.sw_det_rx_bad_crc = None
                                    self.sw_det_rx_collisions = None
                                    self.sw_det_rx_policing_drops = None
                                    self.sw_det_tx_ucast_packets = None
                                    self.sw_det_tx_mcast_packets = None
                                    self.sw_det_tx_bcast_packets = None
                                    self.sw_det_tx_flow_control = None
                                    self.sw_det_tx_good_octets = None
                                    self.sw_det_tx_deferred = None
                                    self.sw_det_tx_fifo_unrun = None
                                    self.sw_det_tx_mult_collision = None
                                    self.sw_det_tx_excess_collision = None
                                    self.sw_det_tx_late_collisions = None
                                    self.sw_det_tx_policing_drops = None
                                    self.sw_det_txq_drops = None
                                    self.sw_det_rxtx_packets_64 = None
                                    self.sw_det_rxtx_packets_65_127 = None
                                    self.sw_det_rxtx_packets_128_255 = None
                                    self.sw_det_rxtx_packets_256_511 = None
                                    self.sw_det_rxtx_packets_512_1023 = None
                                    self.sw_det_rxtx_packets_1024_max = None
                                    self._segment_path = lambda: "counters"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Statistics.Detail.Location.PortIter.Counters, [u'sw_det_rx_ucast_packets', u'sw_det_rx_mcast_packets', u'sw_det_rx_bcast_packets', u'sw_det_rx_flow_control', u'sw_det_rx_good_octets', u'sw_det_rx_bad_octets', u'sw_det_rx_fifo_overrun', u'sw_det_rx_undersize', u'sw_det_rx_fragments', u'sw_det_rx_oversize', u'sw_det_rx_jabber', u'sw_det_rx_errors', u'sw_det_rx_bad_crc', u'sw_det_rx_collisions', u'sw_det_rx_policing_drops', u'sw_det_tx_ucast_packets', u'sw_det_tx_mcast_packets', u'sw_det_tx_bcast_packets', u'sw_det_tx_flow_control', u'sw_det_tx_good_octets', u'sw_det_tx_deferred', u'sw_det_tx_fifo_unrun', u'sw_det_tx_mult_collision', u'sw_det_tx_excess_collision', u'sw_det_tx_late_collisions', u'sw_det_tx_policing_drops', u'sw_det_txq_drops', u'sw_det_rxtx_packets_64', u'sw_det_rxtx_packets_65_127', u'sw_det_rxtx_packets_128_255', u'sw_det_rxtx_packets_256_511', u'sw_det_rxtx_packets_512_1023', u'sw_det_rxtx_packets_1024_max'], name, value)







            class Mac(Entity):
                """
                
                
                .. attribute:: mac_statistics
                
                	
                	**type**\:  :py:class:`MacStatistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Mac.MacStatistics>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Mac, self).__init__()

                    self.yang_name = "mac"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("mac-statistics", ("mac_statistics", Controller.Switch.Oper.Mac.MacStatistics))])
                    self._leafs = OrderedDict()

                    self.mac_statistics = Controller.Switch.Oper.Mac.MacStatistics()
                    self.mac_statistics.parent = self
                    self._children_name_map["mac_statistics"] = "mac-statistics"
                    self._segment_path = lambda: "mac"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Mac, [], name, value)


                class MacStatistics(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Mac.MacStatistics.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Mac.MacStatistics, self).__init__()

                        self.yang_name = "mac-statistics"
                        self.yang_parent_name = "mac"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Mac.MacStatistics.Location))])
                        self._leafs = OrderedDict()

                        self.location = YList(self)
                        self._segment_path = lambda: "mac-statistics"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mac/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Mac.MacStatistics, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card to list the switch MAC information for
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: port_iter
                        
                        	
                        	**type**\: list of  		 :py:class:`PortIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Mac.MacStatistics.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "mac-statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("port-iter", ("port_iter", Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None

                            self.port_iter = YList(self)
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mac/mac-statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Mac.MacStatistics.Location, [u'rack', u'card', u'switch_id'], name, value)


                        class PortIter(Entity):
                            """
                            
                            
                            .. attribute:: port  (key)
                            
                            	Switch port
                            	**type**\: int
                            
                            	**range:** 0..127
                            
                            	**config**\: False
                            
                            .. attribute:: mac_entry
                            
                            	
                            	**type**\: list of  		 :py:class:`MacEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter.MacEntry>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter, self).__init__()

                                self.yang_name = "port-iter"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['port']
                                self._child_classes = OrderedDict([("mac-entry", ("mac_entry", Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter.MacEntry))])
                                self._leafs = OrderedDict([
                                    ('port', (YLeaf(YType.int32, 'port'), ['int'])),
                                ])
                                self.port = None

                                self.mac_entry = YList(self)
                                self._segment_path = lambda: "port-iter" + "[port='" + str(self.port) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter, [u'port'], name, value)


                            class MacEntry(Entity):
                                """
                                
                                
                                .. attribute:: id  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: base_reg
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: desc
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: value
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter.MacEntry, self).__init__()

                                    self.yang_name = "mac-entry"
                                    self.yang_parent_name = "port-iter"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['id']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('id', (YLeaf(YType.uint32, 'id'), ['int'])),
                                        ('base_reg', (YLeaf(YType.str, 'base-reg'), ['str'])),
                                        ('desc', (YLeaf(YType.str, 'desc'), ['str'])),
                                        ('value', (YLeaf(YType.str, 'value'), ['str'])),
                                    ])
                                    self.id = None
                                    self.base_reg = None
                                    self.desc = None
                                    self.value = None
                                    self._segment_path = lambda: "mac-entry" + "[id='" + str(self.id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Mac.MacStatistics.Location.PortIter.MacEntry, [u'id', u'base_reg', u'desc', u'value'], name, value)







            class Bridge(Entity):
                """
                
                
                .. attribute:: statistics
                
                	
                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Bridge.Statistics>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Bridge, self).__init__()

                    self.yang_name = "bridge"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("statistics", ("statistics", Controller.Switch.Oper.Bridge.Statistics))])
                    self._leafs = OrderedDict()

                    self.statistics = Controller.Switch.Oper.Bridge.Statistics()
                    self.statistics.parent = self
                    self._children_name_map["statistics"] = "statistics"
                    self._segment_path = lambda: "bridge"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Bridge, [], name, value)


                class Statistics(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Bridge.Statistics.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Bridge.Statistics, self).__init__()

                        self.yang_name = "statistics"
                        self.yang_parent_name = "bridge"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Bridge.Statistics.Location))])
                        self._leafs = OrderedDict()

                        self.location = YList(self)
                        self._segment_path = lambda: "statistics"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/bridge/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Bridge.Statistics, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: ingress_set_id
                        
                        	
                        	**type**\: list of  		 :py:class:`IngressSetId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Bridge.Statistics.Location.IngressSetId>`
                        
                        	**config**\: False
                        
                        .. attribute:: egress_set_id
                        
                        	
                        	**type**\: list of  		 :py:class:`EgressSetId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Bridge.Statistics.Location.EgressSetId>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Bridge.Statistics.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("ingress-set-id", ("ingress_set_id", Controller.Switch.Oper.Bridge.Statistics.Location.IngressSetId)), ("egress-set-id", ("egress_set_id", Controller.Switch.Oper.Bridge.Statistics.Location.EgressSetId))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None

                            self.ingress_set_id = YList(self)
                            self.egress_set_id = YList(self)
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/bridge/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Bridge.Statistics.Location, ['rack', 'card', 'switch_id'], name, value)


                        class IngressSetId(Entity):
                            """
                            
                            
                            .. attribute:: ingress_set  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: ingress_set_name
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: ingress_frames
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: ingress_vlan_discards
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: ingress_security_discards
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: ingress_other_discards
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Bridge.Statistics.Location.IngressSetId, self).__init__()

                                self.yang_name = "ingress-set-id"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['ingress_set']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('ingress_set', (YLeaf(YType.uint32, 'ingress-set'), ['int'])),
                                    ('ingress_set_name', (YLeaf(YType.str, 'ingress-set-name'), ['str'])),
                                    ('ingress_frames', (YLeaf(YType.uint64, 'ingress-frames'), ['int'])),
                                    ('ingress_vlan_discards', (YLeaf(YType.uint64, 'ingress-vlan-discards'), ['int'])),
                                    ('ingress_security_discards', (YLeaf(YType.uint64, 'ingress-security-discards'), ['int'])),
                                    ('ingress_other_discards', (YLeaf(YType.uint64, 'ingress-other-discards'), ['int'])),
                                ])
                                self.ingress_set = None
                                self.ingress_set_name = None
                                self.ingress_frames = None
                                self.ingress_vlan_discards = None
                                self.ingress_security_discards = None
                                self.ingress_other_discards = None
                                self._segment_path = lambda: "ingress-set-id" + "[ingress-set='" + str(self.ingress_set) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Bridge.Statistics.Location.IngressSetId, ['ingress_set', 'ingress_set_name', 'ingress_frames', 'ingress_vlan_discards', 'ingress_security_discards', 'ingress_other_discards'], name, value)



                        class EgressSetId(Entity):
                            """
                            
                            
                            .. attribute:: egress_set  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: egress_set_name
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: egress_ucast_frames
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: egress_mcast_frames
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: egress_bcast_frames
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: egress_discarded_frames
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: egress_txq_congestion
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: egress_ctrl_packets
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            .. attribute:: egress_other_drops
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..18446744073709551615
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Bridge.Statistics.Location.EgressSetId, self).__init__()

                                self.yang_name = "egress-set-id"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['egress_set']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('egress_set', (YLeaf(YType.uint32, 'egress-set'), ['int'])),
                                    ('egress_set_name', (YLeaf(YType.str, 'egress-set-name'), ['str'])),
                                    ('egress_ucast_frames', (YLeaf(YType.uint64, 'egress-ucast-frames'), ['int'])),
                                    ('egress_mcast_frames', (YLeaf(YType.uint64, 'egress-mcast-frames'), ['int'])),
                                    ('egress_bcast_frames', (YLeaf(YType.uint64, 'egress-bcast-frames'), ['int'])),
                                    ('egress_discarded_frames', (YLeaf(YType.uint64, 'egress-discarded-frames'), ['int'])),
                                    ('egress_txq_congestion', (YLeaf(YType.uint64, 'egress-txq-congestion'), ['int'])),
                                    ('egress_ctrl_packets', (YLeaf(YType.uint64, 'egress-ctrl-packets'), ['int'])),
                                    ('egress_other_drops', (YLeaf(YType.uint64, 'egress-other-drops'), ['int'])),
                                ])
                                self.egress_set = None
                                self.egress_set_name = None
                                self.egress_ucast_frames = None
                                self.egress_mcast_frames = None
                                self.egress_bcast_frames = None
                                self.egress_discarded_frames = None
                                self.egress_txq_congestion = None
                                self.egress_ctrl_packets = None
                                self.egress_other_drops = None
                                self._segment_path = lambda: "egress-set-id" + "[egress-set='" + str(self.egress_set) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Bridge.Statistics.Location.EgressSetId, ['egress_set', 'egress_set_name', 'egress_ucast_frames', 'egress_mcast_frames', 'egress_bcast_frames', 'egress_discarded_frames', 'egress_txq_congestion', 'egress_ctrl_packets', 'egress_other_drops'], name, value)






            class Fdb(Entity):
                """
                
                
                .. attribute:: vlan
                
                	
                	**type**\:  :py:class:`Vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Vlan>`
                
                	**config**\: False
                
                .. attribute:: mac
                
                	
                	**type**\:  :py:class:`Mac <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Mac>`
                
                	**config**\: False
                
                .. attribute:: port
                
                	
                	**type**\:  :py:class:`Port <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Port>`
                
                	**config**\: False
                
                .. attribute:: statistics
                
                	
                	**type**\:  :py:class:`Statistics <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Statistics>`
                
                	**config**\: False
                
                .. attribute:: switch_fdb_common
                
                	
                	**type**\:  :py:class:`SwitchFdbCommon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.SwitchFdbCommon>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Fdb, self).__init__()

                    self.yang_name = "fdb"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("vlan", ("vlan", Controller.Switch.Oper.Fdb.Vlan)), ("mac", ("mac", Controller.Switch.Oper.Fdb.Mac)), ("port", ("port", Controller.Switch.Oper.Fdb.Port)), ("statistics", ("statistics", Controller.Switch.Oper.Fdb.Statistics)), ("switch-fdb-common", ("switch_fdb_common", Controller.Switch.Oper.Fdb.SwitchFdbCommon))])
                    self._leafs = OrderedDict()

                    self.vlan = Controller.Switch.Oper.Fdb.Vlan()
                    self.vlan.parent = self
                    self._children_name_map["vlan"] = "vlan"

                    self.mac = Controller.Switch.Oper.Fdb.Mac()
                    self.mac.parent = self
                    self._children_name_map["mac"] = "mac"

                    self.port = Controller.Switch.Oper.Fdb.Port()
                    self.port.parent = self
                    self._children_name_map["port"] = "port"

                    self.statistics = Controller.Switch.Oper.Fdb.Statistics()
                    self.statistics.parent = self
                    self._children_name_map["statistics"] = "statistics"

                    self.switch_fdb_common = Controller.Switch.Oper.Fdb.SwitchFdbCommon()
                    self.switch_fdb_common.parent = self
                    self._children_name_map["switch_fdb_common"] = "switch-fdb-common"
                    self._segment_path = lambda: "fdb"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Fdb, [], name, value)


                class Vlan(Entity):
                    """
                    
                    
                    .. attribute:: vlan_iter
                    
                    	
                    	**type**\: list of  		 :py:class:`VlanIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Vlan.VlanIter>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Fdb.Vlan, self).__init__()

                        self.yang_name = "vlan"
                        self.yang_parent_name = "fdb"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("vlan-iter", ("vlan_iter", Controller.Switch.Oper.Fdb.Vlan.VlanIter))])
                        self._leafs = OrderedDict()

                        self.vlan_iter = YList(self)
                        self._segment_path = lambda: "vlan"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Fdb.Vlan, [], name, value)


                    class VlanIter(Entity):
                        """
                        
                        
                        .. attribute:: vlan  (key)
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..4095
                        
                        	**config**\: False
                        
                        .. attribute:: switch_fdb_common
                        
                        	
                        	**type**\:  :py:class:`SwitchFdbCommon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Fdb.Vlan.VlanIter, self).__init__()

                            self.yang_name = "vlan-iter"
                            self.yang_parent_name = "vlan"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['vlan']
                            self._child_classes = OrderedDict([("switch-fdb-common", ("switch_fdb_common", Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon))])
                            self._leafs = OrderedDict([
                                ('vlan', (YLeaf(YType.uint16, 'vlan'), ['int'])),
                            ])
                            self.vlan = None

                            self.switch_fdb_common = Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon()
                            self.switch_fdb_common.parent = self
                            self._children_name_map["switch_fdb_common"] = "switch-fdb-common"
                            self._segment_path = lambda: "vlan-iter" + "[vlan='" + str(self.vlan) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/vlan/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Fdb.Vlan.VlanIter, ['vlan'], name, value)


                        class SwitchFdbCommon(Entity):
                            """
                            
                            
                            .. attribute:: location
                            
                            	
                            	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon, self).__init__()

                                self.yang_name = "switch-fdb-common"
                                self.yang_parent_name = "vlan-iter"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location))])
                                self._leafs = OrderedDict()

                                self.location = YList(self)
                                self._segment_path = lambda: "switch-fdb-common"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon, [], name, value)


                            class Location(Entity):
                                """
                                
                                
                                .. attribute:: rack  (key)
                                
                                	
                                	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: card  (key)
                                
                                	Card to list the switch FDB information for
                                	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                                
                                	**config**\: False
                                
                                .. attribute:: switch_id  (key)
                                
                                	Switch type
                                	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: num_entries
                                
                                	Number of FDB entries in the table
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: has_trunk_entry
                                
                                	FDB entries contain an entry from the trunk
                                	**type**\: int
                                
                                	**range:** 0..255
                                
                                	**config**\: False
                                
                                .. attribute:: trunk_entry_message
                                
                                	Message displayed when an FDB entry contains an entry for a trunk member port
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_block
                                
                                	
                                	**type**\:  :py:class:`FdbBlock <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location, self).__init__()

                                    self.yang_name = "location"
                                    self.yang_parent_name = "switch-fdb-common"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['rack','card','switch_id']
                                    self._child_classes = OrderedDict([("fdb-block", ("fdb_block", Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock))])
                                    self._leafs = OrderedDict([
                                        ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                        ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                        ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                                        ('num_entries', (YLeaf(YType.uint32, 'num-entries'), ['int'])),
                                        ('has_trunk_entry', (YLeaf(YType.uint8, 'has-trunk-entry'), ['int'])),
                                        ('trunk_entry_message', (YLeaf(YType.str, 'trunk-entry-message'), ['str'])),
                                    ])
                                    self.rack = None
                                    self.card = None
                                    self.switch_id = None
                                    self.num_entries = None
                                    self.has_trunk_entry = None
                                    self.trunk_entry_message = None

                                    self.fdb_block = Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock()
                                    self.fdb_block.parent = self
                                    self._children_name_map["fdb_block"] = "fdb-block"
                                    self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location, ['rack', 'card', 'switch_id', 'num_entries', 'has_trunk_entry', 'trunk_entry_message'], name, value)


                                class FdbBlock(Entity):
                                    """
                                    
                                    
                                    .. attribute:: fdb_entry
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`FdbEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock, self).__init__()

                                        self.yang_name = "fdb-block"
                                        self.yang_parent_name = "location"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("fdb-entry", ("fdb_entry", Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry))])
                                        self._leafs = OrderedDict()

                                        self.fdb_entry = YList(self)
                                        self._segment_path = lambda: "fdb-block"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock, [], name, value)


                                    class FdbEntry(Entity):
                                        """
                                        
                                        
                                        .. attribute:: fdb_index  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_mac_addr
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_vlan
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4095
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_vlan_hex
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4095
                                        
                                        	**refers to**\:  :py:class:`fdb_vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_port
                                        
                                        	Switch port MAC address learned on
                                        	**type**\: int
                                        
                                        	**range:** \-1..128
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_trap_entry
                                        
                                        	
                                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_static_entry
                                        
                                        	
                                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_synced_cores
                                        
                                        	
                                        	**type**\: list of int
                                        
                                        	**range:** 0..255
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry, self).__init__()

                                            self.yang_name = "fdb-entry"
                                            self.yang_parent_name = "fdb-block"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['fdb_index']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('fdb_index', (YLeaf(YType.uint32, 'fdb-index'), ['int'])),
                                                ('fdb_mac_addr', (YLeaf(YType.str, 'fdb-mac-addr'), ['str'])),
                                                ('fdb_vlan', (YLeaf(YType.uint16, 'fdb-vlan'), ['int'])),
                                                ('fdb_vlan_hex', (YLeaf(YType.str, 'fdb-vlan-hex'), ['int'])),
                                                ('fdb_port', (YLeaf(YType.int32, 'fdb-port'), ['int'])),
                                                ('fdb_trap_entry', (YLeaf(YType.enumeration, 'fdb-trap-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                                ('fdb_static_entry', (YLeaf(YType.enumeration, 'fdb-static-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                                ('fdb_synced_cores', (YLeafList(YType.uint8, 'fdb-synced-cores'), ['int'])),
                                            ])
                                            self.fdb_index = None
                                            self.fdb_mac_addr = None
                                            self.fdb_vlan = None
                                            self.fdb_vlan_hex = None
                                            self.fdb_port = None
                                            self.fdb_trap_entry = None
                                            self.fdb_static_entry = None
                                            self.fdb_synced_cores = []
                                            self._segment_path = lambda: "fdb-entry" + "[fdb-index='" + str(self.fdb_index) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Switch.Oper.Fdb.Vlan.VlanIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry, ['fdb_index', 'fdb_mac_addr', 'fdb_vlan', 'fdb_vlan_hex', 'fdb_port', 'fdb_trap_entry', 'fdb_static_entry', 'fdb_synced_cores'], name, value)








                class Mac(Entity):
                    """
                    
                    
                    .. attribute:: mac_iter
                    
                    	
                    	**type**\: list of  		 :py:class:`MacIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Mac.MacIter>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Fdb.Mac, self).__init__()

                        self.yang_name = "mac"
                        self.yang_parent_name = "fdb"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("mac-iter", ("mac_iter", Controller.Switch.Oper.Fdb.Mac.MacIter))])
                        self._leafs = OrderedDict()

                        self.mac_iter = YList(self)
                        self._segment_path = lambda: "mac"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Fdb.Mac, [], name, value)


                    class MacIter(Entity):
                        """
                        
                        
                        .. attribute:: mac  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                        
                        	**config**\: False
                        
                        .. attribute:: switch_fdb_common
                        
                        	
                        	**type**\:  :py:class:`SwitchFdbCommon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Fdb.Mac.MacIter, self).__init__()

                            self.yang_name = "mac-iter"
                            self.yang_parent_name = "mac"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['mac']
                            self._child_classes = OrderedDict([("switch-fdb-common", ("switch_fdb_common", Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon))])
                            self._leafs = OrderedDict([
                                ('mac', (YLeaf(YType.str, 'mac'), ['str'])),
                            ])
                            self.mac = None

                            self.switch_fdb_common = Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon()
                            self.switch_fdb_common.parent = self
                            self._children_name_map["switch_fdb_common"] = "switch-fdb-common"
                            self._segment_path = lambda: "mac-iter" + "[mac='" + str(self.mac) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/mac/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Fdb.Mac.MacIter, ['mac'], name, value)


                        class SwitchFdbCommon(Entity):
                            """
                            
                            
                            .. attribute:: location
                            
                            	
                            	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon, self).__init__()

                                self.yang_name = "switch-fdb-common"
                                self.yang_parent_name = "mac-iter"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location))])
                                self._leafs = OrderedDict()

                                self.location = YList(self)
                                self._segment_path = lambda: "switch-fdb-common"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon, [], name, value)


                            class Location(Entity):
                                """
                                
                                
                                .. attribute:: rack  (key)
                                
                                	
                                	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: card  (key)
                                
                                	Card to list the switch FDB information for
                                	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                                
                                	**config**\: False
                                
                                .. attribute:: switch_id  (key)
                                
                                	Switch type
                                	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: num_entries
                                
                                	Number of FDB entries in the table
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: has_trunk_entry
                                
                                	FDB entries contain an entry from the trunk
                                	**type**\: int
                                
                                	**range:** 0..255
                                
                                	**config**\: False
                                
                                .. attribute:: trunk_entry_message
                                
                                	Message displayed when an FDB entry contains an entry for a trunk member port
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_block
                                
                                	
                                	**type**\:  :py:class:`FdbBlock <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location, self).__init__()

                                    self.yang_name = "location"
                                    self.yang_parent_name = "switch-fdb-common"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['rack','card','switch_id']
                                    self._child_classes = OrderedDict([("fdb-block", ("fdb_block", Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock))])
                                    self._leafs = OrderedDict([
                                        ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                        ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                        ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                                        ('num_entries', (YLeaf(YType.uint32, 'num-entries'), ['int'])),
                                        ('has_trunk_entry', (YLeaf(YType.uint8, 'has-trunk-entry'), ['int'])),
                                        ('trunk_entry_message', (YLeaf(YType.str, 'trunk-entry-message'), ['str'])),
                                    ])
                                    self.rack = None
                                    self.card = None
                                    self.switch_id = None
                                    self.num_entries = None
                                    self.has_trunk_entry = None
                                    self.trunk_entry_message = None

                                    self.fdb_block = Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock()
                                    self.fdb_block.parent = self
                                    self._children_name_map["fdb_block"] = "fdb-block"
                                    self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location, ['rack', 'card', 'switch_id', 'num_entries', 'has_trunk_entry', 'trunk_entry_message'], name, value)


                                class FdbBlock(Entity):
                                    """
                                    
                                    
                                    .. attribute:: fdb_entry
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`FdbEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock, self).__init__()

                                        self.yang_name = "fdb-block"
                                        self.yang_parent_name = "location"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("fdb-entry", ("fdb_entry", Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry))])
                                        self._leafs = OrderedDict()

                                        self.fdb_entry = YList(self)
                                        self._segment_path = lambda: "fdb-block"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock, [], name, value)


                                    class FdbEntry(Entity):
                                        """
                                        
                                        
                                        .. attribute:: fdb_index  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_mac_addr
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_vlan
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4095
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_vlan_hex
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4095
                                        
                                        	**refers to**\:  :py:class:`fdb_vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_port
                                        
                                        	Switch port MAC address learned on
                                        	**type**\: int
                                        
                                        	**range:** \-1..128
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_trap_entry
                                        
                                        	
                                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_static_entry
                                        
                                        	
                                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_synced_cores
                                        
                                        	
                                        	**type**\: list of int
                                        
                                        	**range:** 0..255
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry, self).__init__()

                                            self.yang_name = "fdb-entry"
                                            self.yang_parent_name = "fdb-block"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['fdb_index']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('fdb_index', (YLeaf(YType.uint32, 'fdb-index'), ['int'])),
                                                ('fdb_mac_addr', (YLeaf(YType.str, 'fdb-mac-addr'), ['str'])),
                                                ('fdb_vlan', (YLeaf(YType.uint16, 'fdb-vlan'), ['int'])),
                                                ('fdb_vlan_hex', (YLeaf(YType.str, 'fdb-vlan-hex'), ['int'])),
                                                ('fdb_port', (YLeaf(YType.int32, 'fdb-port'), ['int'])),
                                                ('fdb_trap_entry', (YLeaf(YType.enumeration, 'fdb-trap-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                                ('fdb_static_entry', (YLeaf(YType.enumeration, 'fdb-static-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                                ('fdb_synced_cores', (YLeafList(YType.uint8, 'fdb-synced-cores'), ['int'])),
                                            ])
                                            self.fdb_index = None
                                            self.fdb_mac_addr = None
                                            self.fdb_vlan = None
                                            self.fdb_vlan_hex = None
                                            self.fdb_port = None
                                            self.fdb_trap_entry = None
                                            self.fdb_static_entry = None
                                            self.fdb_synced_cores = []
                                            self._segment_path = lambda: "fdb-entry" + "[fdb-index='" + str(self.fdb_index) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Switch.Oper.Fdb.Mac.MacIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry, ['fdb_index', 'fdb_mac_addr', 'fdb_vlan', 'fdb_vlan_hex', 'fdb_port', 'fdb_trap_entry', 'fdb_static_entry', 'fdb_synced_cores'], name, value)








                class Port(Entity):
                    """
                    
                    
                    .. attribute:: port_iter
                    
                    	
                    	**type**\: list of  		 :py:class:`PortIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Port.PortIter>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Fdb.Port, self).__init__()

                        self.yang_name = "port"
                        self.yang_parent_name = "fdb"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("port-iter", ("port_iter", Controller.Switch.Oper.Fdb.Port.PortIter))])
                        self._leafs = OrderedDict()

                        self.port_iter = YList(self)
                        self._segment_path = lambda: "port"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Fdb.Port, [], name, value)


                    class PortIter(Entity):
                        """
                        
                        
                        .. attribute:: port  (key)
                        
                        	Switch port used for filtering
                        	**type**\: int
                        
                        	**range:** 0..127
                        
                        	**config**\: False
                        
                        .. attribute:: switch_fdb_common
                        
                        	
                        	**type**\:  :py:class:`SwitchFdbCommon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Fdb.Port.PortIter, self).__init__()

                            self.yang_name = "port-iter"
                            self.yang_parent_name = "port"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['port']
                            self._child_classes = OrderedDict([("switch-fdb-common", ("switch_fdb_common", Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon))])
                            self._leafs = OrderedDict([
                                ('port', (YLeaf(YType.int32, 'port'), ['int'])),
                            ])
                            self.port = None

                            self.switch_fdb_common = Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon()
                            self.switch_fdb_common.parent = self
                            self._children_name_map["switch_fdb_common"] = "switch-fdb-common"
                            self._segment_path = lambda: "port-iter" + "[port='" + str(self.port) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/port/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Fdb.Port.PortIter, ['port'], name, value)


                        class SwitchFdbCommon(Entity):
                            """
                            
                            
                            .. attribute:: location
                            
                            	
                            	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon, self).__init__()

                                self.yang_name = "switch-fdb-common"
                                self.yang_parent_name = "port-iter"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location))])
                                self._leafs = OrderedDict()

                                self.location = YList(self)
                                self._segment_path = lambda: "switch-fdb-common"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon, [], name, value)


                            class Location(Entity):
                                """
                                
                                
                                .. attribute:: rack  (key)
                                
                                	
                                	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: card  (key)
                                
                                	Card to list the switch FDB information for
                                	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                                
                                	**config**\: False
                                
                                .. attribute:: switch_id  (key)
                                
                                	Switch type
                                	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: num_entries
                                
                                	Number of FDB entries in the table
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: has_trunk_entry
                                
                                	FDB entries contain an entry from the trunk
                                	**type**\: int
                                
                                	**range:** 0..255
                                
                                	**config**\: False
                                
                                .. attribute:: trunk_entry_message
                                
                                	Message displayed when an FDB entry contains an entry for a trunk member port
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_block
                                
                                	
                                	**type**\:  :py:class:`FdbBlock <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location, self).__init__()

                                    self.yang_name = "location"
                                    self.yang_parent_name = "switch-fdb-common"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['rack','card','switch_id']
                                    self._child_classes = OrderedDict([("fdb-block", ("fdb_block", Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock))])
                                    self._leafs = OrderedDict([
                                        ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                        ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                        ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                                        ('num_entries', (YLeaf(YType.uint32, 'num-entries'), ['int'])),
                                        ('has_trunk_entry', (YLeaf(YType.uint8, 'has-trunk-entry'), ['int'])),
                                        ('trunk_entry_message', (YLeaf(YType.str, 'trunk-entry-message'), ['str'])),
                                    ])
                                    self.rack = None
                                    self.card = None
                                    self.switch_id = None
                                    self.num_entries = None
                                    self.has_trunk_entry = None
                                    self.trunk_entry_message = None

                                    self.fdb_block = Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock()
                                    self.fdb_block.parent = self
                                    self._children_name_map["fdb_block"] = "fdb-block"
                                    self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location, ['rack', 'card', 'switch_id', 'num_entries', 'has_trunk_entry', 'trunk_entry_message'], name, value)


                                class FdbBlock(Entity):
                                    """
                                    
                                    
                                    .. attribute:: fdb_entry
                                    
                                    	
                                    	**type**\: list of  		 :py:class:`FdbEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock, self).__init__()

                                        self.yang_name = "fdb-block"
                                        self.yang_parent_name = "location"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([("fdb-entry", ("fdb_entry", Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry))])
                                        self._leafs = OrderedDict()

                                        self.fdb_entry = YList(self)
                                        self._segment_path = lambda: "fdb-block"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock, [], name, value)


                                    class FdbEntry(Entity):
                                        """
                                        
                                        
                                        .. attribute:: fdb_index  (key)
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_mac_addr
                                        
                                        	
                                        	**type**\: str
                                        
                                        	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_vlan
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4095
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_vlan_hex
                                        
                                        	
                                        	**type**\: int
                                        
                                        	**range:** 0..4095
                                        
                                        	**refers to**\:  :py:class:`fdb_vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_port
                                        
                                        	Switch port MAC address learned on
                                        	**type**\: int
                                        
                                        	**range:** \-1..128
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_trap_entry
                                        
                                        	
                                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_static_entry
                                        
                                        	
                                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                        
                                        	**config**\: False
                                        
                                        .. attribute:: fdb_synced_cores
                                        
                                        	
                                        	**type**\: list of int
                                        
                                        	**range:** 0..255
                                        
                                        	**config**\: False
                                        
                                        

                                        """

                                        _prefix = 'calvados_controllers'
                                        _revision = '2017-10-11'

                                        def __init__(self):
                                            super(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry, self).__init__()

                                            self.yang_name = "fdb-entry"
                                            self.yang_parent_name = "fdb-block"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = ['fdb_index']
                                            self._child_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('fdb_index', (YLeaf(YType.uint32, 'fdb-index'), ['int'])),
                                                ('fdb_mac_addr', (YLeaf(YType.str, 'fdb-mac-addr'), ['str'])),
                                                ('fdb_vlan', (YLeaf(YType.uint16, 'fdb-vlan'), ['int'])),
                                                ('fdb_vlan_hex', (YLeaf(YType.str, 'fdb-vlan-hex'), ['int'])),
                                                ('fdb_port', (YLeaf(YType.int32, 'fdb-port'), ['int'])),
                                                ('fdb_trap_entry', (YLeaf(YType.enumeration, 'fdb-trap-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                                ('fdb_static_entry', (YLeaf(YType.enumeration, 'fdb-static-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                                ('fdb_synced_cores', (YLeafList(YType.uint8, 'fdb-synced-cores'), ['int'])),
                                            ])
                                            self.fdb_index = None
                                            self.fdb_mac_addr = None
                                            self.fdb_vlan = None
                                            self.fdb_vlan_hex = None
                                            self.fdb_port = None
                                            self.fdb_trap_entry = None
                                            self.fdb_static_entry = None
                                            self.fdb_synced_cores = []
                                            self._segment_path = lambda: "fdb-entry" + "[fdb-index='" + str(self.fdb_index) + "']"
                                            self._is_frozen = True

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(Controller.Switch.Oper.Fdb.Port.PortIter.SwitchFdbCommon.Location.FdbBlock.FdbEntry, ['fdb_index', 'fdb_mac_addr', 'fdb_vlan', 'fdb_vlan_hex', 'fdb_port', 'fdb_trap_entry', 'fdb_static_entry', 'fdb_synced_cores'], name, value)








                class Statistics(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Statistics.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Fdb.Statistics, self).__init__()

                        self.yang_name = "statistics"
                        self.yang_parent_name = "fdb"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Fdb.Statistics.Location))])
                        self._leafs = OrderedDict()

                        self.location = YList(self)
                        self._segment_path = lambda: "statistics"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Fdb.Statistics, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: counter_info
                        
                        	
                        	**type**\:  :py:class:`CounterInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Statistics.Location.CounterInfo>`
                        
                        	**config**\: False
                        
                        .. attribute:: core_id
                        
                        	
                        	**type**\: list of  		 :py:class:`CoreId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.Statistics.Location.CoreId>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Fdb.Statistics.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "statistics"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("counter-info", ("counter_info", Controller.Switch.Oper.Fdb.Statistics.Location.CounterInfo)), ("core-id", ("core_id", Controller.Switch.Oper.Fdb.Statistics.Location.CoreId))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None

                            self.counter_info = Controller.Switch.Oper.Fdb.Statistics.Location.CounterInfo()
                            self.counter_info.parent = self
                            self._children_name_map["counter_info"] = "counter-info"

                            self.core_id = YList(self)
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/statistics/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Fdb.Statistics.Location, ['rack', 'card', 'switch_id'], name, value)


                        class CounterInfo(Entity):
                            """
                            
                            
                            .. attribute:: fdb_shadow_entries
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_max_shadow_entries
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_max_hash_chain
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_entries_added
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_entries_deleted
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_entries_updated
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_flushes
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_address_updates
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_new_addresses
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_aged_updates
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_transplant_updates
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_forwarding_updates
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_address_insert_errors
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_address_update_errors
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_memory_errors
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_allocation_errors
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_address_updates_queued
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_address_queue_full
                            
                            	
                            	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_forwarding_updates_queued
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: fdb_forwarding_queue_full
                            
                            	
                            	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Fdb.Statistics.Location.CounterInfo, self).__init__()

                                self.yang_name = "counter-info"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('fdb_shadow_entries', (YLeaf(YType.uint32, 'fdb-shadow-entries'), ['int'])),
                                    ('fdb_max_shadow_entries', (YLeaf(YType.uint32, 'fdb-max-shadow-entries'), ['int'])),
                                    ('fdb_max_hash_chain', (YLeaf(YType.uint32, 'fdb-max-hash-chain'), ['int'])),
                                    ('fdb_entries_added', (YLeaf(YType.uint32, 'fdb-entries-added'), ['int'])),
                                    ('fdb_entries_deleted', (YLeaf(YType.uint32, 'fdb-entries-deleted'), ['int'])),
                                    ('fdb_entries_updated', (YLeaf(YType.uint32, 'fdb-entries-updated'), ['int'])),
                                    ('fdb_flushes', (YLeaf(YType.uint32, 'fdb-flushes'), ['int'])),
                                    ('fdb_address_updates', (YLeaf(YType.uint32, 'fdb-address-updates'), ['int'])),
                                    ('fdb_new_addresses', (YLeaf(YType.uint32, 'fdb-new-addresses'), ['int'])),
                                    ('fdb_aged_updates', (YLeaf(YType.uint32, 'fdb-aged-updates'), ['int'])),
                                    ('fdb_transplant_updates', (YLeaf(YType.uint32, 'fdb-transplant-updates'), ['int'])),
                                    ('fdb_forwarding_updates', (YLeaf(YType.uint32, 'fdb-forwarding-updates'), ['int'])),
                                    ('fdb_address_insert_errors', (YLeaf(YType.uint32, 'fdb-address-insert-errors'), ['int'])),
                                    ('fdb_address_update_errors', (YLeaf(YType.uint32, 'fdb-address-update-errors'), ['int'])),
                                    ('fdb_memory_errors', (YLeaf(YType.uint32, 'fdb-memory-errors'), ['int'])),
                                    ('fdb_allocation_errors', (YLeaf(YType.uint32, 'fdb-allocation-errors'), ['int'])),
                                    ('fdb_address_updates_queued', (YLeaf(YType.uint32, 'fdb-address-updates-queued'), ['int'])),
                                    ('fdb_address_queue_full', (YLeaf(YType.enumeration, 'fdb-address-queue-full'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                    ('fdb_forwarding_updates_queued', (YLeaf(YType.uint32, 'fdb-forwarding-updates-queued'), ['int'])),
                                    ('fdb_forwarding_queue_full', (YLeaf(YType.enumeration, 'fdb-forwarding-queue-full'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                ])
                                self.fdb_shadow_entries = None
                                self.fdb_max_shadow_entries = None
                                self.fdb_max_hash_chain = None
                                self.fdb_entries_added = None
                                self.fdb_entries_deleted = None
                                self.fdb_entries_updated = None
                                self.fdb_flushes = None
                                self.fdb_address_updates = None
                                self.fdb_new_addresses = None
                                self.fdb_aged_updates = None
                                self.fdb_transplant_updates = None
                                self.fdb_forwarding_updates = None
                                self.fdb_address_insert_errors = None
                                self.fdb_address_update_errors = None
                                self.fdb_memory_errors = None
                                self.fdb_allocation_errors = None
                                self.fdb_address_updates_queued = None
                                self.fdb_address_queue_full = None
                                self.fdb_forwarding_updates_queued = None
                                self.fdb_forwarding_queue_full = None
                                self._segment_path = lambda: "counter-info"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Fdb.Statistics.Location.CounterInfo, ['fdb_shadow_entries', 'fdb_max_shadow_entries', 'fdb_max_hash_chain', 'fdb_entries_added', 'fdb_entries_deleted', 'fdb_entries_updated', 'fdb_flushes', 'fdb_address_updates', 'fdb_new_addresses', 'fdb_aged_updates', 'fdb_transplant_updates', 'fdb_forwarding_updates', 'fdb_address_insert_errors', 'fdb_address_update_errors', 'fdb_memory_errors', 'fdb_allocation_errors', 'fdb_address_updates_queued', 'fdb_address_queue_full', 'fdb_forwarding_updates_queued', 'fdb_forwarding_queue_full'], name, value)



                        class CoreId(Entity):
                            """
                            
                            
                            .. attribute:: core  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** \-2147483648..2147483647
                            
                            	**config**\: False
                            
                            .. attribute:: core_entries
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: core_static_entries
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Fdb.Statistics.Location.CoreId, self).__init__()

                                self.yang_name = "core-id"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['core']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('core', (YLeaf(YType.int32, 'core'), ['int'])),
                                    ('core_entries', (YLeaf(YType.uint32, 'core-entries'), ['int'])),
                                    ('core_static_entries', (YLeaf(YType.uint32, 'core-static-entries'), ['int'])),
                                ])
                                self.core = None
                                self.core_entries = None
                                self.core_static_entries = None
                                self._segment_path = lambda: "core-id" + "[core='" + str(self.core) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Fdb.Statistics.Location.CoreId, ['core', 'core_entries', 'core_static_entries'], name, value)





                class SwitchFdbCommon(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Fdb.SwitchFdbCommon, self).__init__()

                        self.yang_name = "switch-fdb-common"
                        self.yang_parent_name = "fdb"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location))])
                        self._leafs = OrderedDict()

                        self.location = YList(self)
                        self._segment_path = lambda: "switch-fdb-common"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Fdb.SwitchFdbCommon, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card to list the switch FDB information for
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: num_entries
                        
                        	Number of FDB entries in the table
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: has_trunk_entry
                        
                        	FDB entries contain an entry from the trunk
                        	**type**\: int
                        
                        	**range:** 0..255
                        
                        	**config**\: False
                        
                        .. attribute:: trunk_entry_message
                        
                        	Message displayed when an FDB entry contains an entry for a trunk member port
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: fdb_block
                        
                        	
                        	**type**\:  :py:class:`FdbBlock <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "switch-fdb-common"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("fdb-block", ("fdb_block", Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                                ('num_entries', (YLeaf(YType.uint32, 'num-entries'), ['int'])),
                                ('has_trunk_entry', (YLeaf(YType.uint8, 'has-trunk-entry'), ['int'])),
                                ('trunk_entry_message', (YLeaf(YType.str, 'trunk-entry-message'), ['str'])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None
                            self.num_entries = None
                            self.has_trunk_entry = None
                            self.trunk_entry_message = None

                            self.fdb_block = Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock()
                            self.fdb_block.parent = self
                            self._children_name_map["fdb_block"] = "fdb-block"
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/fdb/switch-fdb-common/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location, ['rack', 'card', 'switch_id', 'num_entries', 'has_trunk_entry', 'trunk_entry_message'], name, value)


                        class FdbBlock(Entity):
                            """
                            
                            
                            .. attribute:: fdb_entry
                            
                            	
                            	**type**\: list of  		 :py:class:`FdbEntry <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock, self).__init__()

                                self.yang_name = "fdb-block"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([("fdb-entry", ("fdb_entry", Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock.FdbEntry))])
                                self._leafs = OrderedDict()

                                self.fdb_entry = YList(self)
                                self._segment_path = lambda: "fdb-block"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock, [], name, value)


                            class FdbEntry(Entity):
                                """
                                
                                
                                .. attribute:: fdb_index  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_mac_addr
                                
                                	
                                	**type**\: str
                                
                                	**pattern:** [0\-9a\-fA\-F]{2}(\:[0\-9a\-fA\-F]{2}){5}
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_vlan
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4095
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_vlan_hex
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4095
                                
                                	**refers to**\:  :py:class:`fdb_vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock.FdbEntry>`
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_port
                                
                                	Switch port MAC address learned on
                                	**type**\: int
                                
                                	**range:** \-1..128
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_trap_entry
                                
                                	
                                	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_static_entry
                                
                                	
                                	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                                
                                	**config**\: False
                                
                                .. attribute:: fdb_synced_cores
                                
                                	
                                	**type**\: list of int
                                
                                	**range:** 0..255
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock.FdbEntry, self).__init__()

                                    self.yang_name = "fdb-entry"
                                    self.yang_parent_name = "fdb-block"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['fdb_index']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('fdb_index', (YLeaf(YType.uint32, 'fdb-index'), ['int'])),
                                        ('fdb_mac_addr', (YLeaf(YType.str, 'fdb-mac-addr'), ['str'])),
                                        ('fdb_vlan', (YLeaf(YType.uint16, 'fdb-vlan'), ['int'])),
                                        ('fdb_vlan_hex', (YLeaf(YType.str, 'fdb-vlan-hex'), ['int'])),
                                        ('fdb_port', (YLeaf(YType.int32, 'fdb-port'), ['int'])),
                                        ('fdb_trap_entry', (YLeaf(YType.enumeration, 'fdb-trap-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                        ('fdb_static_entry', (YLeaf(YType.enumeration, 'fdb-static-entry'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                        ('fdb_synced_cores', (YLeafList(YType.uint8, 'fdb-synced-cores'), ['int'])),
                                    ])
                                    self.fdb_index = None
                                    self.fdb_mac_addr = None
                                    self.fdb_vlan = None
                                    self.fdb_vlan_hex = None
                                    self.fdb_port = None
                                    self.fdb_trap_entry = None
                                    self.fdb_static_entry = None
                                    self.fdb_synced_cores = []
                                    self._segment_path = lambda: "fdb-entry" + "[fdb-index='" + str(self.fdb_index) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Fdb.SwitchFdbCommon.Location.FdbBlock.FdbEntry, ['fdb_index', 'fdb_mac_addr', 'fdb_vlan', 'fdb_vlan_hex', 'fdb_port', 'fdb_trap_entry', 'fdb_static_entry', 'fdb_synced_cores'], name, value)







            class Vlan(Entity):
                """
                
                
                .. attribute:: information
                
                	
                	**type**\:  :py:class:`Information <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information>`
                
                	**config**\: False
                
                .. attribute:: membership
                
                	
                	**type**\:  :py:class:`Membership <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Membership>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Vlan, self).__init__()

                    self.yang_name = "vlan"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("information", ("information", Controller.Switch.Oper.Vlan.Information)), ("membership", ("membership", Controller.Switch.Oper.Vlan.Membership))])
                    self._leafs = OrderedDict()

                    self.information = Controller.Switch.Oper.Vlan.Information()
                    self.information.parent = self
                    self._children_name_map["information"] = "information"

                    self.membership = Controller.Switch.Oper.Vlan.Membership()
                    self.membership.parent = self
                    self._children_name_map["membership"] = "membership"
                    self._segment_path = lambda: "vlan"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Vlan, [], name, value)


                class Information(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Location>`
                    
                    	**config**\: False
                    
                    .. attribute:: summary
                    
                    	
                    	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Summary>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Vlan.Information, self).__init__()

                        self.yang_name = "information"
                        self.yang_parent_name = "vlan"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Vlan.Information.Location)), ("summary", ("summary", Controller.Switch.Oper.Vlan.Information.Summary))])
                        self._leafs = OrderedDict()

                        self.summary = Controller.Switch.Oper.Vlan.Information.Summary()
                        self.summary.parent = self
                        self._children_name_map["summary"] = "summary"

                        self.location = YList(self)
                        self._segment_path = lambda: "information"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/vlan/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Vlan.Information, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card to list the switch VLAN information for
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: serial_num
                        
                        	Rack serial number
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: sdr_id
                        
                        	
                        	**type**\: list of  		 :py:class:`SdrId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Location.SdrId>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Vlan.Information.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "information"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("sdr-id", ("sdr_id", Controller.Switch.Oper.Vlan.Information.Location.SdrId))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                                ('serial_num', (YLeaf(YType.str, 'serial-num'), ['str'])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None
                            self.serial_num = None

                            self.sdr_id = YList(self)
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/vlan/information/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Vlan.Information.Location, [u'rack', u'card', u'switch_id', u'serial_num'], name, value)


                        class SdrId(Entity):
                            """
                            
                            
                            .. attribute:: sdr  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..255
                            
                            	**config**\: False
                            
                            .. attribute:: esd_sdr_name
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: vlan_id
                            
                            	
                            	**type**\: list of  		 :py:class:`VlanId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Location.SdrId.VlanId>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Vlan.Information.Location.SdrId, self).__init__()

                                self.yang_name = "sdr-id"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['sdr']
                                self._child_classes = OrderedDict([("vlan-id", ("vlan_id", Controller.Switch.Oper.Vlan.Information.Location.SdrId.VlanId))])
                                self._leafs = OrderedDict([
                                    ('sdr', (YLeaf(YType.uint8, 'sdr'), ['int'])),
                                    ('esd_sdr_name', (YLeaf(YType.str, 'esd-sdr-name'), ['str'])),
                                ])
                                self.sdr = None
                                self.esd_sdr_name = None

                                self.vlan_id = YList(self)
                                self._segment_path = lambda: "sdr-id" + "[sdr='" + str(self.sdr) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Vlan.Information.Location.SdrId, [u'sdr', u'esd_sdr_name'], name, value)


                            class VlanId(Entity):
                                """
                                
                                
                                .. attribute:: vlan  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4095
                                
                                	**config**\: False
                                
                                .. attribute:: vlan_hex
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4095
                                
                                	**refers to**\:  :py:class:`vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Location.SdrId.VlanId>`
                                
                                	**config**\: False
                                
                                .. attribute:: vlan_use
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Vlan.Information.Location.SdrId.VlanId, self).__init__()

                                    self.yang_name = "vlan-id"
                                    self.yang_parent_name = "sdr-id"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['vlan']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('vlan', (YLeaf(YType.uint16, 'vlan'), ['int'])),
                                        ('vlan_hex', (YLeaf(YType.str, 'vlan-hex'), ['int'])),
                                        ('vlan_use', (YLeaf(YType.str, 'vlan-use'), ['str'])),
                                    ])
                                    self.vlan = None
                                    self.vlan_hex = None
                                    self.vlan_use = None
                                    self._segment_path = lambda: "vlan-id" + "[vlan='" + str(self.vlan) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Vlan.Information.Location.SdrId.VlanId, [u'vlan', u'vlan_hex', u'vlan_use'], name, value)





                    class Summary(Entity):
                        """
                        
                        
                        .. attribute:: sdr_id
                        
                        	
                        	**type**\: list of  		 :py:class:`SdrId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Summary.SdrId>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Vlan.Information.Summary, self).__init__()

                            self.yang_name = "summary"
                            self.yang_parent_name = "information"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("sdr-id", ("sdr_id", Controller.Switch.Oper.Vlan.Information.Summary.SdrId))])
                            self._leafs = OrderedDict()

                            self.sdr_id = YList(self)
                            self._segment_path = lambda: "summary"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/vlan/information/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Vlan.Information.Summary, [], name, value)


                        class SdrId(Entity):
                            """
                            
                            
                            .. attribute:: sdr  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..255
                            
                            	**config**\: False
                            
                            .. attribute:: esd_sdr_name
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: vlan_id
                            
                            	
                            	**type**\: list of  		 :py:class:`VlanId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Summary.SdrId.VlanId>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Vlan.Information.Summary.SdrId, self).__init__()

                                self.yang_name = "sdr-id"
                                self.yang_parent_name = "summary"
                                self.is_top_level_class = False
                                self.has_list_ancestor = False
                                self.ylist_key_names = ['sdr']
                                self._child_classes = OrderedDict([("vlan-id", ("vlan_id", Controller.Switch.Oper.Vlan.Information.Summary.SdrId.VlanId))])
                                self._leafs = OrderedDict([
                                    ('sdr', (YLeaf(YType.uint8, 'sdr'), ['int'])),
                                    ('esd_sdr_name', (YLeaf(YType.str, 'esd-sdr-name'), ['str'])),
                                ])
                                self.sdr = None
                                self.esd_sdr_name = None

                                self.vlan_id = YList(self)
                                self._segment_path = lambda: "sdr-id" + "[sdr='" + str(self.sdr) + "']"
                                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/vlan/information/summary/%s" % self._segment_path()
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Vlan.Information.Summary.SdrId, [u'sdr', u'esd_sdr_name'], name, value)


                            class VlanId(Entity):
                                """
                                
                                
                                .. attribute:: vlan  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4095
                                
                                	**config**\: False
                                
                                .. attribute:: vlan_hex
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4095
                                
                                	**refers to**\:  :py:class:`vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Information.Summary.SdrId.VlanId>`
                                
                                	**config**\: False
                                
                                .. attribute:: vlan_use
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Vlan.Information.Summary.SdrId.VlanId, self).__init__()

                                    self.yang_name = "vlan-id"
                                    self.yang_parent_name = "sdr-id"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['vlan']
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('vlan', (YLeaf(YType.uint16, 'vlan'), ['int'])),
                                        ('vlan_hex', (YLeaf(YType.str, 'vlan-hex'), ['int'])),
                                        ('vlan_use', (YLeaf(YType.str, 'vlan-use'), ['str'])),
                                    ])
                                    self.vlan = None
                                    self.vlan_hex = None
                                    self.vlan_use = None
                                    self._segment_path = lambda: "vlan-id" + "[vlan='" + str(self.vlan) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Vlan.Information.Summary.SdrId.VlanId, [u'vlan', u'vlan_hex', u'vlan_use'], name, value)






                class Membership(Entity):
                    """
                    
                    
                    .. attribute:: location
                    
                    	
                    	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Membership.Location>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Vlan.Membership, self).__init__()

                        self.yang_name = "membership"
                        self.yang_parent_name = "vlan"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Vlan.Membership.Location))])
                        self._leafs = OrderedDict()

                        self.location = YList(self)
                        self._segment_path = lambda: "membership"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/vlan/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Vlan.Membership, [], name, value)


                    class Location(Entity):
                        """
                        
                        
                        .. attribute:: rack  (key)
                        
                        	
                        	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: card  (key)
                        
                        	Card that owns a switch of interest to display the VLAN configuration for
                        	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                        
                        	**config**\: False
                        
                        .. attribute:: switch_id  (key)
                        
                        	Switch type
                        	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: vlan_id
                        
                        	
                        	**type**\: list of  		 :py:class:`VlanId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Membership.Location.VlanId>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Vlan.Membership.Location, self).__init__()

                            self.yang_name = "location"
                            self.yang_parent_name = "membership"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['rack','card','switch_id']
                            self._child_classes = OrderedDict([("vlan-id", ("vlan_id", Controller.Switch.Oper.Vlan.Membership.Location.VlanId))])
                            self._leafs = OrderedDict([
                                ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                                ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                                ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                            ])
                            self.rack = None
                            self.card = None
                            self.switch_id = None

                            self.vlan_id = YList(self)
                            self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/vlan/membership/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Vlan.Membership.Location, [u'rack', u'card', u'switch_id'], name, value)


                        class VlanId(Entity):
                            """
                            
                            
                            .. attribute:: vlan  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4095
                            
                            	**config**\: False
                            
                            .. attribute:: vlan_hex
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4095
                            
                            	**refers to**\:  :py:class:`vlan <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Vlan.Membership.Location.VlanId>`
                            
                            	**config**\: False
                            
                            .. attribute:: port
                            
                            	
                            	**type**\: list of int
                            
                            	**range:** 0..255
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Vlan.Membership.Location.VlanId, self).__init__()

                                self.yang_name = "vlan-id"
                                self.yang_parent_name = "location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['vlan']
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('vlan', (YLeaf(YType.uint16, 'vlan'), ['int'])),
                                    ('vlan_hex', (YLeaf(YType.str, 'vlan-hex'), ['int'])),
                                    ('port', (YLeafList(YType.uint8, 'port'), ['int'])),
                                ])
                                self.vlan = None
                                self.vlan_hex = None
                                self.port = []
                                self._segment_path = lambda: "vlan-id" + "[vlan='" + str(self.vlan) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Vlan.Membership.Location.VlanId, [u'vlan', u'vlan_hex', u'port'], name, value)






            class Trace(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Trace, self).__init__()

                    self.yang_name = "trace"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Trace.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "trace"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Trace, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: location_str  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: esd
                    
                    	
                    	**type**\:  :py:class:`Esd <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.Esd>`
                    
                    	**config**\: False
                    
                    .. attribute:: esd_epc_sw
                    
                    	
                    	**type**\:  :py:class:`EsdEPCSW <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEPCSW>`
                    
                    	**config**\: False
                    
                    .. attribute:: esd_eobc_sw
                    
                    	
                    	**type**\:  :py:class:`EsdEOBCSW <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEOBCSW>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Trace.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "trace"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['location_str']
                        self._child_classes = OrderedDict([("esd", ("esd", Controller.Switch.Oper.Trace.Location.Esd)), ("esd-EPC-SW", ("esd_epc_sw", Controller.Switch.Oper.Trace.Location.EsdEPCSW)), ("esd-EOBC-SW", ("esd_eobc_sw", Controller.Switch.Oper.Trace.Location.EsdEOBCSW))])
                        self._leafs = OrderedDict([
                            ('location_str', (YLeaf(YType.str, 'location_str'), ['str'])),
                        ])
                        self.location_str = None

                        self.esd = Controller.Switch.Oper.Trace.Location.Esd()
                        self.esd.parent = self
                        self._children_name_map["esd"] = "esd"

                        self.esd_epc_sw = Controller.Switch.Oper.Trace.Location.EsdEPCSW()
                        self.esd_epc_sw.parent = self
                        self._children_name_map["esd_epc_sw"] = "esd-EPC-SW"

                        self.esd_eobc_sw = Controller.Switch.Oper.Trace.Location.EsdEOBCSW()
                        self.esd_eobc_sw.parent = self
                        self._children_name_map["esd_eobc_sw"] = "esd-EOBC-SW"
                        self._segment_path = lambda: "location" + "[location_str='" + str(self.location_str) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/trace/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Trace.Location, [u'location_str'], name, value)


                    class Esd(Entity):
                        """
                        
                        
                        .. attribute:: trace
                        
                        	
                        	**type**\: list of  		 :py:class:`Trace_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.Esd.Trace_>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Trace.Location.Esd, self).__init__()

                            self.yang_name = "esd"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("trace", ("trace", Controller.Switch.Oper.Trace.Location.Esd.Trace_))])
                            self._leafs = OrderedDict()

                            self.trace = YList(self)
                            self._segment_path = lambda: "esd"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Trace.Location.Esd, [], name, value)


                        class Trace_(Entity):
                            """
                            
                            
                            .. attribute:: buffer  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: all_options
                            
                            	
                            	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Trace.Location.Esd.Trace_, self).__init__()

                                self.yang_name = "trace"
                                self.yang_parent_name = "esd"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['buffer']
                                self._child_classes = OrderedDict([("all-options", ("all_options", Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions))])
                                self._leafs = OrderedDict([
                                    ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                                ])
                                self.buffer = None

                                self.all_options = YList(self)
                                self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Trace.Location.Esd.Trace_, [u'buffer'], name, value)


                            class AllOptions(Entity):
                                """
                                
                                
                                .. attribute:: option  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: trace_blocks
                                
                                	
                                	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions.TraceBlocks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions, self).__init__()

                                    self.yang_name = "all-options"
                                    self.yang_parent_name = "trace"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['option']
                                    self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions.TraceBlocks))])
                                    self._leafs = OrderedDict([
                                        ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                    ])
                                    self.option = None

                                    self.trace_blocks = YList(self)
                                    self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions, [u'option'], name, value)


                                class TraceBlocks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions.TraceBlocks, self).__init__()

                                        self.yang_name = "trace-blocks"
                                        self.yang_parent_name = "all-options"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                        ])
                                        self.data = None
                                        self._segment_path = lambda: "trace-blocks"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Switch.Oper.Trace.Location.Esd.Trace_.AllOptions.TraceBlocks, [u'data'], name, value)






                    class EsdEPCSW(Entity):
                        """
                        
                        
                        .. attribute:: trace
                        
                        	
                        	**type**\: list of  		 :py:class:`Trace_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Trace.Location.EsdEPCSW, self).__init__()

                            self.yang_name = "esd-EPC-SW"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("trace", ("trace", Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_))])
                            self._leafs = OrderedDict()

                            self.trace = YList(self)
                            self._segment_path = lambda: "esd-EPC-SW"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEPCSW, [], name, value)


                        class Trace_(Entity):
                            """
                            
                            
                            .. attribute:: buffer  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: all_options
                            
                            	
                            	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_, self).__init__()

                                self.yang_name = "trace"
                                self.yang_parent_name = "esd-EPC-SW"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['buffer']
                                self._child_classes = OrderedDict([("all-options", ("all_options", Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions))])
                                self._leafs = OrderedDict([
                                    ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                                ])
                                self.buffer = None

                                self.all_options = YList(self)
                                self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_, [u'buffer'], name, value)


                            class AllOptions(Entity):
                                """
                                
                                
                                .. attribute:: option  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: trace_blocks
                                
                                	
                                	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions.TraceBlocks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions, self).__init__()

                                    self.yang_name = "all-options"
                                    self.yang_parent_name = "trace"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['option']
                                    self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions.TraceBlocks))])
                                    self._leafs = OrderedDict([
                                        ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                    ])
                                    self.option = None

                                    self.trace_blocks = YList(self)
                                    self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions, [u'option'], name, value)


                                class TraceBlocks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions.TraceBlocks, self).__init__()

                                        self.yang_name = "trace-blocks"
                                        self.yang_parent_name = "all-options"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                        ])
                                        self.data = None
                                        self._segment_path = lambda: "trace-blocks"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEPCSW.Trace_.AllOptions.TraceBlocks, [u'data'], name, value)






                    class EsdEOBCSW(Entity):
                        """
                        
                        
                        .. attribute:: trace
                        
                        	
                        	**type**\: list of  		 :py:class:`Trace_ <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Trace.Location.EsdEOBCSW, self).__init__()

                            self.yang_name = "esd-EOBC-SW"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([("trace", ("trace", Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_))])
                            self._leafs = OrderedDict()

                            self.trace = YList(self)
                            self._segment_path = lambda: "esd-EOBC-SW"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEOBCSW, [], name, value)


                        class Trace_(Entity):
                            """
                            
                            
                            .. attribute:: buffer  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: all_options
                            
                            	
                            	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_, self).__init__()

                                self.yang_name = "trace"
                                self.yang_parent_name = "esd-EOBC-SW"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['buffer']
                                self._child_classes = OrderedDict([("all-options", ("all_options", Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions))])
                                self._leafs = OrderedDict([
                                    ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                                ])
                                self.buffer = None

                                self.all_options = YList(self)
                                self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_, [u'buffer'], name, value)


                            class AllOptions(Entity):
                                """
                                
                                
                                .. attribute:: option  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: trace_blocks
                                
                                	
                                	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions.TraceBlocks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions, self).__init__()

                                    self.yang_name = "all-options"
                                    self.yang_parent_name = "trace"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['option']
                                    self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions.TraceBlocks))])
                                    self._leafs = OrderedDict([
                                        ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                    ])
                                    self.option = None

                                    self.trace_blocks = YList(self)
                                    self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions, [u'option'], name, value)


                                class TraceBlocks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions.TraceBlocks, self).__init__()

                                        self.yang_name = "trace-blocks"
                                        self.yang_parent_name = "all-options"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                        ])
                                        self.data = None
                                        self._segment_path = lambda: "trace-blocks"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Switch.Oper.Trace.Location.EsdEOBCSW.Trace_.AllOptions.TraceBlocks, [u'data'], name, value)








            class MgmtAgent(Entity):
                """
                
                
                .. attribute:: esdma
                
                	
                	**type**\:  :py:class:`Esdma <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Esdma>`
                
                	**config**\: False
                
                .. attribute:: connections
                
                	
                	**type**\:  :py:class:`Connections <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Connections>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.MgmtAgent, self).__init__()

                    self.yang_name = "mgmt-agent"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("esdma", ("esdma", Controller.Switch.Oper.MgmtAgent.Esdma)), ("connections", ("connections", Controller.Switch.Oper.MgmtAgent.Connections))])
                    self._leafs = OrderedDict()

                    self.esdma = Controller.Switch.Oper.MgmtAgent.Esdma()
                    self.esdma.parent = self
                    self._children_name_map["esdma"] = "esdma"

                    self.connections = Controller.Switch.Oper.MgmtAgent.Connections()
                    self.connections.parent = self
                    self._children_name_map["connections"] = "connections"
                    self._segment_path = lambda: "mgmt-agent"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.MgmtAgent, [], name, value)


                class Esdma(Entity):
                    """
                    
                    
                    .. attribute:: trace
                    
                    	show traceable processes
                    	**type**\: list of  		 :py:class:`Trace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Esdma.Trace>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.MgmtAgent.Esdma, self).__init__()

                        self.yang_name = "esdma"
                        self.yang_parent_name = "mgmt-agent"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("trace", ("trace", Controller.Switch.Oper.MgmtAgent.Esdma.Trace))])
                        self._leafs = OrderedDict()

                        self.trace = YList(self)
                        self._segment_path = lambda: "esdma"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mgmt-agent/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Esdma, [], name, value)


                    class Trace(Entity):
                        """
                        show traceable processes
                        
                        .. attribute:: buffer  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: location
                        
                        	
                        	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.MgmtAgent.Esdma.Trace, self).__init__()

                            self.yang_name = "trace"
                            self.yang_parent_name = "esdma"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['buffer']
                            self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location))])
                            self._leafs = OrderedDict([
                                ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                            ])
                            self.buffer = None

                            self.location = YList(self)
                            self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mgmt-agent/esdma/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Esdma.Trace, [u'buffer'], name, value)


                        class Location(Entity):
                            """
                            
                            
                            .. attribute:: location_name  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: all_options
                            
                            	
                            	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location, self).__init__()

                                self.yang_name = "location"
                                self.yang_parent_name = "trace"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['location_name']
                                self._child_classes = OrderedDict([("all-options", ("all_options", Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions))])
                                self._leafs = OrderedDict([
                                    ('location_name', (YLeaf(YType.str, 'location_name'), ['str'])),
                                ])
                                self.location_name = None

                                self.all_options = YList(self)
                                self._segment_path = lambda: "location" + "[location_name='" + str(self.location_name) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location, [u'location_name'], name, value)


                            class AllOptions(Entity):
                                """
                                
                                
                                .. attribute:: option  (key)
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: trace_blocks
                                
                                	
                                	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions.TraceBlocks>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions, self).__init__()

                                    self.yang_name = "all-options"
                                    self.yang_parent_name = "location"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['option']
                                    self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions.TraceBlocks))])
                                    self._leafs = OrderedDict([
                                        ('option', (YLeaf(YType.str, 'option'), ['str'])),
                                    ])
                                    self.option = None

                                    self.trace_blocks = YList(self)
                                    self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions, [u'option'], name, value)


                                class TraceBlocks(Entity):
                                    """
                                    
                                    
                                    .. attribute:: data
                                    
                                    	Trace output block
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions.TraceBlocks, self).__init__()

                                        self.yang_name = "trace-blocks"
                                        self.yang_parent_name = "all-options"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('data', (YLeaf(YType.str, 'data'), ['str'])),
                                        ])
                                        self.data = None
                                        self._segment_path = lambda: "trace-blocks"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Esdma.Trace.Location.AllOptions.TraceBlocks, [u'data'], name, value)







                class Connections(Entity):
                    """
                    
                    
                    .. attribute:: esdma_info
                    
                    	
                    	**type**\:  :py:class:`EsdmaInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Connections.EsdmaInfo>`
                    
                    	**config**\: False
                    
                    .. attribute:: sdr_nm_client_id
                    
                    	
                    	**type**\: list of  		 :py:class:`SdrNmClientId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Connections.SdrNmClientId>`
                    
                    	**config**\: False
                    
                    .. attribute:: sdr_nm_num_clients
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: esd_client_id
                    
                    	
                    	**type**\: list of  		 :py:class:`EsdClientId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Connections.EsdClientId>`
                    
                    	**config**\: False
                    
                    .. attribute:: esd_client_num_clients
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: mlap_client_id
                    
                    	
                    	**type**\: list of  		 :py:class:`MlapClientId <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.MgmtAgent.Connections.MlapClientId>`
                    
                    	**config**\: False
                    
                    .. attribute:: mlap_client_num_clients
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.MgmtAgent.Connections, self).__init__()

                        self.yang_name = "connections"
                        self.yang_parent_name = "mgmt-agent"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("esdma-info", ("esdma_info", Controller.Switch.Oper.MgmtAgent.Connections.EsdmaInfo)), ("sdr-nm-client-id", ("sdr_nm_client_id", Controller.Switch.Oper.MgmtAgent.Connections.SdrNmClientId)), ("esd-client-id", ("esd_client_id", Controller.Switch.Oper.MgmtAgent.Connections.EsdClientId)), ("mlap-client-id", ("mlap_client_id", Controller.Switch.Oper.MgmtAgent.Connections.MlapClientId))])
                        self._leafs = OrderedDict([
                            ('sdr_nm_num_clients', (YLeaf(YType.uint32, 'sdr-nm-num-clients'), ['int'])),
                            ('esd_client_num_clients', (YLeaf(YType.uint32, 'esd-client-num-clients'), ['int'])),
                            ('mlap_client_num_clients', (YLeaf(YType.uint32, 'mlap-client-num-clients'), ['int'])),
                        ])
                        self.sdr_nm_num_clients = None
                        self.esd_client_num_clients = None
                        self.mlap_client_num_clients = None

                        self.esdma_info = Controller.Switch.Oper.MgmtAgent.Connections.EsdmaInfo()
                        self.esdma_info.parent = self
                        self._children_name_map["esdma_info"] = "esdma-info"

                        self.sdr_nm_client_id = YList(self)
                        self.esd_client_id = YList(self)
                        self.mlap_client_id = YList(self)
                        self._segment_path = lambda: "connections"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mgmt-agent/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Connections, ['sdr_nm_num_clients', 'esd_client_num_clients', 'mlap_client_num_clients'], name, value)


                    class EsdmaInfo(Entity):
                        """
                        
                        
                        .. attribute:: active_esdma_address
                        
                        	
                        	**type**\: union of the below types:
                        
                        		**type**\: str
                        
                        			**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        		**type**\: str
                        
                        			**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.MgmtAgent.Connections.EsdmaInfo, self).__init__()

                            self.yang_name = "esdma-info"
                            self.yang_parent_name = "connections"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('active_esdma_address', (YLeaf(YType.str, 'active-esdma-address'), ['str','str'])),
                            ])
                            self.active_esdma_address = None
                            self._segment_path = lambda: "esdma-info"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mgmt-agent/connections/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Connections.EsdmaInfo, ['active_esdma_address'], name, value)



                    class SdrNmClientId(Entity):
                        """
                        
                        
                        .. attribute:: sdr_nm_ip_address
                        
                        	
                        	**type**\: union of the below types:
                        
                        		**type**\: str
                        
                        			**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        		**type**\: str
                        
                        			**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        	**config**\: False
                        
                        .. attribute:: sdr_nm_port_num
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..65535
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.MgmtAgent.Connections.SdrNmClientId, self).__init__()

                            self.yang_name = "sdr-nm-client-id"
                            self.yang_parent_name = "connections"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('sdr_nm_ip_address', (YLeaf(YType.str, 'sdr-nm-ip-address'), ['str','str'])),
                                ('sdr_nm_port_num', (YLeaf(YType.uint16, 'sdr-nm-port-num'), ['int'])),
                            ])
                            self.sdr_nm_ip_address = None
                            self.sdr_nm_port_num = None
                            self._segment_path = lambda: "sdr-nm-client-id"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mgmt-agent/connections/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Connections.SdrNmClientId, ['sdr_nm_ip_address', 'sdr_nm_port_num'], name, value)



                    class EsdClientId(Entity):
                        """
                        
                        
                        .. attribute:: esd_client_ip_address
                        
                        	
                        	**type**\: union of the below types:
                        
                        		**type**\: str
                        
                        			**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        		**type**\: str
                        
                        			**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        	**config**\: False
                        
                        .. attribute:: esd_client_port_num
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..65535
                        
                        	**config**\: False
                        
                        .. attribute:: esd_client_location
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: esd_client_switch_info_cached
                        
                        	
                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                        
                        	**config**\: False
                        
                        .. attribute:: esd_client_sdr_info_cached
                        
                        	
                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.MgmtAgent.Connections.EsdClientId, self).__init__()

                            self.yang_name = "esd-client-id"
                            self.yang_parent_name = "connections"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('esd_client_ip_address', (YLeaf(YType.str, 'esd-client-ip-address'), ['str','str'])),
                                ('esd_client_port_num', (YLeaf(YType.uint16, 'esd-client-port-num'), ['int'])),
                                ('esd_client_location', (YLeaf(YType.str, 'esd-client-location'), ['str'])),
                                ('esd_client_switch_info_cached', (YLeaf(YType.enumeration, 'esd-client-switch-info-cached'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                                ('esd_client_sdr_info_cached', (YLeaf(YType.enumeration, 'esd-client-sdr-info-cached'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                            ])
                            self.esd_client_ip_address = None
                            self.esd_client_port_num = None
                            self.esd_client_location = None
                            self.esd_client_switch_info_cached = None
                            self.esd_client_sdr_info_cached = None
                            self._segment_path = lambda: "esd-client-id"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mgmt-agent/connections/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Connections.EsdClientId, ['esd_client_ip_address', 'esd_client_port_num', 'esd_client_location', 'esd_client_switch_info_cached', 'esd_client_sdr_info_cached'], name, value)



                    class MlapClientId(Entity):
                        """
                        
                        
                        .. attribute:: mlap_client_ip_address
                        
                        	
                        	**type**\: union of the below types:
                        
                        		**type**\: str
                        
                        			**pattern:** (([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])\\.){3}([0\-9]\|[1\-9][0\-9]\|1[0\-9][0\-9]\|2[0\-4][0\-9]\|25[0\-5])(%[\\p{N}\\p{L}]+)?
                        
                        		**type**\: str
                        
                        			**pattern:** ((\:\|[0\-9a\-fA\-F]{0,4})\:)([0\-9a\-fA\-F]{0,4}\:){0,5}((([0\-9a\-fA\-F]{0,4}\:)?(\:\|[0\-9a\-fA\-F]{0,4}))\|(((25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])\\.){3}(25[0\-5]\|2[0\-4][0\-9]\|[01]?[0\-9]?[0\-9])))(%[\\p{N}\\p{L}]+)?
                        
                        	**config**\: False
                        
                        .. attribute:: mlap_client_port_num
                        
                        	
                        	**type**\: int
                        
                        	**range:** 0..65535
                        
                        	**config**\: False
                        
                        .. attribute:: mlap_client_location
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: mlap_client_switch_info_cached
                        
                        	
                        	**type**\:  :py:class:`EsdmaSwitchYesNoEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchYesNoEnum>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.MgmtAgent.Connections.MlapClientId, self).__init__()

                            self.yang_name = "mlap-client-id"
                            self.yang_parent_name = "connections"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('mlap_client_ip_address', (YLeaf(YType.str, 'mlap-client-ip-address'), ['str','str'])),
                                ('mlap_client_port_num', (YLeaf(YType.uint16, 'mlap-client-port-num'), ['int'])),
                                ('mlap_client_location', (YLeaf(YType.str, 'mlap-client-location'), ['str'])),
                                ('mlap_client_switch_info_cached', (YLeaf(YType.enumeration, 'mlap-client-switch-info-cached'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchYesNoEnum', '')])),
                            ])
                            self.mlap_client_ip_address = None
                            self.mlap_client_port_num = None
                            self.mlap_client_location = None
                            self.mlap_client_switch_info_cached = None
                            self._segment_path = lambda: "mlap-client-id"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/mgmt-agent/connections/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.MgmtAgent.Connections.MlapClientId, ['mlap_client_ip_address', 'mlap_client_port_num', 'mlap_client_location', 'mlap_client_switch_info_cached'], name, value)





            class PortState(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.PortState.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.PortState, self).__init__()

                    self.yang_name = "port-state"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.PortState.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "port-state"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.PortState, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: rack  (key)
                    
                    	
                    	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                    
                    	**config**\: False
                    
                    .. attribute:: card  (key)
                    
                    	Card that owns a switch of interest
                    	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                    
                    	**config**\: False
                    
                    .. attribute:: switch_id  (key)
                    
                    	Switch type
                    	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                    
                    	**config**\: False
                    
                    .. attribute:: port_iter
                    
                    	
                    	**type**\: list of  		 :py:class:`PortIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.PortState.Location.PortIter>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.PortState.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "port-state"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['rack','card','switch_id']
                        self._child_classes = OrderedDict([("port-iter", ("port_iter", Controller.Switch.Oper.PortState.Location.PortIter))])
                        self._leafs = OrderedDict([
                            ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                            ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                            ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                        ])
                        self.rack = None
                        self.card = None
                        self.switch_id = None

                        self.port_iter = YList(self)
                        self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/port-state/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.PortState.Location, [u'rack', u'card', u'switch_id'], name, value)


                    class PortIter(Entity):
                        """
                        
                        
                        .. attribute:: port  (key)
                        
                        	Switch port
                        	**type**\: int
                        
                        	**range:** 0..127
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.PortState.Location.PortIter, self).__init__()

                            self.yang_name = "port-iter"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['port']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('port', (YLeaf(YType.int32, 'port'), ['int'])),
                            ])
                            self.port = None
                            self._segment_path = lambda: "port-iter" + "[port='" + str(self.port) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.PortState.Location.PortIter, [u'port'], name, value)





            class Trunk(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trunk.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.Switch.Oper.Trunk, self).__init__()

                    self.yang_name = "trunk"
                    self.yang_parent_name = "oper"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.Switch.Oper.Trunk.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "trunk"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.Switch.Oper.Trunk, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: rack  (key)
                    
                    	Rack to display the switch trunk group information for
                    	**type**\:  :py:class:`EsdmaRackNumEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaRackNumEnum>`
                    
                    	**config**\: False
                    
                    .. attribute:: card  (key)
                    
                    	Card to display the switch trunk group information for
                    	**type**\:  :py:class:`EsdmaCpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaCpu>`
                    
                    	**config**\: False
                    
                    .. attribute:: switch_id  (key)
                    
                    	Switch type to display the switch trunk group information for
                    	**type**\:  :py:class:`EsdmaSwitchTypeEnum <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaSwitchTypeEnum>`
                    
                    	**config**\: False
                    
                    .. attribute:: trunk_member_count
                    
                    	Number of member ports in the trunk group
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: trunk_name
                    
                    	Name of the trunk group
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: trunk_member_port_iter
                    
                    	
                    	**type**\: list of  		 :py:class:`TrunkMemberPortIter <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.Switch.Oper.Trunk.Location.TrunkMemberPortIter>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.Switch.Oper.Trunk.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "trunk"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['rack','card','switch_id']
                        self._child_classes = OrderedDict([("trunk-member-port-iter", ("trunk_member_port_iter", Controller.Switch.Oper.Trunk.Location.TrunkMemberPortIter))])
                        self._leafs = OrderedDict([
                            ('rack', (YLeaf(YType.enumeration, 'rack'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaRackNumEnum', '')])),
                            ('card', (YLeaf(YType.enumeration, 'card'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaCpu', '')])),
                            ('switch_id', (YLeaf(YType.enumeration, 'switch-id'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaSwitchTypeEnum', '')])),
                            ('trunk_member_count', (YLeaf(YType.uint32, 'trunk-member-count'), ['int'])),
                            ('trunk_name', (YLeaf(YType.str, 'trunk-name'), ['str'])),
                        ])
                        self.rack = None
                        self.card = None
                        self.switch_id = None
                        self.trunk_member_count = None
                        self.trunk_name = None

                        self.trunk_member_port_iter = YList(self)
                        self._segment_path = lambda: "location" + "[rack='" + str(self.rack) + "']" + "[card='" + str(self.card) + "']" + "[switch-id='" + str(self.switch_id) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/switch/oper/trunk/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.Switch.Oper.Trunk.Location, [u'rack', u'card', u'switch_id', u'trunk_member_count', u'trunk_name'], name, value)


                    class TrunkMemberPortIter(Entity):
                        """
                        
                        
                        .. attribute:: trunk_member_port  (key)
                        
                        	Trunk Member Port
                        	**type**\: int
                        
                        	**range:** 0..4294967295
                        
                        	**config**\: False
                        
                        .. attribute:: trunk_member_status
                        
                        	Trunk Member Status
                        	**type**\:  :py:class:`EsdmaTrunkMemberStatus <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types.EsdmaTrunkMemberStatus>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.Switch.Oper.Trunk.Location.TrunkMemberPortIter, self).__init__()

                            self.yang_name = "trunk-member-port-iter"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = ['trunk_member_port']
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('trunk_member_port', (YLeaf(YType.uint32, 'trunk-member-port'), ['int'])),
                                ('trunk_member_status', (YLeaf(YType.enumeration, 'trunk-member-status'), [('ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_ethsw_esdma_types', 'EsdmaTrunkMemberStatus', '')])),
                            ])
                            self.trunk_member_port = None
                            self.trunk_member_status = None
                            self._segment_path = lambda: "trunk-member-port-iter" + "[trunk-member-port='" + str(self.trunk_member_port) + "']"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.Switch.Oper.Trunk.Location.TrunkMemberPortIter, [u'trunk_member_port', u'trunk_member_status'], name, value)







    class FabricAction(Entity):
        """
        
        
        .. attribute:: fabric
        
        	Fabric resource commands
        	**type**\:  :py:class:`Fabric <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.FabricAction.Fabric>`
        
        

        """

        _prefix = 'calvados_controllers'
        _revision = '2017-10-11'

        def __init__(self):
            super(Controller.FabricAction, self).__init__()

            self.yang_name = "fabric_action"
            self.yang_parent_name = "controller"
            self.is_top_level_class = False
            self.has_list_ancestor = False
            self.ylist_key_names = []
            self._child_classes = OrderedDict([("fabric", ("fabric", Controller.FabricAction.Fabric))])
            self._leafs = OrderedDict()

            self.fabric = Controller.FabricAction.Fabric()
            self.fabric.parent = self
            self._children_name_map["fabric"] = "fabric"
            self._segment_path = lambda: "fabric_action"
            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/%s" % self._segment_path()
            self._is_frozen = True

        def __setattr__(self, name, value):
            self._perform_setattr(Controller.FabricAction, [], name, value)


        class Fabric(Entity):
            """
            Fabric resource commands
            
            .. attribute:: ppu
            
            	Plane by plane upgrade
            	**type**\:  :py:class:`Ppu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.FabricAction.Fabric.Ppu>`
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.FabricAction.Fabric, self).__init__()

                self.yang_name = "fabric"
                self.yang_parent_name = "fabric_action"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("ppu", ("ppu", Controller.FabricAction.Fabric.Ppu))])
                self._leafs = OrderedDict()

                self.ppu = Controller.FabricAction.Fabric.Ppu()
                self.ppu.parent = self
                self._children_name_map["ppu"] = "ppu"
                self._segment_path = lambda: "fabric"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric_action/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.FabricAction.Fabric, [], name, value)


            class Ppu(Entity):
                """
                Plane by plane upgrade.
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.FabricAction.Fabric.Ppu, self).__init__()

                    self.yang_name = "ppu"
                    self.yang_parent_name = "fabric"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([])
                    self._leafs = OrderedDict()
                    self._segment_path = lambda: "ppu"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/fabric_action/fabric/%s" % self._segment_path()
                    self._is_frozen = True





    class CardMgr(Entity):
        """
        
        
        .. attribute:: trace
        
        	show traceable processes
        	**type**\: list of  		 :py:class:`Trace <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Trace>`
        
        	**config**\: False
        
        .. attribute:: inventory
        
        	
        	**type**\:  :py:class:`Inventory <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Inventory>`
        
        	**config**\: False
        
        .. attribute:: event_history
        
        	
        	**type**\:  :py:class:`EventHistory <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.EventHistory>`
        
        	**config**\: False
        
        .. attribute:: notif_history
        
        	
        	**type**\:  :py:class:`NotifHistory <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.NotifHistory>`
        
        	**config**\: False
        
        .. attribute:: oir_history
        
        	
        	**type**\:  :py:class:`OirHistory <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.OirHistory>`
        
        	**config**\: False
        
        .. attribute:: iofpga
        
        	
        	**type**\:  :py:class:`Iofpga <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga>`
        
        	**config**\: False
        
        .. attribute:: bootloader
        
        	
        	**type**\:  :py:class:`Bootloader <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader>`
        
        	**config**\: False
        
        

        """

        _prefix = 'calvados_controllers'
        _revision = '2017-10-11'

        def __init__(self):
            super(Controller.CardMgr, self).__init__()

            self.yang_name = "card_mgr"
            self.yang_parent_name = "controller"
            self.is_top_level_class = False
            self.has_list_ancestor = False
            self.ylist_key_names = []
            self._child_classes = OrderedDict([("trace", ("trace", Controller.CardMgr.Trace)), ("inventory", ("inventory", Controller.CardMgr.Inventory)), ("event-history", ("event_history", Controller.CardMgr.EventHistory)), ("notif-history", ("notif_history", Controller.CardMgr.NotifHistory)), ("oir-history", ("oir_history", Controller.CardMgr.OirHistory)), ("iofpga", ("iofpga", Controller.CardMgr.Iofpga)), ("bootloader", ("bootloader", Controller.CardMgr.Bootloader))])
            self._leafs = OrderedDict()

            self.inventory = Controller.CardMgr.Inventory()
            self.inventory.parent = self
            self._children_name_map["inventory"] = "inventory"

            self.event_history = Controller.CardMgr.EventHistory()
            self.event_history.parent = self
            self._children_name_map["event_history"] = "event-history"

            self.notif_history = Controller.CardMgr.NotifHistory()
            self.notif_history.parent = self
            self._children_name_map["notif_history"] = "notif-history"

            self.oir_history = Controller.CardMgr.OirHistory()
            self.oir_history.parent = self
            self._children_name_map["oir_history"] = "oir-history"

            self.iofpga = Controller.CardMgr.Iofpga()
            self.iofpga.parent = self
            self._children_name_map["iofpga"] = "iofpga"

            self.bootloader = Controller.CardMgr.Bootloader()
            self.bootloader.parent = self
            self._children_name_map["bootloader"] = "bootloader"

            self.trace = YList(self)
            self._segment_path = lambda: "card_mgr"
            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/%s" % self._segment_path()
            self._is_frozen = True

        def __setattr__(self, name, value):
            self._perform_setattr(Controller.CardMgr, [], name, value)


        class Trace(Entity):
            """
            show traceable processes
            
            .. attribute:: buffer  (key)
            
            	
            	**type**\: str
            
            	**config**\: False
            
            .. attribute:: location
            
            	
            	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Trace.Location>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.CardMgr.Trace, self).__init__()

                self.yang_name = "trace"
                self.yang_parent_name = "card_mgr"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = ['buffer']
                self._child_classes = OrderedDict([("location", ("location", Controller.CardMgr.Trace.Location))])
                self._leafs = OrderedDict([
                    ('buffer', (YLeaf(YType.str, 'buffer'), ['str'])),
                ])
                self.buffer = None

                self.location = YList(self)
                self._segment_path = lambda: "trace" + "[buffer='" + str(self.buffer) + "']"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.CardMgr.Trace, [u'buffer'], name, value)


            class Location(Entity):
                """
                
                
                .. attribute:: location_name  (key)
                
                	
                	**type**\: str
                
                	**config**\: False
                
                .. attribute:: all_options
                
                	
                	**type**\: list of  		 :py:class:`AllOptions <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Trace.Location.AllOptions>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.Trace.Location, self).__init__()

                    self.yang_name = "location"
                    self.yang_parent_name = "trace"
                    self.is_top_level_class = False
                    self.has_list_ancestor = True
                    self.ylist_key_names = ['location_name']
                    self._child_classes = OrderedDict([("all-options", ("all_options", Controller.CardMgr.Trace.Location.AllOptions))])
                    self._leafs = OrderedDict([
                        ('location_name', (YLeaf(YType.str, 'location_name'), ['str'])),
                    ])
                    self.location_name = None

                    self.all_options = YList(self)
                    self._segment_path = lambda: "location" + "[location_name='" + str(self.location_name) + "']"
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.Trace.Location, [u'location_name'], name, value)


                class AllOptions(Entity):
                    """
                    
                    
                    .. attribute:: option  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: trace_blocks
                    
                    	
                    	**type**\: list of  		 :py:class:`TraceBlocks <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Trace.Location.AllOptions.TraceBlocks>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Trace.Location.AllOptions, self).__init__()

                        self.yang_name = "all-options"
                        self.yang_parent_name = "location"
                        self.is_top_level_class = False
                        self.has_list_ancestor = True
                        self.ylist_key_names = ['option']
                        self._child_classes = OrderedDict([("trace-blocks", ("trace_blocks", Controller.CardMgr.Trace.Location.AllOptions.TraceBlocks))])
                        self._leafs = OrderedDict([
                            ('option', (YLeaf(YType.str, 'option'), ['str'])),
                        ])
                        self.option = None

                        self.trace_blocks = YList(self)
                        self._segment_path = lambda: "all-options" + "[option='" + str(self.option) + "']"
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Trace.Location.AllOptions, [u'option'], name, value)


                    class TraceBlocks(Entity):
                        """
                        
                        
                        .. attribute:: data
                        
                        	Trace output block
                        	**type**\: str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Trace.Location.AllOptions.TraceBlocks, self).__init__()

                            self.yang_name = "trace-blocks"
                            self.yang_parent_name = "all-options"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('data', (YLeaf(YType.str, 'data'), ['str'])),
                            ])
                            self.data = None
                            self._segment_path = lambda: "trace-blocks"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Trace.Location.AllOptions.TraceBlocks, [u'data'], name, value)






        class Inventory(Entity):
            """
            
            
            .. attribute:: summary
            
            	
            	**type**\:  :py:class:`Summary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Inventory.Summary>`
            
            	**config**\: False
            
            .. attribute:: detail
            
            	
            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Inventory.Detail>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.CardMgr.Inventory, self).__init__()

                self.yang_name = "inventory"
                self.yang_parent_name = "card_mgr"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("summary", ("summary", Controller.CardMgr.Inventory.Summary)), ("detail", ("detail", Controller.CardMgr.Inventory.Detail))])
                self._leafs = OrderedDict()

                self.summary = Controller.CardMgr.Inventory.Summary()
                self.summary.parent = self
                self._children_name_map["summary"] = "summary"

                self.detail = Controller.CardMgr.Inventory.Detail()
                self.detail.parent = self
                self._children_name_map["detail"] = "detail"
                self._segment_path = lambda: "inventory"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.CardMgr.Inventory, [], name, value)


            class Summary(Entity):
                """
                
                
                .. attribute:: card_mgr_inv_summary
                
                	
                	**type**\: list of  		 :py:class:`CardMgrInvSummary <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Inventory.Summary.CardMgrInvSummary>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.Inventory.Summary, self).__init__()

                    self.yang_name = "summary"
                    self.yang_parent_name = "inventory"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("card_mgr_inv_summary", ("card_mgr_inv_summary", Controller.CardMgr.Inventory.Summary.CardMgrInvSummary))])
                    self._leafs = OrderedDict()

                    self.card_mgr_inv_summary = YList(self)
                    self._segment_path = lambda: "summary"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/inventory/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.Inventory.Summary, [], name, value)


                class CardMgrInvSummary(Entity):
                    """
                    
                    
                    .. attribute:: location  (key)
                    
                    	
                    	**type**\: str
                    
                    	**mandatory**\: True
                    
                    	**config**\: False
                    
                    .. attribute:: card_mgr_inv_pid_string
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_mgr_inv_slot_number
                    
                    	
                    	**type**\: int
                    
                    	**range:** 0..4294967295
                    
                    	**config**\: False
                    
                    .. attribute:: card_mgr_inv_serial_number
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_mgr_inv_hw_version
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_mgr_inv_card_state
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Inventory.Summary.CardMgrInvSummary, self).__init__()

                        self.yang_name = "card_mgr_inv_summary"
                        self.yang_parent_name = "summary"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['location']
                        self._child_classes = OrderedDict([])
                        self._leafs = OrderedDict([
                            ('location', (YLeaf(YType.str, 'location'), ['str'])),
                            ('card_mgr_inv_pid_string', (YLeaf(YType.str, 'card_mgr_inv_PID_string'), ['str'])),
                            ('card_mgr_inv_slot_number', (YLeaf(YType.uint32, 'card_mgr_inv_slot_number'), ['int'])),
                            ('card_mgr_inv_serial_number', (YLeaf(YType.str, 'card_mgr_inv_serial_number'), ['str'])),
                            ('card_mgr_inv_hw_version', (YLeaf(YType.str, 'card_mgr_inv_hw_version'), ['str'])),
                            ('card_mgr_inv_card_state', (YLeaf(YType.str, 'card_mgr_inv_card_state'), ['str'])),
                        ])
                        self.location = None
                        self.card_mgr_inv_pid_string = None
                        self.card_mgr_inv_slot_number = None
                        self.card_mgr_inv_serial_number = None
                        self.card_mgr_inv_hw_version = None
                        self.card_mgr_inv_card_state = None
                        self._segment_path = lambda: "card_mgr_inv_summary" + "[location='" + str(self.location) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/inventory/summary/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Inventory.Summary.CardMgrInvSummary, [u'location', u'card_mgr_inv_pid_string', u'card_mgr_inv_slot_number', u'card_mgr_inv_serial_number', u'card_mgr_inv_hw_version', u'card_mgr_inv_card_state'], name, value)




            class Detail(Entity):
                """
                
                
                .. attribute:: card_mgr_inv_detail
                
                	
                	**type**\: list of  		 :py:class:`CardMgrInvDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Inventory.Detail.CardMgrInvDetail>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.Inventory.Detail, self).__init__()

                    self.yang_name = "detail"
                    self.yang_parent_name = "inventory"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("card_mgr_inv_detail", ("card_mgr_inv_detail", Controller.CardMgr.Inventory.Detail.CardMgrInvDetail))])
                    self._leafs = OrderedDict()

                    self.card_mgr_inv_detail = YList(self)
                    self._segment_path = lambda: "detail"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/inventory/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.Inventory.Detail, [], name, value)


                class CardMgrInvDetail(Entity):
                    """
                    
                    
                    .. attribute:: location  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_mgr_inv_detail_list
                    
                    	
                    	**type**\:  :py:class:`CardMgrInvDetailList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Inventory.Detail.CardMgrInvDetail.CardMgrInvDetailList>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Inventory.Detail.CardMgrInvDetail, self).__init__()

                        self.yang_name = "card_mgr_inv_detail"
                        self.yang_parent_name = "detail"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['location']
                        self._child_classes = OrderedDict([("card_mgr_inv_detail_list", ("card_mgr_inv_detail_list", Controller.CardMgr.Inventory.Detail.CardMgrInvDetail.CardMgrInvDetailList))])
                        self._leafs = OrderedDict([
                            ('location', (YLeaf(YType.str, 'location'), ['str'])),
                        ])
                        self.location = None

                        self.card_mgr_inv_detail_list = Controller.CardMgr.Inventory.Detail.CardMgrInvDetail.CardMgrInvDetailList()
                        self.card_mgr_inv_detail_list.parent = self
                        self._children_name_map["card_mgr_inv_detail_list"] = "card_mgr_inv_detail_list"
                        self._segment_path = lambda: "card_mgr_inv_detail" + "[location='" + str(self.location) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/inventory/detail/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Inventory.Detail.CardMgrInvDetail, [u'location'], name, value)


                    class CardMgrInvDetailList(Entity):
                        """
                        
                        
                        .. attribute:: card_mgr_inv_detail_values
                        
                        	
                        	**type**\: list of str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Inventory.Detail.CardMgrInvDetail.CardMgrInvDetailList, self).__init__()

                            self.yang_name = "card_mgr_inv_detail_list"
                            self.yang_parent_name = "card_mgr_inv_detail"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('card_mgr_inv_detail_values', (YLeafList(YType.str, 'card_mgr_inv_detail_values'), ['str'])),
                            ])
                            self.card_mgr_inv_detail_values = []
                            self._segment_path = lambda: "card_mgr_inv_detail_list"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Inventory.Detail.CardMgrInvDetail.CardMgrInvDetailList, [u'card_mgr_inv_detail_values'], name, value)






        class EventHistory(Entity):
            """
            
            
            .. attribute:: brief
            
            	
            	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.EventHistory.Brief>`
            
            	**config**\: False
            
            .. attribute:: detail
            
            	
            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.EventHistory.Detail>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.CardMgr.EventHistory, self).__init__()

                self.yang_name = "event-history"
                self.yang_parent_name = "card_mgr"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("brief", ("brief", Controller.CardMgr.EventHistory.Brief)), ("detail", ("detail", Controller.CardMgr.EventHistory.Detail))])
                self._leafs = OrderedDict()

                self.brief = Controller.CardMgr.EventHistory.Brief()
                self.brief.parent = self
                self._children_name_map["brief"] = "brief"

                self.detail = Controller.CardMgr.EventHistory.Detail()
                self.detail.parent = self
                self._children_name_map["detail"] = "detail"
                self._segment_path = lambda: "event-history"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.CardMgr.EventHistory, [], name, value)


            class Brief(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.EventHistory.Brief.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.EventHistory.Brief, self).__init__()

                    self.yang_name = "brief"
                    self.yang_parent_name = "event-history"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.CardMgr.EventHistory.Brief.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "brief"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/event-history/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.EventHistory.Brief, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: location  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_event_hist_brief
                    
                    	
                    	**type**\:  :py:class:`CardEventHistBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.EventHistory.Brief.Location.CardEventHistBrief>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.EventHistory.Brief.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "brief"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['location']
                        self._child_classes = OrderedDict([("card_event_hist_brief", ("card_event_hist_brief", Controller.CardMgr.EventHistory.Brief.Location.CardEventHistBrief))])
                        self._leafs = OrderedDict([
                            ('location', (YLeaf(YType.str, 'location'), ['str'])),
                        ])
                        self.location = None

                        self.card_event_hist_brief = Controller.CardMgr.EventHistory.Brief.Location.CardEventHistBrief()
                        self.card_event_hist_brief.parent = self
                        self._children_name_map["card_event_hist_brief"] = "card_event_hist_brief"
                        self._segment_path = lambda: "location" + "[location='" + str(self.location) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/event-history/brief/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.EventHistory.Brief.Location, [u'location'], name, value)


                    class CardEventHistBrief(Entity):
                        """
                        
                        
                        .. attribute:: card_event_hist_brief_values
                        
                        	
                        	**type**\: list of str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.EventHistory.Brief.Location.CardEventHistBrief, self).__init__()

                            self.yang_name = "card_event_hist_brief"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('card_event_hist_brief_values', (YLeafList(YType.str, 'card_event_hist_brief_values'), ['str'])),
                            ])
                            self.card_event_hist_brief_values = []
                            self._segment_path = lambda: "card_event_hist_brief"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.EventHistory.Brief.Location.CardEventHistBrief, [u'card_event_hist_brief_values'], name, value)





            class Detail(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.EventHistory.Detail.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.EventHistory.Detail, self).__init__()

                    self.yang_name = "detail"
                    self.yang_parent_name = "event-history"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.CardMgr.EventHistory.Detail.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "detail"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/event-history/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.EventHistory.Detail, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: location  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_event_hist_detail
                    
                    	
                    	**type**\:  :py:class:`CardEventHistDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.EventHistory.Detail.Location.CardEventHistDetail>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.EventHistory.Detail.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "detail"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['location']
                        self._child_classes = OrderedDict([("card_event_hist_detail", ("card_event_hist_detail", Controller.CardMgr.EventHistory.Detail.Location.CardEventHistDetail))])
                        self._leafs = OrderedDict([
                            ('location', (YLeaf(YType.str, 'location'), ['str'])),
                        ])
                        self.location = None

                        self.card_event_hist_detail = Controller.CardMgr.EventHistory.Detail.Location.CardEventHistDetail()
                        self.card_event_hist_detail.parent = self
                        self._children_name_map["card_event_hist_detail"] = "card_event_hist_detail"
                        self._segment_path = lambda: "location" + "[location='" + str(self.location) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/event-history/detail/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.EventHistory.Detail.Location, [u'location'], name, value)


                    class CardEventHistDetail(Entity):
                        """
                        
                        
                        .. attribute:: card_event_hist_detail_values
                        
                        	
                        	**type**\: list of str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.EventHistory.Detail.Location.CardEventHistDetail, self).__init__()

                            self.yang_name = "card_event_hist_detail"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('card_event_hist_detail_values', (YLeafList(YType.str, 'card_event_hist_detail_values'), ['str'])),
                            ])
                            self.card_event_hist_detail_values = []
                            self._segment_path = lambda: "card_event_hist_detail"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.EventHistory.Detail.Location.CardEventHistDetail, [u'card_event_hist_detail_values'], name, value)






        class NotifHistory(Entity):
            """
            
            
            .. attribute:: brief
            
            	
            	**type**\:  :py:class:`Brief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.NotifHistory.Brief>`
            
            	**config**\: False
            
            .. attribute:: detail
            
            	
            	**type**\:  :py:class:`Detail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.NotifHistory.Detail>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.CardMgr.NotifHistory, self).__init__()

                self.yang_name = "notif-history"
                self.yang_parent_name = "card_mgr"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("brief", ("brief", Controller.CardMgr.NotifHistory.Brief)), ("detail", ("detail", Controller.CardMgr.NotifHistory.Detail))])
                self._leafs = OrderedDict()

                self.brief = Controller.CardMgr.NotifHistory.Brief()
                self.brief.parent = self
                self._children_name_map["brief"] = "brief"

                self.detail = Controller.CardMgr.NotifHistory.Detail()
                self.detail.parent = self
                self._children_name_map["detail"] = "detail"
                self._segment_path = lambda: "notif-history"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.CardMgr.NotifHistory, [], name, value)


            class Brief(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.NotifHistory.Brief.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.NotifHistory.Brief, self).__init__()

                    self.yang_name = "brief"
                    self.yang_parent_name = "notif-history"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.CardMgr.NotifHistory.Brief.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "brief"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/notif-history/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.NotifHistory.Brief, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: location  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_notif_hist_brief
                    
                    	
                    	**type**\:  :py:class:`CardNotifHistBrief <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.NotifHistory.Brief.Location.CardNotifHistBrief>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.NotifHistory.Brief.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "brief"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['location']
                        self._child_classes = OrderedDict([("card_notif_hist_brief", ("card_notif_hist_brief", Controller.CardMgr.NotifHistory.Brief.Location.CardNotifHistBrief))])
                        self._leafs = OrderedDict([
                            ('location', (YLeaf(YType.str, 'location'), ['str'])),
                        ])
                        self.location = None

                        self.card_notif_hist_brief = Controller.CardMgr.NotifHistory.Brief.Location.CardNotifHistBrief()
                        self.card_notif_hist_brief.parent = self
                        self._children_name_map["card_notif_hist_brief"] = "card_notif_hist_brief"
                        self._segment_path = lambda: "location" + "[location='" + str(self.location) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/notif-history/brief/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.NotifHistory.Brief.Location, [u'location'], name, value)


                    class CardNotifHistBrief(Entity):
                        """
                        
                        
                        .. attribute:: card_notif_hist_brief_values
                        
                        	
                        	**type**\: list of str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.NotifHistory.Brief.Location.CardNotifHistBrief, self).__init__()

                            self.yang_name = "card_notif_hist_brief"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('card_notif_hist_brief_values', (YLeafList(YType.str, 'card_notif_hist_brief_values'), ['str'])),
                            ])
                            self.card_notif_hist_brief_values = []
                            self._segment_path = lambda: "card_notif_hist_brief"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.NotifHistory.Brief.Location.CardNotifHistBrief, [u'card_notif_hist_brief_values'], name, value)





            class Detail(Entity):
                """
                
                
                .. attribute:: location
                
                	
                	**type**\: list of  		 :py:class:`Location <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.NotifHistory.Detail.Location>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.NotifHistory.Detail, self).__init__()

                    self.yang_name = "detail"
                    self.yang_parent_name = "notif-history"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("location", ("location", Controller.CardMgr.NotifHistory.Detail.Location))])
                    self._leafs = OrderedDict()

                    self.location = YList(self)
                    self._segment_path = lambda: "detail"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/notif-history/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.NotifHistory.Detail, [], name, value)


                class Location(Entity):
                    """
                    
                    
                    .. attribute:: location  (key)
                    
                    	
                    	**type**\: str
                    
                    	**config**\: False
                    
                    .. attribute:: card_notif_hist_detail
                    
                    	
                    	**type**\:  :py:class:`CardNotifHistDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.NotifHistory.Detail.Location.CardNotifHistDetail>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.NotifHistory.Detail.Location, self).__init__()

                        self.yang_name = "location"
                        self.yang_parent_name = "detail"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = ['location']
                        self._child_classes = OrderedDict([("card_notif_hist_detail", ("card_notif_hist_detail", Controller.CardMgr.NotifHistory.Detail.Location.CardNotifHistDetail))])
                        self._leafs = OrderedDict([
                            ('location', (YLeaf(YType.str, 'location'), ['str'])),
                        ])
                        self.location = None

                        self.card_notif_hist_detail = Controller.CardMgr.NotifHistory.Detail.Location.CardNotifHistDetail()
                        self.card_notif_hist_detail.parent = self
                        self._children_name_map["card_notif_hist_detail"] = "card_notif_hist_detail"
                        self._segment_path = lambda: "location" + "[location='" + str(self.location) + "']"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/notif-history/detail/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.NotifHistory.Detail.Location, [u'location'], name, value)


                    class CardNotifHistDetail(Entity):
                        """
                        
                        
                        .. attribute:: card_notif_hist_detail_values
                        
                        	
                        	**type**\: list of str
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.NotifHistory.Detail.Location.CardNotifHistDetail, self).__init__()

                            self.yang_name = "card_notif_hist_detail"
                            self.yang_parent_name = "location"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_classes = OrderedDict([])
                            self._leafs = OrderedDict([
                                ('card_notif_hist_detail_values', (YLeafList(YType.str, 'card_notif_hist_detail_values'), ['str'])),
                            ])
                            self.card_notif_hist_detail_values = []
                            self._segment_path = lambda: "card_notif_hist_detail"
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.NotifHistory.Detail.Location.CardNotifHistDetail, [u'card_notif_hist_detail_values'], name, value)






        class OirHistory(Entity):
            """
            
            
            .. attribute:: rack
            
            	
            	**type**\: list of  		 :py:class:`Rack <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.OirHistory.Rack>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.CardMgr.OirHistory, self).__init__()

                self.yang_name = "oir-history"
                self.yang_parent_name = "card_mgr"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("rack", ("rack", Controller.CardMgr.OirHistory.Rack))])
                self._leafs = OrderedDict()

                self.rack = YList(self)
                self._segment_path = lambda: "oir-history"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.CardMgr.OirHistory, [], name, value)


            class Rack(Entity):
                """
                
                
                .. attribute:: rack  (key)
                
                	
                	**type**\: str
                
                	**config**\: False
                
                .. attribute:: card_oir_hist
                
                	
                	**type**\:  :py:class:`CardOirHist <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.OirHistory.Rack.CardOirHist>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.OirHistory.Rack, self).__init__()

                    self.yang_name = "rack"
                    self.yang_parent_name = "oir-history"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = ['rack']
                    self._child_classes = OrderedDict([("card_oir_hist", ("card_oir_hist", Controller.CardMgr.OirHistory.Rack.CardOirHist))])
                    self._leafs = OrderedDict([
                        ('rack', (YLeaf(YType.str, 'rack'), ['str'])),
                    ])
                    self.rack = None

                    self.card_oir_hist = Controller.CardMgr.OirHistory.Rack.CardOirHist()
                    self.card_oir_hist.parent = self
                    self._children_name_map["card_oir_hist"] = "card_oir_hist"
                    self._segment_path = lambda: "rack" + "[rack='" + str(self.rack) + "']"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/oir-history/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.OirHistory.Rack, [u'rack'], name, value)


                class CardOirHist(Entity):
                    """
                    
                    
                    .. attribute:: card_oir_events
                    
                    	
                    	**type**\: list of str
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.OirHistory.Rack.CardOirHist, self).__init__()

                        self.yang_name = "card_oir_hist"
                        self.yang_parent_name = "rack"
                        self.is_top_level_class = False
                        self.has_list_ancestor = True
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([])
                        self._leafs = OrderedDict([
                            ('card_oir_events', (YLeafList(YType.str, 'card_oir_events'), ['str'])),
                        ])
                        self.card_oir_events = []
                        self._segment_path = lambda: "card_oir_hist"
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.OirHistory.Rack.CardOirHist, [u'card_oir_events'], name, value)





        class Iofpga(Entity):
            """
            
            
            .. attribute:: register
            
            	
            	**type**\:  :py:class:`Register <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register>`
            
            	**config**\: False
            
            .. attribute:: flash
            
            	
            	**type**\:  :py:class:`Flash <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Flash>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.CardMgr.Iofpga, self).__init__()

                self.yang_name = "iofpga"
                self.yang_parent_name = "card_mgr"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("register", ("register", Controller.CardMgr.Iofpga.Register)), ("flash", ("flash", Controller.CardMgr.Iofpga.Flash))])
                self._leafs = OrderedDict()

                self.register = Controller.CardMgr.Iofpga.Register()
                self.register.parent = self
                self._children_name_map["register"] = "register"

                self.flash = Controller.CardMgr.Iofpga.Flash()
                self.flash.parent = self
                self._children_name_map["flash"] = "flash"
                self._segment_path = lambda: "iofpga"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.CardMgr.Iofpga, [], name, value)


            class Register(Entity):
                """
                
                
                .. attribute:: cpu
                
                	
                	**type**\:  :py:class:`Cpu <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu>`
                
                	**config**\: False
                
                .. attribute:: mb
                
                	
                	**type**\:  :py:class:`Mb <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb>`
                
                	**config**\: False
                
                .. attribute:: dc
                
                	
                	**type**\:  :py:class:`Dc <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.Iofpga.Register, self).__init__()

                    self.yang_name = "register"
                    self.yang_parent_name = "iofpga"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("cpu", ("cpu", Controller.CardMgr.Iofpga.Register.Cpu)), ("mb", ("mb", Controller.CardMgr.Iofpga.Register.Mb)), ("dc", ("dc", Controller.CardMgr.Iofpga.Register.Dc))])
                    self._leafs = OrderedDict()

                    self.cpu = Controller.CardMgr.Iofpga.Register.Cpu()
                    self.cpu.parent = self
                    self._children_name_map["cpu"] = "cpu"

                    self.mb = Controller.CardMgr.Iofpga.Register.Mb()
                    self.mb.parent = self
                    self._children_name_map["mb"] = "mb"

                    self.dc = Controller.CardMgr.Iofpga.Register.Dc()
                    self.dc.parent = self
                    self._children_name_map["dc"] = "dc"
                    self._segment_path = lambda: "register"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.Iofpga.Register, [], name, value)


                class Cpu(Entity):
                    """
                    
                    
                    .. attribute:: register_location
                    
                    	
                    	**type**\: list of  		 :py:class:`RegisterLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Iofpga.Register.Cpu, self).__init__()

                        self.yang_name = "cpu"
                        self.yang_parent_name = "register"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("register_location", ("register_location", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation))])
                        self._leafs = OrderedDict()

                        self.register_location = YList(self)
                        self._segment_path = lambda: "cpu"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/register/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu, [], name, value)


                    class RegisterLocation(Entity):
                        """
                        
                        
                        .. attribute:: register_location  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_block_number
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaBlockNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber>`
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_offset
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaOffset <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset>`
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_address
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation, self).__init__()

                            self.yang_name = "register_location"
                            self.yang_parent_name = "cpu"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['register_location']
                            self._child_classes = OrderedDict([("iofpga_block_number", ("iofpga_block_number", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber)), ("iofpga_offset", ("iofpga_offset", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset)), ("iofpga_address", ("iofpga_address", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress))])
                            self._leafs = OrderedDict([
                                ('register_location', (YLeaf(YType.str, 'register_location'), ['str'])),
                            ])
                            self.register_location = None

                            self.iofpga_block_number = YList(self)
                            self.iofpga_offset = YList(self)
                            self.iofpga_address = YList(self)
                            self._segment_path = lambda: "register_location" + "[register_location='" + str(self.register_location) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/register/cpu/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation, [u'register_location'], name, value)


                        class IofpgaBlockNumber(Entity):
                            """
                            
                            
                            .. attribute:: iofpga_block_num  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: block_location
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_block_nm
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_register_number
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegisterNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber, self).__init__()

                                self.yang_name = "iofpga_block_number"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['iofpga_block_num']
                                self._child_classes = OrderedDict([("iofpga_register_number", ("iofpga_register_number", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber))])
                                self._leafs = OrderedDict([
                                    ('iofpga_block_num', (YLeaf(YType.uint32, 'iofpga_block_num'), ['int'])),
                                    ('block_location', (YLeaf(YType.str, 'block_location'), ['str'])),
                                    ('iofpga_block_nm', (YLeaf(YType.str, 'iofpga_block_nm'), ['str'])),
                                ])
                                self.iofpga_block_num = None
                                self.block_location = None
                                self.iofpga_block_nm = None

                                self.iofpga_register_number = YList(self)
                                self._segment_path = lambda: "iofpga_block_number" + "[iofpga_block_num='" + str(self.iofpga_block_num) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber, [u'iofpga_block_num', u'block_location', u'iofpga_block_nm'], name, value)


                            class IofpgaRegisterNumber(Entity):
                                """
                                
                                
                                .. attribute:: index  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_register_name
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_data
                                
                                	
                                	**type**\: list of  		 :py:class:`IofpgaData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber, self).__init__()

                                    self.yang_name = "iofpga_register_number"
                                    self.yang_parent_name = "iofpga_block_number"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['index']
                                    self._child_classes = OrderedDict([("iofpga_data", ("iofpga_data", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData))])
                                    self._leafs = OrderedDict([
                                        ('index', (YLeaf(YType.uint32, 'index'), ['int'])),
                                        ('iofpga_register_name', (YLeaf(YType.str, 'iofpga_register_name'), ['str'])),
                                    ])
                                    self.index = None
                                    self.iofpga_register_name = None

                                    self.iofpga_data = YList(self)
                                    self._segment_path = lambda: "iofpga_register_number" + "[index='" + str(self.index) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber, [u'index', u'iofpga_register_name'], name, value)


                                class IofpgaData(Entity):
                                    """
                                    
                                    
                                    .. attribute:: name
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: offset
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: value
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData, self).__init__()

                                        self.yang_name = "iofpga_data"
                                        self.yang_parent_name = "iofpga_register_number"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('name', (YLeaf(YType.str, 'name'), ['str'])),
                                            ('offset', (YLeaf(YType.uint32, 'offset'), ['int'])),
                                            ('value', (YLeaf(YType.uint32, 'value'), ['int'])),
                                        ])
                                        self.name = None
                                        self.offset = None
                                        self.value = None
                                        self._segment_path = lambda: "iofpga_data"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData, [u'name', u'offset', u'value'], name, value)





                        class IofpgaOffset(Entity):
                            """
                            
                            
                            .. attribute:: hex_offset  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_reg_offset_data
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegOffsetData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset, self).__init__()

                                self.yang_name = "iofpga_offset"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['hex_offset']
                                self._child_classes = OrderedDict([("iofpga_reg_offset_data", ("iofpga_reg_offset_data", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData))])
                                self._leafs = OrderedDict([
                                    ('hex_offset', (YLeaf(YType.str, 'hex_offset'), ['str'])),
                                ])
                                self.hex_offset = None

                                self.iofpga_reg_offset_data = YList(self)
                                self._segment_path = lambda: "iofpga_offset" + "[hex_offset='" + str(self.hex_offset) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset, [u'hex_offset'], name, value)


                            class IofpgaRegOffsetData(Entity):
                                """
                                
                                
                                .. attribute:: iofpga_reg_off_addr
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: reg_off_value
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData, self).__init__()

                                    self.yang_name = "iofpga_reg_offset_data"
                                    self.yang_parent_name = "iofpga_offset"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('iofpga_reg_off_addr', (YLeaf(YType.uint32, 'iofpga_reg_off_addr'), ['int'])),
                                        ('reg_off_value', (YLeaf(YType.str, 'reg_off_value'), ['str'])),
                                    ])
                                    self.iofpga_reg_off_addr = None
                                    self.reg_off_value = None
                                    self._segment_path = lambda: "iofpga_reg_offset_data"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData, [u'iofpga_reg_off_addr', u'reg_off_value'], name, value)




                        class IofpgaAddress(Entity):
                            """
                            
                            
                            .. attribute:: start_hex_addr  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: end_hex_addr  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_reg_range_addr_list
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegRangeAddrList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress, self).__init__()

                                self.yang_name = "iofpga_address"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['start_hex_addr','end_hex_addr']
                                self._child_classes = OrderedDict([("iofpga_reg_range_addr_list", ("iofpga_reg_range_addr_list", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList))])
                                self._leafs = OrderedDict([
                                    ('start_hex_addr', (YLeaf(YType.str, 'start_hex_addr'), ['str'])),
                                    ('end_hex_addr', (YLeaf(YType.str, 'end_hex_addr'), ['str'])),
                                ])
                                self.start_hex_addr = None
                                self.end_hex_addr = None

                                self.iofpga_reg_range_addr_list = YList(self)
                                self._segment_path = lambda: "iofpga_address" + "[start_hex_addr='" + str(self.start_hex_addr) + "']" + "[end_hex_addr='" + str(self.end_hex_addr) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress, [u'start_hex_addr', u'end_hex_addr'], name, value)


                            class IofpgaRegRangeAddrList(Entity):
                                """
                                
                                
                                .. attribute:: iofpga_reg_range_addr  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_reg_data
                                
                                	
                                	**type**\: list of  		 :py:class:`IofpgaRegData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList, self).__init__()

                                    self.yang_name = "iofpga_reg_range_addr_list"
                                    self.yang_parent_name = "iofpga_address"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['iofpga_reg_range_addr']
                                    self._child_classes = OrderedDict([("iofpga_reg_data", ("iofpga_reg_data", Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData))])
                                    self._leafs = OrderedDict([
                                        ('iofpga_reg_range_addr', (YLeaf(YType.uint32, 'iofpga_reg_range_addr'), ['int'])),
                                    ])
                                    self.iofpga_reg_range_addr = None

                                    self.iofpga_reg_data = YList(self)
                                    self._segment_path = lambda: "iofpga_reg_range_addr_list" + "[iofpga_reg_range_addr='" + str(self.iofpga_reg_range_addr) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList, [u'iofpga_reg_range_addr'], name, value)


                                class IofpgaRegData(Entity):
                                    """
                                    
                                    
                                    .. attribute:: iofpga_reg_addr
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: reg_value
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData, self).__init__()

                                        self.yang_name = "iofpga_reg_data"
                                        self.yang_parent_name = "iofpga_reg_range_addr_list"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('iofpga_reg_addr', (YLeaf(YType.uint32, 'iofpga_reg_addr'), ['int'])),
                                            ('reg_value', (YLeaf(YType.str, 'reg_value'), ['str'])),
                                        ])
                                        self.iofpga_reg_addr = None
                                        self.reg_value = None
                                        self._segment_path = lambda: "iofpga_reg_data"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Cpu.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData, [u'iofpga_reg_addr', u'reg_value'], name, value)







                class Mb(Entity):
                    """
                    
                    
                    .. attribute:: register_location
                    
                    	
                    	**type**\: list of  		 :py:class:`RegisterLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Iofpga.Register.Mb, self).__init__()

                        self.yang_name = "mb"
                        self.yang_parent_name = "register"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("register_location", ("register_location", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation))])
                        self._leafs = OrderedDict()

                        self.register_location = YList(self)
                        self._segment_path = lambda: "mb"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/register/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb, [], name, value)


                    class RegisterLocation(Entity):
                        """
                        
                        
                        .. attribute:: register_location  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_block_number
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaBlockNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber>`
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_offset
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaOffset <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset>`
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_address
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation, self).__init__()

                            self.yang_name = "register_location"
                            self.yang_parent_name = "mb"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['register_location']
                            self._child_classes = OrderedDict([("iofpga_block_number", ("iofpga_block_number", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber)), ("iofpga_offset", ("iofpga_offset", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset)), ("iofpga_address", ("iofpga_address", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress))])
                            self._leafs = OrderedDict([
                                ('register_location', (YLeaf(YType.str, 'register_location'), ['str'])),
                            ])
                            self.register_location = None

                            self.iofpga_block_number = YList(self)
                            self.iofpga_offset = YList(self)
                            self.iofpga_address = YList(self)
                            self._segment_path = lambda: "register_location" + "[register_location='" + str(self.register_location) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/register/mb/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation, [u'register_location'], name, value)


                        class IofpgaBlockNumber(Entity):
                            """
                            
                            
                            .. attribute:: iofpga_block_num  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: block_location
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_block_nm
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_register_number
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegisterNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber, self).__init__()

                                self.yang_name = "iofpga_block_number"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['iofpga_block_num']
                                self._child_classes = OrderedDict([("iofpga_register_number", ("iofpga_register_number", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber))])
                                self._leafs = OrderedDict([
                                    ('iofpga_block_num', (YLeaf(YType.uint32, 'iofpga_block_num'), ['int'])),
                                    ('block_location', (YLeaf(YType.str, 'block_location'), ['str'])),
                                    ('iofpga_block_nm', (YLeaf(YType.str, 'iofpga_block_nm'), ['str'])),
                                ])
                                self.iofpga_block_num = None
                                self.block_location = None
                                self.iofpga_block_nm = None

                                self.iofpga_register_number = YList(self)
                                self._segment_path = lambda: "iofpga_block_number" + "[iofpga_block_num='" + str(self.iofpga_block_num) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber, [u'iofpga_block_num', u'block_location', u'iofpga_block_nm'], name, value)


                            class IofpgaRegisterNumber(Entity):
                                """
                                
                                
                                .. attribute:: index  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_register_name
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_data
                                
                                	
                                	**type**\: list of  		 :py:class:`IofpgaData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber, self).__init__()

                                    self.yang_name = "iofpga_register_number"
                                    self.yang_parent_name = "iofpga_block_number"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['index']
                                    self._child_classes = OrderedDict([("iofpga_data", ("iofpga_data", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData))])
                                    self._leafs = OrderedDict([
                                        ('index', (YLeaf(YType.uint32, 'index'), ['int'])),
                                        ('iofpga_register_name', (YLeaf(YType.str, 'iofpga_register_name'), ['str'])),
                                    ])
                                    self.index = None
                                    self.iofpga_register_name = None

                                    self.iofpga_data = YList(self)
                                    self._segment_path = lambda: "iofpga_register_number" + "[index='" + str(self.index) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber, [u'index', u'iofpga_register_name'], name, value)


                                class IofpgaData(Entity):
                                    """
                                    
                                    
                                    .. attribute:: name
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: offset
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: value
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData, self).__init__()

                                        self.yang_name = "iofpga_data"
                                        self.yang_parent_name = "iofpga_register_number"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('name', (YLeaf(YType.str, 'name'), ['str'])),
                                            ('offset', (YLeaf(YType.uint32, 'offset'), ['int'])),
                                            ('value', (YLeaf(YType.uint32, 'value'), ['int'])),
                                        ])
                                        self.name = None
                                        self.offset = None
                                        self.value = None
                                        self._segment_path = lambda: "iofpga_data"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData, [u'name', u'offset', u'value'], name, value)





                        class IofpgaOffset(Entity):
                            """
                            
                            
                            .. attribute:: hex_offset  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_reg_offset_data
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegOffsetData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset, self).__init__()

                                self.yang_name = "iofpga_offset"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['hex_offset']
                                self._child_classes = OrderedDict([("iofpga_reg_offset_data", ("iofpga_reg_offset_data", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData))])
                                self._leafs = OrderedDict([
                                    ('hex_offset', (YLeaf(YType.str, 'hex_offset'), ['str'])),
                                ])
                                self.hex_offset = None

                                self.iofpga_reg_offset_data = YList(self)
                                self._segment_path = lambda: "iofpga_offset" + "[hex_offset='" + str(self.hex_offset) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset, [u'hex_offset'], name, value)


                            class IofpgaRegOffsetData(Entity):
                                """
                                
                                
                                .. attribute:: iofpga_reg_off_addr
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: reg_off_value
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData, self).__init__()

                                    self.yang_name = "iofpga_reg_offset_data"
                                    self.yang_parent_name = "iofpga_offset"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('iofpga_reg_off_addr', (YLeaf(YType.uint32, 'iofpga_reg_off_addr'), ['int'])),
                                        ('reg_off_value', (YLeaf(YType.str, 'reg_off_value'), ['str'])),
                                    ])
                                    self.iofpga_reg_off_addr = None
                                    self.reg_off_value = None
                                    self._segment_path = lambda: "iofpga_reg_offset_data"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData, [u'iofpga_reg_off_addr', u'reg_off_value'], name, value)




                        class IofpgaAddress(Entity):
                            """
                            
                            
                            .. attribute:: start_hex_addr  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: end_hex_addr  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_reg_range_addr_list
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegRangeAddrList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress, self).__init__()

                                self.yang_name = "iofpga_address"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['start_hex_addr','end_hex_addr']
                                self._child_classes = OrderedDict([("iofpga_reg_range_addr_list", ("iofpga_reg_range_addr_list", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList))])
                                self._leafs = OrderedDict([
                                    ('start_hex_addr', (YLeaf(YType.str, 'start_hex_addr'), ['str'])),
                                    ('end_hex_addr', (YLeaf(YType.str, 'end_hex_addr'), ['str'])),
                                ])
                                self.start_hex_addr = None
                                self.end_hex_addr = None

                                self.iofpga_reg_range_addr_list = YList(self)
                                self._segment_path = lambda: "iofpga_address" + "[start_hex_addr='" + str(self.start_hex_addr) + "']" + "[end_hex_addr='" + str(self.end_hex_addr) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress, [u'start_hex_addr', u'end_hex_addr'], name, value)


                            class IofpgaRegRangeAddrList(Entity):
                                """
                                
                                
                                .. attribute:: iofpga_reg_range_addr  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_reg_data
                                
                                	
                                	**type**\: list of  		 :py:class:`IofpgaRegData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList, self).__init__()

                                    self.yang_name = "iofpga_reg_range_addr_list"
                                    self.yang_parent_name = "iofpga_address"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['iofpga_reg_range_addr']
                                    self._child_classes = OrderedDict([("iofpga_reg_data", ("iofpga_reg_data", Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData))])
                                    self._leafs = OrderedDict([
                                        ('iofpga_reg_range_addr', (YLeaf(YType.uint32, 'iofpga_reg_range_addr'), ['int'])),
                                    ])
                                    self.iofpga_reg_range_addr = None

                                    self.iofpga_reg_data = YList(self)
                                    self._segment_path = lambda: "iofpga_reg_range_addr_list" + "[iofpga_reg_range_addr='" + str(self.iofpga_reg_range_addr) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList, [u'iofpga_reg_range_addr'], name, value)


                                class IofpgaRegData(Entity):
                                    """
                                    
                                    
                                    .. attribute:: iofpga_reg_addr
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: reg_value
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData, self).__init__()

                                        self.yang_name = "iofpga_reg_data"
                                        self.yang_parent_name = "iofpga_reg_range_addr_list"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('iofpga_reg_addr', (YLeaf(YType.uint32, 'iofpga_reg_addr'), ['int'])),
                                            ('reg_value', (YLeaf(YType.str, 'reg_value'), ['str'])),
                                        ])
                                        self.iofpga_reg_addr = None
                                        self.reg_value = None
                                        self._segment_path = lambda: "iofpga_reg_data"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Mb.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData, [u'iofpga_reg_addr', u'reg_value'], name, value)







                class Dc(Entity):
                    """
                    
                    
                    .. attribute:: register_location
                    
                    	
                    	**type**\: list of  		 :py:class:`RegisterLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Iofpga.Register.Dc, self).__init__()

                        self.yang_name = "dc"
                        self.yang_parent_name = "register"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("register_location", ("register_location", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation))])
                        self._leafs = OrderedDict()

                        self.register_location = YList(self)
                        self._segment_path = lambda: "dc"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/register/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc, [], name, value)


                    class RegisterLocation(Entity):
                        """
                        
                        
                        .. attribute:: register_location  (key)
                        
                        	
                        	**type**\: str
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_block_number
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaBlockNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber>`
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_offset
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaOffset <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset>`
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_address
                        
                        	
                        	**type**\: list of  		 :py:class:`IofpgaAddress <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation, self).__init__()

                            self.yang_name = "register_location"
                            self.yang_parent_name = "dc"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['register_location']
                            self._child_classes = OrderedDict([("iofpga_block_number", ("iofpga_block_number", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber)), ("iofpga_offset", ("iofpga_offset", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset)), ("iofpga_address", ("iofpga_address", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress))])
                            self._leafs = OrderedDict([
                                ('register_location', (YLeaf(YType.str, 'register_location'), ['str'])),
                            ])
                            self.register_location = None

                            self.iofpga_block_number = YList(self)
                            self.iofpga_offset = YList(self)
                            self.iofpga_address = YList(self)
                            self._segment_path = lambda: "register_location" + "[register_location='" + str(self.register_location) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/register/dc/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation, [u'register_location'], name, value)


                        class IofpgaBlockNumber(Entity):
                            """
                            
                            
                            .. attribute:: iofpga_block_num  (key)
                            
                            	
                            	**type**\: int
                            
                            	**range:** 0..4294967295
                            
                            	**config**\: False
                            
                            .. attribute:: block_location
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_block_nm
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_register_number
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegisterNumber <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber, self).__init__()

                                self.yang_name = "iofpga_block_number"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['iofpga_block_num']
                                self._child_classes = OrderedDict([("iofpga_register_number", ("iofpga_register_number", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber))])
                                self._leafs = OrderedDict([
                                    ('iofpga_block_num', (YLeaf(YType.uint32, 'iofpga_block_num'), ['int'])),
                                    ('block_location', (YLeaf(YType.str, 'block_location'), ['str'])),
                                    ('iofpga_block_nm', (YLeaf(YType.str, 'iofpga_block_nm'), ['str'])),
                                ])
                                self.iofpga_block_num = None
                                self.block_location = None
                                self.iofpga_block_nm = None

                                self.iofpga_register_number = YList(self)
                                self._segment_path = lambda: "iofpga_block_number" + "[iofpga_block_num='" + str(self.iofpga_block_num) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber, [u'iofpga_block_num', u'block_location', u'iofpga_block_nm'], name, value)


                            class IofpgaRegisterNumber(Entity):
                                """
                                
                                
                                .. attribute:: index  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_register_name
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_data
                                
                                	
                                	**type**\: list of  		 :py:class:`IofpgaData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber, self).__init__()

                                    self.yang_name = "iofpga_register_number"
                                    self.yang_parent_name = "iofpga_block_number"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['index']
                                    self._child_classes = OrderedDict([("iofpga_data", ("iofpga_data", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData))])
                                    self._leafs = OrderedDict([
                                        ('index', (YLeaf(YType.uint32, 'index'), ['int'])),
                                        ('iofpga_register_name', (YLeaf(YType.str, 'iofpga_register_name'), ['str'])),
                                    ])
                                    self.index = None
                                    self.iofpga_register_name = None

                                    self.iofpga_data = YList(self)
                                    self._segment_path = lambda: "iofpga_register_number" + "[index='" + str(self.index) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber, [u'index', u'iofpga_register_name'], name, value)


                                class IofpgaData(Entity):
                                    """
                                    
                                    
                                    .. attribute:: name
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: offset
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: value
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData, self).__init__()

                                        self.yang_name = "iofpga_data"
                                        self.yang_parent_name = "iofpga_register_number"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('name', (YLeaf(YType.str, 'name'), ['str'])),
                                            ('offset', (YLeaf(YType.uint32, 'offset'), ['int'])),
                                            ('value', (YLeaf(YType.uint32, 'value'), ['int'])),
                                        ])
                                        self.name = None
                                        self.offset = None
                                        self.value = None
                                        self._segment_path = lambda: "iofpga_data"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaBlockNumber.IofpgaRegisterNumber.IofpgaData, [u'name', u'offset', u'value'], name, value)





                        class IofpgaOffset(Entity):
                            """
                            
                            
                            .. attribute:: hex_offset  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_reg_offset_data
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegOffsetData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset, self).__init__()

                                self.yang_name = "iofpga_offset"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['hex_offset']
                                self._child_classes = OrderedDict([("iofpga_reg_offset_data", ("iofpga_reg_offset_data", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData))])
                                self._leafs = OrderedDict([
                                    ('hex_offset', (YLeaf(YType.str, 'hex_offset'), ['str'])),
                                ])
                                self.hex_offset = None

                                self.iofpga_reg_offset_data = YList(self)
                                self._segment_path = lambda: "iofpga_offset" + "[hex_offset='" + str(self.hex_offset) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset, [u'hex_offset'], name, value)


                            class IofpgaRegOffsetData(Entity):
                                """
                                
                                
                                .. attribute:: iofpga_reg_off_addr
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: reg_off_value
                                
                                	
                                	**type**\: str
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData, self).__init__()

                                    self.yang_name = "iofpga_reg_offset_data"
                                    self.yang_parent_name = "iofpga_offset"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('iofpga_reg_off_addr', (YLeaf(YType.uint32, 'iofpga_reg_off_addr'), ['int'])),
                                        ('reg_off_value', (YLeaf(YType.str, 'reg_off_value'), ['str'])),
                                    ])
                                    self.iofpga_reg_off_addr = None
                                    self.reg_off_value = None
                                    self._segment_path = lambda: "iofpga_reg_offset_data"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaOffset.IofpgaRegOffsetData, [u'iofpga_reg_off_addr', u'reg_off_value'], name, value)




                        class IofpgaAddress(Entity):
                            """
                            
                            
                            .. attribute:: start_hex_addr  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: end_hex_addr  (key)
                            
                            	
                            	**type**\: str
                            
                            	**config**\: False
                            
                            .. attribute:: iofpga_reg_range_addr_list
                            
                            	
                            	**type**\: list of  		 :py:class:`IofpgaRegRangeAddrList <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList>`
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress, self).__init__()

                                self.yang_name = "iofpga_address"
                                self.yang_parent_name = "register_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = ['start_hex_addr','end_hex_addr']
                                self._child_classes = OrderedDict([("iofpga_reg_range_addr_list", ("iofpga_reg_range_addr_list", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList))])
                                self._leafs = OrderedDict([
                                    ('start_hex_addr', (YLeaf(YType.str, 'start_hex_addr'), ['str'])),
                                    ('end_hex_addr', (YLeaf(YType.str, 'end_hex_addr'), ['str'])),
                                ])
                                self.start_hex_addr = None
                                self.end_hex_addr = None

                                self.iofpga_reg_range_addr_list = YList(self)
                                self._segment_path = lambda: "iofpga_address" + "[start_hex_addr='" + str(self.start_hex_addr) + "']" + "[end_hex_addr='" + str(self.end_hex_addr) + "']"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress, [u'start_hex_addr', u'end_hex_addr'], name, value)


                            class IofpgaRegRangeAddrList(Entity):
                                """
                                
                                
                                .. attribute:: iofpga_reg_range_addr  (key)
                                
                                	
                                	**type**\: int
                                
                                	**range:** 0..4294967295
                                
                                	**config**\: False
                                
                                .. attribute:: iofpga_reg_data
                                
                                	
                                	**type**\: list of  		 :py:class:`IofpgaRegData <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData>`
                                
                                	**config**\: False
                                
                                

                                """

                                _prefix = 'calvados_controllers'
                                _revision = '2017-10-11'

                                def __init__(self):
                                    super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList, self).__init__()

                                    self.yang_name = "iofpga_reg_range_addr_list"
                                    self.yang_parent_name = "iofpga_address"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['iofpga_reg_range_addr']
                                    self._child_classes = OrderedDict([("iofpga_reg_data", ("iofpga_reg_data", Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData))])
                                    self._leafs = OrderedDict([
                                        ('iofpga_reg_range_addr', (YLeaf(YType.uint32, 'iofpga_reg_range_addr'), ['int'])),
                                    ])
                                    self.iofpga_reg_range_addr = None

                                    self.iofpga_reg_data = YList(self)
                                    self._segment_path = lambda: "iofpga_reg_range_addr_list" + "[iofpga_reg_range_addr='" + str(self.iofpga_reg_range_addr) + "']"
                                    self._is_frozen = True

                                def __setattr__(self, name, value):
                                    self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList, [u'iofpga_reg_range_addr'], name, value)


                                class IofpgaRegData(Entity):
                                    """
                                    
                                    
                                    .. attribute:: iofpga_reg_addr
                                    
                                    	
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    	**config**\: False
                                    
                                    .. attribute:: reg_value
                                    
                                    	
                                    	**type**\: str
                                    
                                    	**config**\: False
                                    
                                    

                                    """

                                    _prefix = 'calvados_controllers'
                                    _revision = '2017-10-11'

                                    def __init__(self):
                                        super(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData, self).__init__()

                                        self.yang_name = "iofpga_reg_data"
                                        self.yang_parent_name = "iofpga_reg_range_addr_list"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('iofpga_reg_addr', (YLeaf(YType.uint32, 'iofpga_reg_addr'), ['int'])),
                                            ('reg_value', (YLeaf(YType.str, 'reg_value'), ['str'])),
                                        ])
                                        self.iofpga_reg_addr = None
                                        self.reg_value = None
                                        self._segment_path = lambda: "iofpga_reg_data"
                                        self._is_frozen = True

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(Controller.CardMgr.Iofpga.Register.Dc.RegisterLocation.IofpgaAddress.IofpgaRegRangeAddrList.IofpgaRegData, [u'iofpga_reg_addr', u'reg_value'], name, value)








            class Flash(Entity):
                """
                
                
                .. attribute:: info
                
                	
                	**type**\:  :py:class:`Info <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Flash.Info>`
                
                	**config**\: False
                
                .. attribute:: status
                
                	
                	**type**\:  :py:class:`Status <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Flash.Status>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.Iofpga.Flash, self).__init__()

                    self.yang_name = "flash"
                    self.yang_parent_name = "iofpga"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("info", ("info", Controller.CardMgr.Iofpga.Flash.Info)), ("status", ("status", Controller.CardMgr.Iofpga.Flash.Status))])
                    self._leafs = OrderedDict()

                    self.info = Controller.CardMgr.Iofpga.Flash.Info()
                    self.info.parent = self
                    self._children_name_map["info"] = "info"

                    self.status = Controller.CardMgr.Iofpga.Flash.Status()
                    self.status.parent = self
                    self._children_name_map["status"] = "status"
                    self._segment_path = lambda: "flash"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.Iofpga.Flash, [], name, value)


                class Info(Entity):
                    """
                    
                    
                    .. attribute:: flash_location
                    
                    	
                    	**type**\: list of  		 :py:class:`FlashLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Flash.Info.FlashLocation>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Iofpga.Flash.Info, self).__init__()

                        self.yang_name = "info"
                        self.yang_parent_name = "flash"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("flash_location", ("flash_location", Controller.CardMgr.Iofpga.Flash.Info.FlashLocation))])
                        self._leafs = OrderedDict()

                        self.flash_location = YList(self)
                        self._segment_path = lambda: "info"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/flash/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Iofpga.Flash.Info, [], name, value)


                    class FlashLocation(Entity):
                        """
                        
                        
                        .. attribute:: flash_location  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_flash_info
                        
                        	
                        	**type**\:  :py:class:`IofpgaFlashInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Flash.Info.FlashLocation.IofpgaFlashInfo>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Iofpga.Flash.Info.FlashLocation, self).__init__()

                            self.yang_name = "flash_location"
                            self.yang_parent_name = "info"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['flash_location']
                            self._child_classes = OrderedDict([("iofpga_flash_info", ("iofpga_flash_info", Controller.CardMgr.Iofpga.Flash.Info.FlashLocation.IofpgaFlashInfo))])
                            self._leafs = OrderedDict([
                                ('flash_location', (YLeaf(YType.str, 'flash_location'), ['str'])),
                            ])
                            self.flash_location = None

                            self.iofpga_flash_info = Controller.CardMgr.Iofpga.Flash.Info.FlashLocation.IofpgaFlashInfo()
                            self.iofpga_flash_info.parent = self
                            self._children_name_map["iofpga_flash_info"] = "iofpga_flash_info"
                            self._segment_path = lambda: "flash_location" + "[flash_location='" + str(self.flash_location) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/flash/info/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Iofpga.Flash.Info.FlashLocation, [u'flash_location'], name, value)


                        class IofpgaFlashInfo(Entity):
                            """
                            
                            
                            .. attribute:: iofpga_flash_info_values
                            
                            	
                            	**type**\: list of str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Flash.Info.FlashLocation.IofpgaFlashInfo, self).__init__()

                                self.yang_name = "iofpga_flash_info"
                                self.yang_parent_name = "flash_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('iofpga_flash_info_values', (YLeafList(YType.str, 'iofpga_flash_info_values'), ['str'])),
                                ])
                                self.iofpga_flash_info_values = []
                                self._segment_path = lambda: "iofpga_flash_info"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Flash.Info.FlashLocation.IofpgaFlashInfo, [u'iofpga_flash_info_values'], name, value)





                class Status(Entity):
                    """
                    
                    
                    .. attribute:: flash_location
                    
                    	
                    	**type**\: list of  		 :py:class:`FlashLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Flash.Status.FlashLocation>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Iofpga.Flash.Status, self).__init__()

                        self.yang_name = "status"
                        self.yang_parent_name = "flash"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("flash_location", ("flash_location", Controller.CardMgr.Iofpga.Flash.Status.FlashLocation))])
                        self._leafs = OrderedDict()

                        self.flash_location = YList(self)
                        self._segment_path = lambda: "status"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/flash/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Iofpga.Flash.Status, [], name, value)


                    class FlashLocation(Entity):
                        """
                        
                        
                        .. attribute:: flash_location  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                        
                        	**config**\: False
                        
                        .. attribute:: iofpga_flash_status
                        
                        	
                        	**type**\:  :py:class:`IofpgaFlashStatus <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Iofpga.Flash.Status.FlashLocation.IofpgaFlashStatus>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Iofpga.Flash.Status.FlashLocation, self).__init__()

                            self.yang_name = "flash_location"
                            self.yang_parent_name = "status"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['flash_location']
                            self._child_classes = OrderedDict([("iofpga_flash_status", ("iofpga_flash_status", Controller.CardMgr.Iofpga.Flash.Status.FlashLocation.IofpgaFlashStatus))])
                            self._leafs = OrderedDict([
                                ('flash_location', (YLeaf(YType.str, 'flash_location'), ['str'])),
                            ])
                            self.flash_location = None

                            self.iofpga_flash_status = Controller.CardMgr.Iofpga.Flash.Status.FlashLocation.IofpgaFlashStatus()
                            self.iofpga_flash_status.parent = self
                            self._children_name_map["iofpga_flash_status"] = "iofpga_flash_status"
                            self._segment_path = lambda: "flash_location" + "[flash_location='" + str(self.flash_location) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/iofpga/flash/status/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Iofpga.Flash.Status.FlashLocation, [u'flash_location'], name, value)


                        class IofpgaFlashStatus(Entity):
                            """
                            
                            
                            .. attribute:: iofpga_flash_status_values
                            
                            	
                            	**type**\: list of str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Iofpga.Flash.Status.FlashLocation.IofpgaFlashStatus, self).__init__()

                                self.yang_name = "iofpga_flash_status"
                                self.yang_parent_name = "flash_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('iofpga_flash_status_values', (YLeafList(YType.str, 'iofpga_flash_status_values'), ['str'])),
                                ])
                                self.iofpga_flash_status_values = []
                                self._segment_path = lambda: "iofpga_flash_status"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Iofpga.Flash.Status.FlashLocation.IofpgaFlashStatus, [u'iofpga_flash_status_values'], name, value)







        class Bootloader(Entity):
            """
            
            
            .. attribute:: flash
            
            	
            	**type**\:  :py:class:`Flash <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader.Flash>`
            
            	**config**\: False
            
            

            """

            _prefix = 'calvados_controllers'
            _revision = '2017-10-11'

            def __init__(self):
                super(Controller.CardMgr.Bootloader, self).__init__()

                self.yang_name = "bootloader"
                self.yang_parent_name = "card_mgr"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = []
                self._child_classes = OrderedDict([("flash", ("flash", Controller.CardMgr.Bootloader.Flash))])
                self._leafs = OrderedDict()

                self.flash = Controller.CardMgr.Bootloader.Flash()
                self.flash.parent = self
                self._children_name_map["flash"] = "flash"
                self._segment_path = lambda: "bootloader"
                self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/%s" % self._segment_path()
                self._is_frozen = True

            def __setattr__(self, name, value):
                self._perform_setattr(Controller.CardMgr.Bootloader, [], name, value)


            class Flash(Entity):
                """
                
                
                .. attribute:: info
                
                	
                	**type**\:  :py:class:`Info <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader.Flash.Info>`
                
                	**config**\: False
                
                .. attribute:: status
                
                	
                	**type**\:  :py:class:`Status <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader.Flash.Status>`
                
                	**config**\: False
                
                

                """

                _prefix = 'calvados_controllers'
                _revision = '2017-10-11'

                def __init__(self):
                    super(Controller.CardMgr.Bootloader.Flash, self).__init__()

                    self.yang_name = "flash"
                    self.yang_parent_name = "bootloader"
                    self.is_top_level_class = False
                    self.has_list_ancestor = False
                    self.ylist_key_names = []
                    self._child_classes = OrderedDict([("info", ("info", Controller.CardMgr.Bootloader.Flash.Info)), ("status", ("status", Controller.CardMgr.Bootloader.Flash.Status))])
                    self._leafs = OrderedDict()

                    self.info = Controller.CardMgr.Bootloader.Flash.Info()
                    self.info.parent = self
                    self._children_name_map["info"] = "info"

                    self.status = Controller.CardMgr.Bootloader.Flash.Status()
                    self.status.parent = self
                    self._children_name_map["status"] = "status"
                    self._segment_path = lambda: "flash"
                    self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/bootloader/%s" % self._segment_path()
                    self._is_frozen = True

                def __setattr__(self, name, value):
                    self._perform_setattr(Controller.CardMgr.Bootloader.Flash, [], name, value)


                class Info(Entity):
                    """
                    
                    
                    .. attribute:: flash_location
                    
                    	
                    	**type**\: list of  		 :py:class:`FlashLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader.Flash.Info.FlashLocation>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Bootloader.Flash.Info, self).__init__()

                        self.yang_name = "info"
                        self.yang_parent_name = "flash"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("flash_location", ("flash_location", Controller.CardMgr.Bootloader.Flash.Info.FlashLocation))])
                        self._leafs = OrderedDict()

                        self.flash_location = YList(self)
                        self._segment_path = lambda: "info"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/bootloader/flash/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Bootloader.Flash.Info, [], name, value)


                    class FlashLocation(Entity):
                        """
                        
                        
                        .. attribute:: flash_location  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                        
                        	**config**\: False
                        
                        .. attribute:: bootldr_flash_info
                        
                        	
                        	**type**\:  :py:class:`BootldrFlashInfo <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader.Flash.Info.FlashLocation.BootldrFlashInfo>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Bootloader.Flash.Info.FlashLocation, self).__init__()

                            self.yang_name = "flash_location"
                            self.yang_parent_name = "info"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['flash_location']
                            self._child_classes = OrderedDict([("bootldr_flash_info", ("bootldr_flash_info", Controller.CardMgr.Bootloader.Flash.Info.FlashLocation.BootldrFlashInfo))])
                            self._leafs = OrderedDict([
                                ('flash_location', (YLeaf(YType.str, 'flash_location'), ['str'])),
                            ])
                            self.flash_location = None

                            self.bootldr_flash_info = Controller.CardMgr.Bootloader.Flash.Info.FlashLocation.BootldrFlashInfo()
                            self.bootldr_flash_info.parent = self
                            self._children_name_map["bootldr_flash_info"] = "bootldr_flash_info"
                            self._segment_path = lambda: "flash_location" + "[flash_location='" + str(self.flash_location) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/bootloader/flash/info/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Bootloader.Flash.Info.FlashLocation, [u'flash_location'], name, value)


                        class BootldrFlashInfo(Entity):
                            """
                            
                            
                            .. attribute:: bootldr_flash_info_values
                            
                            	
                            	**type**\: list of str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Bootloader.Flash.Info.FlashLocation.BootldrFlashInfo, self).__init__()

                                self.yang_name = "bootldr_flash_info"
                                self.yang_parent_name = "flash_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('bootldr_flash_info_values', (YLeafList(YType.str, 'bootldr_flash_info_values'), ['str'])),
                                ])
                                self.bootldr_flash_info_values = []
                                self._segment_path = lambda: "bootldr_flash_info"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Bootloader.Flash.Info.FlashLocation.BootldrFlashInfo, [u'bootldr_flash_info_values'], name, value)





                class Status(Entity):
                    """
                    
                    
                    .. attribute:: flash_location
                    
                    	
                    	**type**\: list of  		 :py:class:`FlashLocation <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader.Flash.Status.FlashLocation>`
                    
                    	**config**\: False
                    
                    

                    """

                    _prefix = 'calvados_controllers'
                    _revision = '2017-10-11'

                    def __init__(self):
                        super(Controller.CardMgr.Bootloader.Flash.Status, self).__init__()

                        self.yang_name = "status"
                        self.yang_parent_name = "flash"
                        self.is_top_level_class = False
                        self.has_list_ancestor = False
                        self.ylist_key_names = []
                        self._child_classes = OrderedDict([("flash_location", ("flash_location", Controller.CardMgr.Bootloader.Flash.Status.FlashLocation))])
                        self._leafs = OrderedDict()

                        self.flash_location = YList(self)
                        self._segment_path = lambda: "status"
                        self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/bootloader/flash/%s" % self._segment_path()
                        self._is_frozen = True

                    def __setattr__(self, name, value):
                        self._perform_setattr(Controller.CardMgr.Bootloader.Flash.Status, [], name, value)


                    class FlashLocation(Entity):
                        """
                        
                        
                        .. attribute:: flash_location  (key)
                        
                        	
                        	**type**\: str
                        
                        	**pattern:** ((([bB][0\-9])/(([a\-zA\-Z]){2}\\d{1,2}))\|(([fF][0\-7])/(([a\-zA\-Z]){2}\\d{1,2}))\|((0?[0\-9]\|1[0\-5])/((([a\-zA\-Z]){2,3})?\\d{1,2})))(/[cC][pP][uU]0)?
                        
                        	**config**\: False
                        
                        .. attribute:: bootldr_flash_status
                        
                        	
                        	**type**\:  :py:class:`BootldrFlashStatus <ydk.models.cisco_ios_xr.Cisco_IOS_XR_sysadmin_controllers_ncs5500.Controller.CardMgr.Bootloader.Flash.Status.FlashLocation.BootldrFlashStatus>`
                        
                        	**config**\: False
                        
                        

                        """

                        _prefix = 'calvados_controllers'
                        _revision = '2017-10-11'

                        def __init__(self):
                            super(Controller.CardMgr.Bootloader.Flash.Status.FlashLocation, self).__init__()

                            self.yang_name = "flash_location"
                            self.yang_parent_name = "status"
                            self.is_top_level_class = False
                            self.has_list_ancestor = False
                            self.ylist_key_names = ['flash_location']
                            self._child_classes = OrderedDict([("bootldr_flash_status", ("bootldr_flash_status", Controller.CardMgr.Bootloader.Flash.Status.FlashLocation.BootldrFlashStatus))])
                            self._leafs = OrderedDict([
                                ('flash_location', (YLeaf(YType.str, 'flash_location'), ['str'])),
                            ])
                            self.flash_location = None

                            self.bootldr_flash_status = Controller.CardMgr.Bootloader.Flash.Status.FlashLocation.BootldrFlashStatus()
                            self.bootldr_flash_status.parent = self
                            self._children_name_map["bootldr_flash_status"] = "bootldr_flash_status"
                            self._segment_path = lambda: "flash_location" + "[flash_location='" + str(self.flash_location) + "']"
                            self._absolute_path = lambda: "Cisco-IOS-XR-sysadmin-controllers-ncs5500:controller/card_mgr/bootloader/flash/status/%s" % self._segment_path()
                            self._is_frozen = True

                        def __setattr__(self, name, value):
                            self._perform_setattr(Controller.CardMgr.Bootloader.Flash.Status.FlashLocation, [u'flash_location'], name, value)


                        class BootldrFlashStatus(Entity):
                            """
                            
                            
                            .. attribute:: bootldr_flash_status_values
                            
                            	
                            	**type**\: list of str
                            
                            	**config**\: False
                            
                            

                            """

                            _prefix = 'calvados_controllers'
                            _revision = '2017-10-11'

                            def __init__(self):
                                super(Controller.CardMgr.Bootloader.Flash.Status.FlashLocation.BootldrFlashStatus, self).__init__()

                                self.yang_name = "bootldr_flash_status"
                                self.yang_parent_name = "flash_location"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_classes = OrderedDict([])
                                self._leafs = OrderedDict([
                                    ('bootldr_flash_status_values', (YLeafList(YType.str, 'bootldr_flash_status_values'), ['str'])),
                                ])
                                self.bootldr_flash_status_values = []
                                self._segment_path = lambda: "bootldr_flash_status"
                                self._is_frozen = True

                            def __setattr__(self, name, value):
                                self._perform_setattr(Controller.CardMgr.Bootloader.Flash.Status.FlashLocation.BootldrFlashStatus, [u'bootldr_flash_status_values'], name, value)







    def clone_ptr(self):
        self._top_entity = Controller()
        return self._top_entity



