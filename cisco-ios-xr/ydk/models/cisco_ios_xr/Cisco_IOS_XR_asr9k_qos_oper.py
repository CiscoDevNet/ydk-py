""" Cisco_IOS_XR_asr9k_qos_oper 

This module contains a collection of YANG definitions
for Cisco IOS\-XR asr9k\-qos package operational data.

This module contains definitions
for the following management objects\:
  platform\-qos\: QoS ASR9K platform operational data 

Copyright (c) 2013\-2017 by Cisco Systems, Inc.
All rights reserved.

"""
from collections import OrderedDict

from ydk.types import Entity, EntityPath, Identity, Enum, YType, YLeaf, YLeafList, YList, LeafDataList, Bits, Empty, Decimal64
from ydk.filters import YFilter
from ydk.errors import YError, YModelError
from ydk.errors.error_handler import handle_type_error as _handle_type_error


class Action(Enum):
    """
    Action (Enum Class)

    Action type

    .. data:: police_transmit = 0

    	Police action transmit

    .. data:: police_set_transmit = 1

    	Police action set transmit

    .. data:: police_drop = 2

    	Police action drop

    .. data:: police_unknown = 3

    	Police action unknown

    """

    police_transmit = Enum.YLeaf(0, "police-transmit")

    police_set_transmit = Enum.YLeaf(1, "police-set-transmit")

    police_drop = Enum.YLeaf(2, "police-drop")

    police_unknown = Enum.YLeaf(3, "police-unknown")


class ActionOpcode(Enum):
    """
    ActionOpcode (Enum Class)

    Action opcode

    .. data:: precedence = 0

    	Precedence

    .. data:: dscp = 1

    	DSCP

    .. data:: discard_class = 2

    	Discard class

    .. data:: qos_group = 3

    	QoS group

    .. data:: cos_inner = 4

    	COS inner

    .. data:: cos = 5

    	COS

    .. data:: exp_top = 6

    	EXP top

    .. data:: exp_imp = 7

    	EXP IMP

    .. data:: tunnel_precedence = 8

    	Tunnel precedence

    .. data:: tunnel_dscp = 9

    	Tunnel DSCP

    .. data:: itag_dei = 10

    	ITAG DEI

    .. data:: itag_cos = 11

    	ITAG COS

    .. data:: cos_imposition = 12

    	COS imposition

    .. data:: dei_imposition = 13

    	DEI imposition

    .. data:: dei = 14

    	DEI

    .. data:: no_marking = 15

    	No marking

    """

    precedence = Enum.YLeaf(0, "precedence")

    dscp = Enum.YLeaf(1, "dscp")

    discard_class = Enum.YLeaf(2, "discard-class")

    qos_group = Enum.YLeaf(3, "qos-group")

    cos_inner = Enum.YLeaf(4, "cos-inner")

    cos = Enum.YLeaf(5, "cos")

    exp_top = Enum.YLeaf(6, "exp-top")

    exp_imp = Enum.YLeaf(7, "exp-imp")

    tunnel_precedence = Enum.YLeaf(8, "tunnel-precedence")

    tunnel_dscp = Enum.YLeaf(9, "tunnel-dscp")

    itag_dei = Enum.YLeaf(10, "itag-dei")

    itag_cos = Enum.YLeaf(11, "itag-cos")

    cos_imposition = Enum.YLeaf(12, "cos-imposition")

    dei_imposition = Enum.YLeaf(13, "dei-imposition")

    dei = Enum.YLeaf(14, "dei")

    no_marking = Enum.YLeaf(15, "no-marking")


class CacState(Enum):
    """
    CacState (Enum Class)

    CAC/UBRL class states

    .. data:: unknown = 0

    	unknown

    .. data:: admit = 1

    	admit

    .. data:: redirect = 2

    	redirect

    .. data:: ubrl = 3

    	ubrl

    """

    unknown = Enum.YLeaf(0, "unknown")

    admit = Enum.YLeaf(1, "admit")

    redirect = Enum.YLeaf(2, "redirect")

    ubrl = Enum.YLeaf(3, "ubrl")


class PolicyParamUnit(Enum):
    """
    PolicyParamUnit (Enum Class)

    Policy param unit

    .. data:: policy_param_unit_invalid = 0

    	policy param unit invalid

    .. data:: policy_param_unit_bytes = 1

    	policy param unit bytes

    .. data:: policy_param_unit_kbytes = 2

    	policy param unit kbytes

    .. data:: policy_param_unit_mbytes = 3

    	policy param unit mbytes

    .. data:: policy_param_unit_gbytes = 4

    	policy param unit gbytes

    .. data:: policy_param_unit_bitsps = 5

    	policy param unit bitsps

    .. data:: policy_param_unit_kbitsps = 6

    	policy param unit kbitsps

    .. data:: policy_param_unit_mbitsps = 7

    	policy param unit mbitsps

    .. data:: policy_param_unit_gbitsps = 8

    	policy param unit gbitsps

    .. data:: policy_param_unit_cells_ps = 9

    	policy param unit cells ps

    .. data:: policy_param_unit_packets_ps = 10

    	policy param unit packets ps

    .. data:: policy_param_unit_us = 11

    	policy param unit us

    .. data:: policy_param_unit_ms = 12

    	policy param unit ms

    .. data:: policy_param_unit_seconds = 13

    	policy param unit seconds

    .. data:: policy_param_unit_packets = 14

    	policy param unit packets

    .. data:: policy_param_unit_cells = 15

    	policy param unit cells

    .. data:: policy_param_unit_percent = 16

    	policy param unit percent

    .. data:: policy_param_unit_per_thousand = 17

    	policy param unit per thousand

    .. data:: policy_param_unit_per_million = 18

    	policy param unit per million

    .. data:: policy_param_unit_hz = 19

    	policy param unit hz

    .. data:: policy_param_unit_khz = 20

    	policy param unit khz

    .. data:: policy_param_unit_mhz = 21

    	policy param unit mhz

    .. data:: policy_param_unit_ratio = 22

    	policy param unit ratio

    .. data:: policy_param_unit_max = 23

    	policy param unit max

    """

    policy_param_unit_invalid = Enum.YLeaf(0, "policy-param-unit-invalid")

    policy_param_unit_bytes = Enum.YLeaf(1, "policy-param-unit-bytes")

    policy_param_unit_kbytes = Enum.YLeaf(2, "policy-param-unit-kbytes")

    policy_param_unit_mbytes = Enum.YLeaf(3, "policy-param-unit-mbytes")

    policy_param_unit_gbytes = Enum.YLeaf(4, "policy-param-unit-gbytes")

    policy_param_unit_bitsps = Enum.YLeaf(5, "policy-param-unit-bitsps")

    policy_param_unit_kbitsps = Enum.YLeaf(6, "policy-param-unit-kbitsps")

    policy_param_unit_mbitsps = Enum.YLeaf(7, "policy-param-unit-mbitsps")

    policy_param_unit_gbitsps = Enum.YLeaf(8, "policy-param-unit-gbitsps")

    policy_param_unit_cells_ps = Enum.YLeaf(9, "policy-param-unit-cells-ps")

    policy_param_unit_packets_ps = Enum.YLeaf(10, "policy-param-unit-packets-ps")

    policy_param_unit_us = Enum.YLeaf(11, "policy-param-unit-us")

    policy_param_unit_ms = Enum.YLeaf(12, "policy-param-unit-ms")

    policy_param_unit_seconds = Enum.YLeaf(13, "policy-param-unit-seconds")

    policy_param_unit_packets = Enum.YLeaf(14, "policy-param-unit-packets")

    policy_param_unit_cells = Enum.YLeaf(15, "policy-param-unit-cells")

    policy_param_unit_percent = Enum.YLeaf(16, "policy-param-unit-percent")

    policy_param_unit_per_thousand = Enum.YLeaf(17, "policy-param-unit-per-thousand")

    policy_param_unit_per_million = Enum.YLeaf(18, "policy-param-unit-per-million")

    policy_param_unit_hz = Enum.YLeaf(19, "policy-param-unit-hz")

    policy_param_unit_khz = Enum.YLeaf(20, "policy-param-unit-khz")

    policy_param_unit_mhz = Enum.YLeaf(21, "policy-param-unit-mhz")

    policy_param_unit_ratio = Enum.YLeaf(22, "policy-param-unit-ratio")

    policy_param_unit_max = Enum.YLeaf(23, "policy-param-unit-max")


class PolicyState(Enum):
    """
    PolicyState (Enum Class)

    Different Interface states

    .. data:: active = 0

    	active

    .. data:: suspended = 1

    	suspended

    """

    active = Enum.YLeaf(0, "active")

    suspended = Enum.YLeaf(1, "suspended")


class QosUnit(Enum):
    """
    QosUnit (Enum Class)

    QoS parameter unit

    .. data:: invalid = 0

    	Invalid type

    .. data:: bytes = 1

    	Bytes

    .. data:: kilobytes = 2

    	Kilobytes

    .. data:: megabytes = 3

    	Megabytes

    .. data:: gigabytes = 4

    	Gigabytes

    .. data:: bps = 5

    	Bits per second

    .. data:: kbps = 6

    	Kilo bits per second

    .. data:: mbps = 7

    	Mega bits per second

    .. data:: gbps = 8

    	Giga bits per second

    .. data:: cells_per_second = 9

    	Cells per second

    .. data:: packets_per_second = 10

    	Packets per second

    .. data:: microsecond = 11

    	Microsecond

    .. data:: millisecond = 12

    	Millisecond

    .. data:: packets = 13

    	Number of packets

    .. data:: cells = 14

    	Number of cells

    .. data:: percentage = 15

    	Percentage

    .. data:: ratio = 16

    	Ratio

    """

    invalid = Enum.YLeaf(0, "invalid")

    bytes = Enum.YLeaf(1, "bytes")

    kilobytes = Enum.YLeaf(2, "kilobytes")

    megabytes = Enum.YLeaf(3, "megabytes")

    gigabytes = Enum.YLeaf(4, "gigabytes")

    bps = Enum.YLeaf(5, "bps")

    kbps = Enum.YLeaf(6, "kbps")

    mbps = Enum.YLeaf(7, "mbps")

    gbps = Enum.YLeaf(8, "gbps")

    cells_per_second = Enum.YLeaf(9, "cells-per-second")

    packets_per_second = Enum.YLeaf(10, "packets-per-second")

    microsecond = Enum.YLeaf(11, "microsecond")

    millisecond = Enum.YLeaf(12, "millisecond")

    packets = Enum.YLeaf(13, "packets")

    cells = Enum.YLeaf(14, "cells")

    percentage = Enum.YLeaf(15, "percentage")

    ratio = Enum.YLeaf(16, "ratio")


class Queue(Enum):
    """
    Queue (Enum Class)

    Queue type

    .. data:: port_default = 0

    	Port default queue

    .. data:: class_default = 1

    	The default queue in this policy

    .. data:: priority1_queue = 2

    	Create the priority 1 queue in the level which

    	will be shared by other p1 classes

    .. data:: priority2_queue = 3

    	Create the priority 2 queue in the level, which

    	will be shared by other p2 classes

    .. data:: priority3_queue = 4

    	Create the priority 3 queue in the level, which

    	will be shared by other p3 classes

    .. data:: priority4_queue = 5

    	Create the priority 4 queue in the level, which

    	will be shared by other p4 classes

    .. data:: priority5_queue = 6

    	Create the priority 5 queue in the level, which

    	will be shared by other p5 classes

    .. data:: priority6_queue = 7

    	Create the priority 6 queue in the level, which

    	will be shared by other p6 classes

    .. data:: priority7_queue = 8

    	Create the priority 7 queue in the level, which

    	will be shared by other p7 classes

    .. data:: first_p1_class_name = 9

    	Current level's priority 1 queue

    .. data:: first_p2_class_name = 10

    	Current level's priority 2 queue

    .. data:: first_p3_class_name = 11

    	Current level's priority 3 queue

    .. data:: first_p4_class_name = 12

    	Current level's priority 4 queue

    .. data:: first_p5_class_name = 13

    	Current level's priority 5 queue

    .. data:: first_p6_class_name = 14

    	Current level's priority 6 queue

    .. data:: first_p7_class_name = 15

    	Current level's priority 7 queue

    .. data:: port_priority1 = 16

    	Port priority 1 queue

    .. data:: port_priority2 = 17

    	Port priority 2 queue

    .. data:: port_priority3 = 18

    	Port priority 3 queue

    .. data:: port_priority4 = 19

    	Port priority 4 queue

    .. data:: port_priority5 = 20

    	Port priority 5 queue

    .. data:: port_priority6 = 21

    	Port priority 6 queue

    .. data:: port_priority7 = 22

    	Port priority 7 queue

    .. data:: new = 23

    	Create a new queue for this class

    .. data:: parent_class = 24

    	Under parent queue

    .. data:: priority1 = 25

    	Priority 1

    .. data:: priority2 = 26

    	Priority 2

    .. data:: priority3 = 27

    	Priority 3

    .. data:: priority4 = 28

    	Priority 4

    .. data:: priority5 = 29

    	Priority 5

    .. data:: priority6 = 30

    	Priority 6

    .. data:: priority7 = 31

    	Priority 7

    .. data:: priority_ignored_normal = 32

    	Priority ignored level

    .. data:: normal_priority = 33

    	Normal priority

    .. data:: class_unknown = 34

    	Class unknown

    .. data:: unknown_priority = 35

    	Unknown priority

    """

    port_default = Enum.YLeaf(0, "port-default")

    class_default = Enum.YLeaf(1, "class-default")

    priority1_queue = Enum.YLeaf(2, "priority1-queue")

    priority2_queue = Enum.YLeaf(3, "priority2-queue")

    priority3_queue = Enum.YLeaf(4, "priority3-queue")

    priority4_queue = Enum.YLeaf(5, "priority4-queue")

    priority5_queue = Enum.YLeaf(6, "priority5-queue")

    priority6_queue = Enum.YLeaf(7, "priority6-queue")

    priority7_queue = Enum.YLeaf(8, "priority7-queue")

    first_p1_class_name = Enum.YLeaf(9, "first-p1-class-name")

    first_p2_class_name = Enum.YLeaf(10, "first-p2-class-name")

    first_p3_class_name = Enum.YLeaf(11, "first-p3-class-name")

    first_p4_class_name = Enum.YLeaf(12, "first-p4-class-name")

    first_p5_class_name = Enum.YLeaf(13, "first-p5-class-name")

    first_p6_class_name = Enum.YLeaf(14, "first-p6-class-name")

    first_p7_class_name = Enum.YLeaf(15, "first-p7-class-name")

    port_priority1 = Enum.YLeaf(16, "port-priority1")

    port_priority2 = Enum.YLeaf(17, "port-priority2")

    port_priority3 = Enum.YLeaf(18, "port-priority3")

    port_priority4 = Enum.YLeaf(19, "port-priority4")

    port_priority5 = Enum.YLeaf(20, "port-priority5")

    port_priority6 = Enum.YLeaf(21, "port-priority6")

    port_priority7 = Enum.YLeaf(22, "port-priority7")

    new = Enum.YLeaf(23, "new")

    parent_class = Enum.YLeaf(24, "parent-class")

    priority1 = Enum.YLeaf(25, "priority1")

    priority2 = Enum.YLeaf(26, "priority2")

    priority3 = Enum.YLeaf(27, "priority3")

    priority4 = Enum.YLeaf(28, "priority4")

    priority5 = Enum.YLeaf(29, "priority5")

    priority6 = Enum.YLeaf(30, "priority6")

    priority7 = Enum.YLeaf(31, "priority7")

    priority_ignored_normal = Enum.YLeaf(32, "priority-ignored-normal")

    normal_priority = Enum.YLeaf(33, "normal-priority")

    class_unknown = Enum.YLeaf(34, "class-unknown")

    unknown_priority = Enum.YLeaf(35, "unknown-priority")


class ShapeProfiletypeV2(Enum):
    """
    ShapeProfiletypeV2 (Enum Class)

    SHAPE profile type

    .. data:: invalid = 0

    	Shape Profile Type Invalid

    .. data:: always = 1

    	Shape Profile Type Always

    .. data:: never = 2

    	Shape Profile Type Never

    .. data:: explicit = 3

    	Shape Profile Type Explicit

    .. data:: scale = 4

    	Shape Profile Type Scale

    .. data:: grid = 5

    	Shape Profile Type Grid

    """

    invalid = Enum.YLeaf(0, "invalid")

    always = Enum.YLeaf(1, "always")

    never = Enum.YLeaf(2, "never")

    explicit = Enum.YLeaf(3, "explicit")

    scale = Enum.YLeaf(4, "scale")

    grid = Enum.YLeaf(5, "grid")


class TbAlgorithm(Enum):
    """
    TbAlgorithm (Enum Class)

    Tokenbucket type

    .. data:: inactive = 0

    	Inactive, configured but disabled

    .. data:: single = 1

    	Single token bucket

    .. data:: single_rate_tcm = 2

    	Single rate three color marker

    .. data:: two_rate_tcm = 3

    	Two rate three color marker

    .. data:: mef_tcm = 4

    	Allows coupling between CIR and PIR tb's

    .. data:: dummy = 5

    	Internal dummy token bucket for coupled-policer

    	child

    """

    inactive = Enum.YLeaf(0, "inactive")

    single = Enum.YLeaf(1, "single")

    single_rate_tcm = Enum.YLeaf(2, "single-rate-tcm")

    two_rate_tcm = Enum.YLeaf(3, "two-rate-tcm")

    mef_tcm = Enum.YLeaf(4, "mef-tcm")

    dummy = Enum.YLeaf(5, "dummy")


class Wred(Enum):
    """
    Wred (Enum Class)

    WRED type

    .. data:: wred_cos = 0

    	WRED based on COS

    .. data:: wred_dscp = 1

    	WRED based on DSCP

    .. data:: wred_precedence = 2

    	WRED based on Precedence

    .. data:: wred_discard_class = 3

    	WRED based on discard class

    .. data:: wred_mpls_exp = 4

    	WRED based on MPLS EXP

    .. data:: red_with_user_min_max = 5

    	RED with user defined min and max

    .. data:: red_with_default_min_max = 6

    	RED with default min and max

    .. data:: wred_dei = 7

    	WRED DEI

    """

    wred_cos = Enum.YLeaf(0, "wred-cos")

    wred_dscp = Enum.YLeaf(1, "wred-dscp")

    wred_precedence = Enum.YLeaf(2, "wred-precedence")

    wred_discard_class = Enum.YLeaf(3, "wred-discard-class")

    wred_mpls_exp = Enum.YLeaf(4, "wred-mpls-exp")

    red_with_user_min_max = Enum.YLeaf(5, "red-with-user-min-max")

    red_with_default_min_max = Enum.YLeaf(6, "red-with-default-min-max")

    wred_dei = Enum.YLeaf(7, "wred-dei")


class Wred1(Enum):
    """
    Wred1 (Enum Class)

    Wred1

    .. data:: wred_cos_cmd = 0

    	wred cos cmd

    .. data:: wred_dscp_cmd = 1

    	wred dscp cmd

    .. data:: wred_precedence_cmd = 2

    	wred precedence cmd

    .. data:: wred_discard_class_cmd = 3

    	wred discard class cmd

    .. data:: wred_mpls_exp_cmd = 4

    	wred mpls exp cmd

    .. data:: red_with_user_min_max = 5

    	red with user min max

    .. data:: red_with_default_min_max = 6

    	red with default min max

    .. data:: wred_dei_cmd = 7

    	wred dei cmd

    .. data:: wred_ecn_cmd = 8

    	wred ecn cmd

    .. data:: wred_invalid_cmd = 9

    	wred invalid cmd

    """

    wred_cos_cmd = Enum.YLeaf(0, "wred-cos-cmd")

    wred_dscp_cmd = Enum.YLeaf(1, "wred-dscp-cmd")

    wred_precedence_cmd = Enum.YLeaf(2, "wred-precedence-cmd")

    wred_discard_class_cmd = Enum.YLeaf(3, "wred-discard-class-cmd")

    wred_mpls_exp_cmd = Enum.YLeaf(4, "wred-mpls-exp-cmd")

    red_with_user_min_max = Enum.YLeaf(5, "red-with-user-min-max")

    red_with_default_min_max = Enum.YLeaf(6, "red-with-default-min-max")

    wred_dei_cmd = Enum.YLeaf(7, "wred-dei-cmd")

    wred_ecn_cmd = Enum.YLeaf(8, "wred-ecn-cmd")

    wred_invalid_cmd = Enum.YLeaf(9, "wred-invalid-cmd")



class PlatformQos(Entity):
    """
    QoS ASR9K platform operational data 
    
    .. attribute:: nodes
    
    	List of nodes with platform specific QoS configuration
    	**type**\:  :py:class:`Nodes <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes>`
    
    

    """

    _prefix = 'asr9k-qos-oper'
    _revision = '2015-11-09'

    def __init__(self):
        super(PlatformQos, self).__init__()
        self._top_entity = None

        self.yang_name = "platform-qos"
        self.yang_parent_name = "Cisco-IOS-XR-asr9k-qos-oper"
        self.is_top_level_class = True
        self.has_list_ancestor = False
        self.ylist_key_names = []
        self._child_container_classes = OrderedDict([("nodes", ("nodes", PlatformQos.Nodes))])
        self._child_list_classes = OrderedDict([])
        self._leafs = OrderedDict()

        self.nodes = PlatformQos.Nodes()
        self.nodes.parent = self
        self._children_name_map["nodes"] = "nodes"
        self._children_yang_names.add("nodes")
        self._segment_path = lambda: "Cisco-IOS-XR-asr9k-qos-oper:platform-qos"


    class Nodes(Entity):
        """
        List of nodes with platform specific QoS
        configuration
        
        .. attribute:: node
        
        	Node with platform specific QoS configuration
        	**type**\: list of  		 :py:class:`Node <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node>`
        
        

        """

        _prefix = 'asr9k-qos-oper'
        _revision = '2015-11-09'

        def __init__(self):
            super(PlatformQos.Nodes, self).__init__()

            self.yang_name = "nodes"
            self.yang_parent_name = "platform-qos"
            self.is_top_level_class = False
            self.has_list_ancestor = False
            self.ylist_key_names = []
            self._child_container_classes = OrderedDict([])
            self._child_list_classes = OrderedDict([("node", ("node", PlatformQos.Nodes.Node))])
            self._leafs = OrderedDict()

            self.node = YList(self)
            self._segment_path = lambda: "nodes"
            self._absolute_path = lambda: "Cisco-IOS-XR-asr9k-qos-oper:platform-qos/%s" % self._segment_path()

        def __setattr__(self, name, value):
            self._perform_setattr(PlatformQos.Nodes, [], name, value)


        class Node(Entity):
            """
            Node with platform specific QoS configuration
            
            .. attribute:: node_name  (key)
            
            	Node name
            	**type**\: str
            
            	**pattern:** ([a\-zA\-Z0\-9\_]\*\\d+/){1,2}([a\-zA\-Z0\-9\_]\*\\d+)
            
            .. attribute:: capability
            
            	QoS system capability
            	**type**\:  :py:class:`Capability <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Capability>`
            
            .. attribute:: interfaces
            
            	QoS list of interfaces
            	**type**\:  :py:class:`Interfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces>`
            
            .. attribute:: bundle_interfaces
            
            	QoS list of bundle interfaces
            	**type**\:  :py:class:`BundleInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces>`
            
            

            """

            _prefix = 'asr9k-qos-oper'
            _revision = '2015-11-09'

            def __init__(self):
                super(PlatformQos.Nodes.Node, self).__init__()

                self.yang_name = "node"
                self.yang_parent_name = "nodes"
                self.is_top_level_class = False
                self.has_list_ancestor = False
                self.ylist_key_names = ['node_name']
                self._child_container_classes = OrderedDict([("capability", ("capability", PlatformQos.Nodes.Node.Capability)), ("interfaces", ("interfaces", PlatformQos.Nodes.Node.Interfaces)), ("bundle-interfaces", ("bundle_interfaces", PlatformQos.Nodes.Node.BundleInterfaces))])
                self._child_list_classes = OrderedDict([])
                self._leafs = OrderedDict([
                    ('node_name', YLeaf(YType.str, 'node-name')),
                ])
                self.node_name = None

                self.capability = PlatformQos.Nodes.Node.Capability()
                self.capability.parent = self
                self._children_name_map["capability"] = "capability"
                self._children_yang_names.add("capability")

                self.interfaces = PlatformQos.Nodes.Node.Interfaces()
                self.interfaces.parent = self
                self._children_name_map["interfaces"] = "interfaces"
                self._children_yang_names.add("interfaces")

                self.bundle_interfaces = PlatformQos.Nodes.Node.BundleInterfaces()
                self.bundle_interfaces.parent = self
                self._children_name_map["bundle_interfaces"] = "bundle-interfaces"
                self._children_yang_names.add("bundle-interfaces")
                self._segment_path = lambda: "node" + "[node-name='" + str(self.node_name) + "']"
                self._absolute_path = lambda: "Cisco-IOS-XR-asr9k-qos-oper:platform-qos/nodes/%s" % self._segment_path()

            def __setattr__(self, name, value):
                self._perform_setattr(PlatformQos.Nodes.Node, ['node_name'], name, value)


            class Capability(Entity):
                """
                QoS system capability
                
                .. attribute:: max_policy_maps
                
                	Maximum policy maps per system
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_policy_hierarchy
                
                	Maximum policy hierarchy
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_policy_name_length
                
                	Maximum policy name length
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classes_per_child_policy
                
                	Maximum classes per child policy
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classes_per_policy
                
                	Maximum classes per policy
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classes_per_grand_parent_policy
                
                	Maximum classes per parent policy
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_police_actions_per_class
                
                	Maximum police actions per class
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_marking_actions_per_class
                
                	Maximum marking action  per class
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_matches_per_class
                
                	Maximum matches per class
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_classmap_name_length
                
                	Maximum classmap name length
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_bundle_members
                
                	Maximum bundle members
                	**type**\: int
                
                	**range:** 0..4294967295
                
                .. attribute:: max_instance_name_length
                
                	Maximum instance name length
                	**type**\: int
                
                	**range:** 0..4294967295
                
                

                """

                _prefix = 'asr9k-qos-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    super(PlatformQos.Nodes.Node.Capability, self).__init__()

                    self.yang_name = "capability"
                    self.yang_parent_name = "node"
                    self.is_top_level_class = False
                    self.has_list_ancestor = True
                    self.ylist_key_names = []
                    self._child_container_classes = OrderedDict([])
                    self._child_list_classes = OrderedDict([])
                    self._leafs = OrderedDict([
                        ('max_policy_maps', YLeaf(YType.uint32, 'max-policy-maps')),
                        ('max_policy_hierarchy', YLeaf(YType.uint32, 'max-policy-hierarchy')),
                        ('max_policy_name_length', YLeaf(YType.uint32, 'max-policy-name-length')),
                        ('max_classes_per_child_policy', YLeaf(YType.uint32, 'max-classes-per-child-policy')),
                        ('max_classes_per_policy', YLeaf(YType.uint32, 'max-classes-per-policy')),
                        ('max_classes_per_grand_parent_policy', YLeaf(YType.uint32, 'max-classes-per-grand-parent-policy')),
                        ('max_police_actions_per_class', YLeaf(YType.uint32, 'max-police-actions-per-class')),
                        ('max_marking_actions_per_class', YLeaf(YType.uint32, 'max-marking-actions-per-class')),
                        ('max_matches_per_class', YLeaf(YType.uint32, 'max-matches-per-class')),
                        ('max_classmap_name_length', YLeaf(YType.uint32, 'max-classmap-name-length')),
                        ('max_bundle_members', YLeaf(YType.uint32, 'max-bundle-members')),
                        ('max_instance_name_length', YLeaf(YType.uint32, 'max-instance-name-length')),
                    ])
                    self.max_policy_maps = None
                    self.max_policy_hierarchy = None
                    self.max_policy_name_length = None
                    self.max_classes_per_child_policy = None
                    self.max_classes_per_policy = None
                    self.max_classes_per_grand_parent_policy = None
                    self.max_police_actions_per_class = None
                    self.max_marking_actions_per_class = None
                    self.max_matches_per_class = None
                    self.max_classmap_name_length = None
                    self.max_bundle_members = None
                    self.max_instance_name_length = None
                    self._segment_path = lambda: "capability"

                def __setattr__(self, name, value):
                    self._perform_setattr(PlatformQos.Nodes.Node.Capability, ['max_policy_maps', 'max_policy_hierarchy', 'max_policy_name_length', 'max_classes_per_child_policy', 'max_classes_per_policy', 'max_classes_per_grand_parent_policy', 'max_police_actions_per_class', 'max_marking_actions_per_class', 'max_matches_per_class', 'max_classmap_name_length', 'max_bundle_members', 'max_instance_name_length'], name, value)


            class Interfaces(Entity):
                """
                QoS list of interfaces
                
                .. attribute:: interface
                
                	QoS interface name
                	**type**\: list of  		 :py:class:`Interface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface>`
                
                

                """

                _prefix = 'asr9k-qos-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    super(PlatformQos.Nodes.Node.Interfaces, self).__init__()

                    self.yang_name = "interfaces"
                    self.yang_parent_name = "node"
                    self.is_top_level_class = False
                    self.has_list_ancestor = True
                    self.ylist_key_names = []
                    self._child_container_classes = OrderedDict([])
                    self._child_list_classes = OrderedDict([("interface", ("interface", PlatformQos.Nodes.Node.Interfaces.Interface))])
                    self._leafs = OrderedDict()

                    self.interface = YList(self)
                    self._segment_path = lambda: "interfaces"

                def __setattr__(self, name, value):
                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces, [], name, value)


                class Interface(Entity):
                    """
                    QoS interface name
                    
                    .. attribute:: interface_name  (key)
                    
                    	The name of the interface
                    	**type**\: str
                    
                    	**pattern:** [a\-zA\-Z0\-9./\-]+
                    
                    .. attribute:: input
                    
                    	QoS policy direction ingress
                    	**type**\:  :py:class:`Input <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input>`
                    
                    .. attribute:: output
                    
                    	QoS policy direction egress
                    	**type**\:  :py:class:`Output <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output>`
                    
                    

                    """

                    _prefix = 'asr9k-qos-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        super(PlatformQos.Nodes.Node.Interfaces.Interface, self).__init__()

                        self.yang_name = "interface"
                        self.yang_parent_name = "interfaces"
                        self.is_top_level_class = False
                        self.has_list_ancestor = True
                        self.ylist_key_names = ['interface_name']
                        self._child_container_classes = OrderedDict([("input", ("input", PlatformQos.Nodes.Node.Interfaces.Interface.Input)), ("output", ("output", PlatformQos.Nodes.Node.Interfaces.Interface.Output))])
                        self._child_list_classes = OrderedDict([])
                        self._leafs = OrderedDict([
                            ('interface_name', YLeaf(YType.str, 'interface-name')),
                        ])
                        self.interface_name = None

                        self.input = PlatformQos.Nodes.Node.Interfaces.Interface.Input()
                        self.input.parent = self
                        self._children_name_map["input"] = "input"
                        self._children_yang_names.add("input")

                        self.output = PlatformQos.Nodes.Node.Interfaces.Interface.Output()
                        self.output.parent = self
                        self._children_name_map["output"] = "output"
                        self._children_yang_names.add("output")
                        self._segment_path = lambda: "interface" + "[interface-name='" + str(self.interface_name) + "']"

                    def __setattr__(self, name, value):
                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface, ['interface_name'], name, value)


                    class Input(Entity):
                        """
                        QoS policy direction ingress
                        
                        .. attribute:: details
                        
                        	QoS policy direction egress
                        	**type**\:  :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input, self).__init__()

                            self.yang_name = "input"
                            self.yang_parent_name = "interface"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_container_classes = OrderedDict([("details", ("details", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details))])
                            self._child_list_classes = OrderedDict([])
                            self._leafs = OrderedDict()

                            self.details = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details()
                            self.details.parent = self
                            self._children_name_map["details"] = "details"
                            self._children_yang_names.add("details")
                            self._segment_path = lambda: "input"


                        class Details(Entity):
                            """
                            QoS policy direction egress
                            
                            .. attribute:: header
                            
                            	QoS policy header
                            	**type**\:  :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header>`
                            
                            .. attribute:: policy
                            
                            	Trident QoS policy details
                            	**type**\:  :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy>`
                            
                            .. attribute:: policy_typhoon
                            
                            	Typhoon QoS policy details
                            	**type**\:  :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details, self).__init__()

                                self.yang_name = "details"
                                self.yang_parent_name = "input"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_container_classes = OrderedDict([("header", ("header", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header)), ("policy", ("policy", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy)), ("policy-typhoon", ("policy_typhoon", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon))])
                                self._child_list_classes = OrderedDict([])
                                self._leafs = OrderedDict()

                                self.header = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header()
                                self.header.parent = self
                                self._children_name_map["header"] = "header"
                                self._children_yang_names.add("header")

                                self.policy = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy()
                                self.policy.parent = self
                                self._children_name_map["policy"] = "policy"
                                self._children_yang_names.add("policy")

                                self.policy_typhoon = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon()
                                self.policy_typhoon.parent = self
                                self._children_name_map["policy_typhoon"] = "policy-typhoon"
                                self._children_yang_names.add("policy-typhoon")
                                self._segment_path = lambda: "details"


                            class Header(Entity):
                                """
                                QoS policy header
                                
                                .. attribute:: interface_parameters
                                
                                	Interface config and programmed parameters
                                	**type**\:  :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters>`
                                
                                .. attribute:: programmed_bandwidth
                                
                                	Bandwidth that was programmed
                                	**type**\:  :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth>`
                                
                                .. attribute:: classes
                                
                                	Number of classes
                                	**type**\: int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: policy_name
                                
                                	Policy name
                                	**type**\: str
                                
                                	**length:** 0..65
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header, self).__init__()

                                    self.yang_name = "header"
                                    self.yang_parent_name = "details"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_container_classes = OrderedDict([("interface-parameters", ("interface_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters)), ("programmed-bandwidth", ("programmed_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth))])
                                    self._child_list_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('classes', YLeaf(YType.uint16, 'classes')),
                                        ('policy_name', YLeaf(YType.str, 'policy-name')),
                                    ])
                                    self.classes = None
                                    self.policy_name = None

                                    self.interface_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters()
                                    self.interface_parameters.parent = self
                                    self._children_name_map["interface_parameters"] = "interface-parameters"
                                    self._children_yang_names.add("interface-parameters")

                                    self.programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth()
                                    self.programmed_bandwidth.parent = self
                                    self._children_name_map["programmed_bandwidth"] = "programmed-bandwidth"
                                    self._children_yang_names.add("programmed-bandwidth")
                                    self._segment_path = lambda: "header"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header, ['classes', 'policy_name'], name, value)


                                class InterfaceParameters(Entity):
                                    """
                                    Interface config and programmed parameters
                                    
                                    .. attribute:: port_config_bandwidth
                                    
                                    	Bandwidth due to port speed change
                                    	**type**\:  :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                    
                                    .. attribute:: ancp_config_bandwidth
                                    
                                    	Bandwidth obtain from IM
                                    	**type**\:  :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                    
                                    .. attribute:: ancp_programmed_bandwidth
                                    
                                    	ANCP bandwidth that was programmed
                                    	**type**\:  :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                    
                                    .. attribute:: port_shaper_rate
                                    
                                    	Bandwidth that was programmed
                                    	**type**\:  :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters, self).__init__()

                                        self.yang_name = "interface-parameters"
                                        self.yang_parent_name = "header"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("port-config-bandwidth", ("port_config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth)), ("ancp-config-bandwidth", ("ancp_config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth)), ("ancp-programmed-bandwidth", ("ancp_programmed_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth)), ("port-shaper-rate", ("port_shaper_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict()

                                        self.port_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                        self.port_config_bandwidth.parent = self
                                        self._children_name_map["port_config_bandwidth"] = "port-config-bandwidth"
                                        self._children_yang_names.add("port-config-bandwidth")

                                        self.ancp_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                        self.ancp_config_bandwidth.parent = self
                                        self._children_name_map["ancp_config_bandwidth"] = "ancp-config-bandwidth"
                                        self._children_yang_names.add("ancp-config-bandwidth")

                                        self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                        self.ancp_programmed_bandwidth.parent = self
                                        self._children_name_map["ancp_programmed_bandwidth"] = "ancp-programmed-bandwidth"
                                        self._children_yang_names.add("ancp-programmed-bandwidth")

                                        self.port_shaper_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate()
                                        self.port_shaper_rate.parent = self
                                        self._children_name_map["port_shaper_rate"] = "port-shaper-rate"
                                        self._children_yang_names.add("port-shaper-rate")
                                        self._segment_path = lambda: "interface-parameters"


                                    class PortConfigBandwidth(Entity):
                                        """
                                        Bandwidth due to port speed change
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth, self).__init__()

                                            self.yang_name = "port-config-bandwidth"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "port-config-bandwidth"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortConfigBandwidth, ['value', 'unit'], name, value)


                                    class AncpConfigBandwidth(Entity):
                                        """
                                        Bandwidth obtain from IM
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth, self).__init__()

                                            self.yang_name = "ancp-config-bandwidth"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "ancp-config-bandwidth"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpConfigBandwidth, ['value', 'unit'], name, value)


                                    class AncpProgrammedBandwidth(Entity):
                                        """
                                        ANCP bandwidth that was programmed
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, self).__init__()

                                            self.yang_name = "ancp-programmed-bandwidth"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "ancp-programmed-bandwidth"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, ['value', 'unit'], name, value)


                                    class PortShaperRate(Entity):
                                        """
                                        Bandwidth that was programmed
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate, self).__init__()

                                            self.yang_name = "port-shaper-rate"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "port-shaper-rate"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.InterfaceParameters.PortShaperRate, ['value', 'unit'], name, value)


                                class ProgrammedBandwidth(Entity):
                                    """
                                    Bandwidth that was programmed
                                    
                                    .. attribute:: value
                                    
                                    	Config value
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: unit
                                    
                                    	Config unit
                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth, self).__init__()

                                        self.yang_name = "programmed-bandwidth"
                                        self.yang_parent_name = "header"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('value', YLeaf(YType.uint32, 'value')),
                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                        ])
                                        self.value = None
                                        self.unit = None
                                        self._segment_path = lambda: "programmed-bandwidth"

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Header.ProgrammedBandwidth, ['value', 'unit'], name, value)


                            class Policy(Entity):
                                """
                                Trident QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v1
                                
                                	qos show ea st v1
                                	**type**\: list of  		 :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy, self).__init__()

                                    self.yang_name = "policy"
                                    self.yang_parent_name = "details"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_container_classes = OrderedDict([])
                                    self._child_list_classes = OrderedDict([("qos-show-ea-st-v1", ("qos_show_ea_st_v1", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1))])
                                    self._leafs = OrderedDict()

                                    self.qos_show_ea_st_v1 = YList(self)
                                    self._segment_path = lambda: "policy"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy, [], name, value)


                                class QosShowEaStV1(Entity):
                                    """
                                    qos show ea st v1
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape>`
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred>`
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark>`
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\: int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1, self).__init__()

                                        self.yang_name = "qos-show-ea-st-v1"
                                        self.yang_parent_name = "policy"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape)), ("police", ("police", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('class_level', YLeaf(YType.uint8, 'class-level')),
                                            ('class_name', YLeaf(YType.str, 'class-name')),
                                            ('policy_name', YLeaf(YType.str, 'policy-name')),
                                            ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                            ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                        ])
                                        self.class_level = None
                                        self.class_name = None
                                        self.policy_name = None
                                        self.parent_policy_name = None
                                        self.parent_class_name = None

                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue()
                                        self.queue.parent = self
                                        self._children_name_map["queue"] = "queue"
                                        self._children_yang_names.add("queue")

                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                        self._children_yang_names.add("queue-limit-parameters")

                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape()
                                        self.shape.parent = self
                                        self._children_name_map["shape"] = "shape"
                                        self._children_yang_names.add("shape")

                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police()
                                        self.police.parent = self
                                        self._children_name_map["police"] = "police"
                                        self._children_yang_names.add("police")

                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq()
                                        self.wfq.parent = self
                                        self._children_name_map["wfq"] = "wfq"
                                        self._children_yang_names.add("wfq")

                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred()
                                        self.wred.parent = self
                                        self._children_name_map["wred"] = "wred"
                                        self._children_yang_names.add("wred")

                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark()
                                        self.mark.parent = self
                                        self._children_name_map["mark"] = "mark"
                                        self._children_yang_names.add("mark")
                                        self._segment_path = lambda: "qos-show-ea-st-v1"

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                    class Queue(Entity):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\: str
                                        
                                        	**length:** 0..65
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue, self).__init__()

                                            self.yang_name = "queue"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                ('class_name', YLeaf(YType.str, 'class-name')),
                                            ])
                                            self.queue_id = None
                                            self.queue_type = None
                                            self.class_name = None
                                            self._segment_path = lambda: "queue"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                    class QueueLimitParameters(Entity):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters, self).__init__()

                                            self.yang_name = "queue-limit-parameters"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                            ])
                                            self.profile_id = None
                                            self.scaling_profile_id = None

                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self._children_name_map["queue_limit"] = "queue-limit"
                                            self._children_yang_names.add("queue-limit")

                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                            self._children_yang_names.add("config-queue-limit")
                                            self._segment_path = lambda: "queue-limit-parameters"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters, ['profile_id', 'scaling_profile_id'], name, value)


                                        class QueueLimit(Entity):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, self).__init__()

                                                self.yang_name = "queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                        class ConfigQueueLimit(Entity):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                self.yang_name = "config-queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "config-queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                    class Shape(Entity):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cir
                                        
                                        	CIR in kbps
                                        	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                        
                                        .. attribute:: config_bandwidth
                                        
                                        	Config bandwidth
                                        	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS in bytes
                                        	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR in kbps
                                        	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS in bytes
                                        	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Shape profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape, self).__init__()

                                            self.yang_name = "shape"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                            ])
                                            self.profile_id = None

                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir()
                                            self.cir.parent = self
                                            self._children_name_map["cir"] = "cir"
                                            self._children_yang_names.add("cir")

                                            self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                            self.config_bandwidth.parent = self
                                            self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                            self._children_yang_names.add("config-bandwidth")

                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                            self.cbs.parent = self
                                            self._children_name_map["cbs"] = "cbs"
                                            self._children_yang_names.add("cbs")

                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir()
                                            self.pir.parent = self
                                            self._children_name_map["pir"] = "pir"
                                            self._children_yang_names.add("pir")

                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                            self.pbs.parent = self
                                            self._children_name_map["pbs"] = "pbs"
                                            self._children_yang_names.add("pbs")
                                            self._segment_path = lambda: "shape"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape, ['profile_id'], name, value)


                                        class Cir(Entity):
                                            """
                                            CIR in kbps
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir, self).__init__()

                                                self.yang_name = "cir"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cir, ['value', 'unit'], name, value)


                                        class ConfigBandwidth(Entity):
                                            """
                                            Config bandwidth
                                            
                                            .. attribute:: minimum_rate
                                            
                                            	Minimum bandwidth rate
                                            	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth, self).__init__()

                                                self.yang_name = "config-bandwidth"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                self.minimum_rate.parent = self
                                                self._children_name_map["minimum_rate"] = "minimum-rate"
                                                self._children_yang_names.add("minimum-rate")
                                                self._segment_path = lambda: "config-bandwidth"


                                            class MinimumRate(Entity):
                                                """
                                                Minimum bandwidth rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, self).__init__()

                                                    self.yang_name = "minimum-rate"
                                                    self.yang_parent_name = "config-bandwidth"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "minimum-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                        class Cbs(Entity):
                                            """
                                            CBS in bytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs, self).__init__()

                                                self.yang_name = "cbs"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Cbs, ['value', 'unit'], name, value)


                                        class Pir(Entity):
                                            """
                                            PIR in kbps
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir, self).__init__()

                                                self.yang_name = "pir"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pir, ['value', 'unit'], name, value)


                                        class Pbs(Entity):
                                            """
                                            PBS in bytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs, self).__init__()

                                                self.yang_name = "pbs"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Shape.Pbs, ['value', 'unit'], name, value)


                                    class Police(Entity):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir>`
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police, self).__init__()

                                            self.yang_name = "police"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                            ])
                                            self.policer_type = None
                                            self.profile_id = None

                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir()
                                            self.cir.parent = self
                                            self._children_name_map["cir"] = "cir"
                                            self._children_yang_names.add("cir")

                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs()
                                            self.cbs.parent = self
                                            self._children_name_map["cbs"] = "cbs"
                                            self._children_yang_names.add("cbs")

                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir()
                                            self.pir.parent = self
                                            self._children_name_map["pir"] = "pir"
                                            self._children_yang_names.add("pir")

                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs()
                                            self.pbs.parent = self
                                            self._children_name_map["pbs"] = "pbs"
                                            self._children_yang_names.add("pbs")

                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                            self._children_yang_names.add("police-config-parameters")
                                            self._segment_path = lambda: "police"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police, ['policer_type', 'profile_id'], name, value)


                                        class Cir(Entity):
                                            """
                                            CIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir, self).__init__()

                                                self.yang_name = "cir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cir, ['value', 'unit'], name, value)


                                        class Cbs(Entity):
                                            """
                                            CBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs, self).__init__()

                                                self.yang_name = "cbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Cbs, ['value', 'unit'], name, value)


                                        class Pir(Entity):
                                            """
                                            PIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir, self).__init__()

                                                self.yang_name = "pir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pir, ['value', 'unit'], name, value)


                                        class Pbs(Entity):
                                            """
                                            PBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs, self).__init__()

                                                self.yang_name = "pbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.Pbs, ['value', 'unit'], name, value)


                                        class PoliceConfigParameters(Entity):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters, self).__init__()

                                                self.yang_name = "police-config-parameters"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self._children_name_map["average_rate"] = "average-rate"
                                                self._children_yang_names.add("average-rate")

                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self
                                                self._children_name_map["peak_rate"] = "peak-rate"
                                                self._children_yang_names.add("peak-rate")

                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self._children_name_map["conform_burst"] = "conform-burst"
                                                self._children_yang_names.add("conform-burst")

                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self._children_name_map["exceed_burst"] = "exceed-burst"
                                                self._children_yang_names.add("exceed-burst")
                                                self._segment_path = lambda: "police-config-parameters"


                                            class AverageRate(Entity):
                                                """
                                                Average rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                    self.yang_name = "average-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "average-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                            class PeakRate(Entity):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                    self.yang_name = "peak-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "peak-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                            class ConformBurst(Entity):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                    self.yang_name = "conform-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "conform-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                            class ExceedBurst(Entity):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                    self.yang_name = "exceed-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "exceed-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                    class Wfq(Entity):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\: int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq, self).__init__()

                                            self.yang_name = "wfq"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                ('level', YLeaf(YType.uint8, 'level')),
                                            ])
                                            self.profile_id = None
                                            self.committed_weight = None
                                            self.excess_weight = None
                                            self.excess_ratio = None
                                            self.chunk_id = None
                                            self.level = None

                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                            self._children_yang_names.add("parent-bandwidth")

                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self._children_name_map["bandwidth"] = "bandwidth"
                                            self._children_yang_names.add("bandwidth")
                                            self._segment_path = lambda: "wfq"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                        class ParentBandwidth(Entity):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, self).__init__()

                                                self.yang_name = "parent-bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "parent-bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                        class Bandwidth(Entity):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, self).__init__()

                                                self.yang_name = "bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                    class Wred(Entity):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\: int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred, self).__init__()

                                            self.yang_name = "wred"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve))])
                                            self._leafs = OrderedDict([
                                                ('type', YLeaf(YType.enumeration, 'type')),
                                                ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                                ('table_id', YLeaf(YType.uint8, 'table-id')),
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                            ])
                                            self.type = None
                                            self.curve_xr = None
                                            self.table_id = None
                                            self.profile_id = None
                                            self.scaling_profile_id = None

                                            self.curve = YList(self)
                                            self._segment_path = lambda: "wred"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred, ['type', 'curve_xr', 'table_id', 'profile_id', 'scaling_profile_id'], name, value)


                                        class Curve(Entity):
                                            """
                                            Curve details
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: match
                                            
                                            	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\: str
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve, self).__init__()

                                                self.yang_name = "curve"
                                                self.yang_parent_name = "wred"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('match', YLeaf(YType.str, 'match')),
                                                ])
                                                self.match = None

                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self._children_name_map["min_threshold"] = "min-threshold"
                                                self._children_yang_names.add("min-threshold")

                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self
                                                self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                self._children_yang_names.add("min-threshold-user-config")

                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self._children_name_map["max_threshold"] = "max-threshold"
                                                self._children_yang_names.add("max-threshold")

                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                self._children_yang_names.add("max-threshold-user-config")
                                                self._segment_path = lambda: "curve"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve, ['match'], name, value)


                                            class MinThreshold(Entity):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, self).__init__()

                                                    self.yang_name = "min-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                            class MinThresholdUserConfig(Entity):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                    self.yang_name = "min-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                            class MaxThreshold(Entity):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, self).__init__()

                                                    self.yang_name = "max-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                            class MaxThresholdUserConfig(Entity):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                    self.yang_name = "max-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                    class Mark(Entity):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark, self).__init__()

                                            self.yang_name = "mark"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict()

                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self._children_name_map["child_mark"] = "child-mark"
                                            self._children_yang_names.add("child-mark")

                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self._children_name_map["police_conform"] = "police-conform"
                                            self._children_yang_names.add("police-conform")

                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self._children_name_map["police_exceed"] = "police-exceed"
                                            self._children_yang_names.add("police-exceed")

                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                            self.police_violate.parent = self
                                            self._children_name_map["police_violate"] = "police-violate"
                                            self._children_yang_names.add("police-violate")

                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self._children_name_map["parent_mark"] = "parent-mark"
                                            self._children_yang_names.add("parent-mark")

                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                            self._children_yang_names.add("parent-police-conform")

                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                            self._children_yang_names.add("parent-police-exceed")

                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                            self._children_yang_names.add("parent-police-violate")
                                            self._segment_path = lambda: "mark"


                                        class ChildMark(Entity):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark, self).__init__()

                                                self.yang_name = "child-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "child-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "child-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceConform(Entity):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform, self).__init__()

                                                self.yang_name = "police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceExceed(Entity):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, self).__init__()

                                                self.yang_name = "police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceViolate(Entity):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, self).__init__()

                                                self.yang_name = "police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentMark(Entity):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark, self).__init__()

                                                self.yang_name = "parent-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceConform(Entity):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, self).__init__()

                                                self.yang_name = "parent-police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceExceed(Entity):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, self).__init__()

                                                self.yang_name = "parent-police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceViolate(Entity):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, self).__init__()

                                                self.yang_name = "parent-police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                            class PolicyTyphoon(Entity):
                                """
                                Typhoon QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v2
                                
                                	qos show ea st v2
                                	**type**\: list of  		 :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon, self).__init__()

                                    self.yang_name = "policy-typhoon"
                                    self.yang_parent_name = "details"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_container_classes = OrderedDict([])
                                    self._child_list_classes = OrderedDict([("qos-show-ea-st-v2", ("qos_show_ea_st_v2", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2))])
                                    self._leafs = OrderedDict()

                                    self.qos_show_ea_st_v2 = YList(self)
                                    self._segment_path = lambda: "policy-typhoon"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon, [], name, value)


                                class QosShowEaStV2(Entity):
                                    """
                                    qos show ea st v2
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\: int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2, self).__init__()

                                        self.yang_name = "qos-show-ea-st-v2"
                                        self.yang_parent_name = "policy-typhoon"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape)), ("police", ("police", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('class_level', YLeaf(YType.uint8, 'class-level')),
                                            ('class_name', YLeaf(YType.str, 'class-name')),
                                            ('policy_name', YLeaf(YType.str, 'policy-name')),
                                            ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                            ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                        ])
                                        self.class_level = None
                                        self.class_name = None
                                        self.policy_name = None
                                        self.parent_policy_name = None
                                        self.parent_class_name = None

                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                        self.queue.parent = self
                                        self._children_name_map["queue"] = "queue"
                                        self._children_yang_names.add("queue")

                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                        self._children_yang_names.add("queue-limit-parameters")

                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                        self.shape.parent = self
                                        self._children_name_map["shape"] = "shape"
                                        self._children_yang_names.add("shape")

                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                        self.police.parent = self
                                        self._children_name_map["police"] = "police"
                                        self._children_yang_names.add("police")

                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                        self.wfq.parent = self
                                        self._children_name_map["wfq"] = "wfq"
                                        self._children_yang_names.add("wfq")

                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                        self.wred.parent = self
                                        self._children_name_map["wred"] = "wred"
                                        self._children_yang_names.add("wred")

                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                        self.mark.parent = self
                                        self._children_name_map["mark"] = "mark"
                                        self._children_yang_names.add("mark")
                                        self._segment_path = lambda: "qos-show-ea-st-v2"

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                    class Queue(Entity):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\: str
                                        
                                        	**length:** 0..65
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue, self).__init__()

                                            self.yang_name = "queue"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                ('class_name', YLeaf(YType.str, 'class-name')),
                                            ])
                                            self.queue_id = None
                                            self.queue_type = None
                                            self.class_name = None
                                            self._segment_path = lambda: "queue"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                    class QueueLimitParameters(Entity):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: absolute_index
                                        
                                        	Absolute Index
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: template_id
                                        
                                        	Template ID
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: curve_id
                                        
                                        	Curve ID
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, self).__init__()

                                            self.yang_name = "queue-limit-parameters"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                            ])
                                            self.absolute_index = None
                                            self.template_id = None
                                            self.curve_id = None

                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self._children_name_map["queue_limit"] = "queue-limit"
                                            self._children_yang_names.add("queue-limit")

                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                            self._children_yang_names.add("config-queue-limit")
                                            self._segment_path = lambda: "queue-limit-parameters"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, ['absolute_index', 'template_id', 'curve_id'], name, value)


                                        class QueueLimit(Entity):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, self).__init__()

                                                self.yang_name = "queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                        class ConfigQueueLimit(Entity):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                self.yang_name = "config-queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "config-queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                    class Shape(Entity):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cir_shape
                                        
                                        	CIR shaper params
                                        	**type**\:  :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                        
                                        .. attribute:: pir_shape
                                        
                                        	PIR shaper params
                                        	**type**\:  :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                        
                                        .. attribute:: cir_shape_type
                                        
                                        	CIR Shaper type
                                        	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                        
                                        .. attribute:: pir_shape_type
                                        
                                        	PIR Shaper type
                                        	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape, self).__init__()

                                            self.yang_name = "shape"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir-shape", ("cir_shape", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape)), ("pir-shape", ("pir_shape", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('cir_shape_type', YLeaf(YType.enumeration, 'cir-shape-type')),
                                                ('pir_shape_type', YLeaf(YType.enumeration, 'pir-shape-type')),
                                            ])
                                            self.cir_shape_type = None
                                            self.pir_shape_type = None

                                            self.cir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                            self.cir_shape.parent = self
                                            self._children_name_map["cir_shape"] = "cir-shape"
                                            self._children_yang_names.add("cir-shape")

                                            self.pir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                            self.pir_shape.parent = self
                                            self._children_name_map["pir_shape"] = "pir-shape"
                                            self._children_yang_names.add("pir-shape")
                                            self._segment_path = lambda: "shape"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape, ['cir_shape_type', 'pir_shape_type'], name, value)


                                        class CirShape(Entity):
                                            """
                                            CIR shaper params
                                            
                                            .. attribute:: cir
                                            
                                            	CIR in kbps
                                            	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                            
                                            .. attribute:: config_bandwidth
                                            
                                            	Config bandwidth
                                            	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                            
                                            .. attribute:: cbs
                                            
                                            	CBS in bytes
                                            	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, self).__init__()

                                                self.yang_name = "cir-shape"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                    ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                    ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                ])
                                                self.chunk_id = None
                                                self.profile_id = None
                                                self.scale_factor = None

                                                self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                self.cir.parent = self
                                                self._children_name_map["cir"] = "cir"
                                                self._children_yang_names.add("cir")

                                                self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                self.config_bandwidth.parent = self
                                                self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                                self._children_yang_names.add("config-bandwidth")

                                                self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                self.cbs.parent = self
                                                self._children_name_map["cbs"] = "cbs"
                                                self._children_yang_names.add("cbs")
                                                self._segment_path = lambda: "cir-shape"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                            class Cir(Entity):
                                                """
                                                CIR in kbps
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, self).__init__()

                                                    self.yang_name = "cir"
                                                    self.yang_parent_name = "cir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "cir"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, ['value', 'unit'], name, value)


                                            class ConfigBandwidth(Entity):
                                                """
                                                Config bandwidth
                                                
                                                .. attribute:: minimum_rate
                                                
                                                	Minimum bandwidth rate
                                                	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth, self).__init__()

                                                    self.yang_name = "config-bandwidth"
                                                    self.yang_parent_name = "cir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict()

                                                    self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                    self.minimum_rate.parent = self
                                                    self._children_name_map["minimum_rate"] = "minimum-rate"
                                                    self._children_yang_names.add("minimum-rate")
                                                    self._segment_path = lambda: "config-bandwidth"


                                                class MinimumRate(Entity):
                                                    """
                                                    Minimum bandwidth rate
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, self).__init__()

                                                        self.yang_name = "minimum-rate"
                                                        self.yang_parent_name = "config-bandwidth"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "minimum-rate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                            class Cbs(Entity):
                                                """
                                                CBS in bytes
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, self).__init__()

                                                    self.yang_name = "cbs"
                                                    self.yang_parent_name = "cir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "cbs"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, ['value', 'unit'], name, value)


                                        class PirShape(Entity):
                                            """
                                            PIR shaper params
                                            
                                            .. attribute:: pir
                                            
                                            	PIR in kbps
                                            	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                            
                                            .. attribute:: pbs
                                            
                                            	PBS in bytes
                                            	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, self).__init__()

                                                self.yang_name = "pir-shape"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                    ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                    ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                ])
                                                self.chunk_id = None
                                                self.profile_id = None
                                                self.scale_factor = None

                                                self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                self.pir.parent = self
                                                self._children_name_map["pir"] = "pir"
                                                self._children_yang_names.add("pir")

                                                self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                self.pbs.parent = self
                                                self._children_name_map["pbs"] = "pbs"
                                                self._children_yang_names.add("pbs")
                                                self._segment_path = lambda: "pir-shape"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                            class Pir(Entity):
                                                """
                                                PIR in kbps
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, self).__init__()

                                                    self.yang_name = "pir"
                                                    self.yang_parent_name = "pir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "pir"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, ['value', 'unit'], name, value)


                                            class Pbs(Entity):
                                                """
                                                PBS in bytes
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, self).__init__()

                                                    self.yang_name = "pbs"
                                                    self.yang_parent_name = "pir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "pbs"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, ['value', 'unit'], name, value)


                                    class Police(Entity):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police, self).__init__()

                                            self.yang_name = "police"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                            ])
                                            self.policer_type = None
                                            self.profile_id = None

                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                            self.cir.parent = self
                                            self._children_name_map["cir"] = "cir"
                                            self._children_yang_names.add("cir")

                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                            self.cbs.parent = self
                                            self._children_name_map["cbs"] = "cbs"
                                            self._children_yang_names.add("cbs")

                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                            self.pir.parent = self
                                            self._children_name_map["pir"] = "pir"
                                            self._children_yang_names.add("pir")

                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                            self.pbs.parent = self
                                            self._children_name_map["pbs"] = "pbs"
                                            self._children_yang_names.add("pbs")

                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                            self._children_yang_names.add("police-config-parameters")
                                            self._segment_path = lambda: "police"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police, ['policer_type', 'profile_id'], name, value)


                                        class Cir(Entity):
                                            """
                                            CIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, self).__init__()

                                                self.yang_name = "cir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, ['value', 'unit'], name, value)


                                        class Cbs(Entity):
                                            """
                                            CBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, self).__init__()

                                                self.yang_name = "cbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, ['value', 'unit'], name, value)


                                        class Pir(Entity):
                                            """
                                            PIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, self).__init__()

                                                self.yang_name = "pir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, ['value', 'unit'], name, value)


                                        class Pbs(Entity):
                                            """
                                            PBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, self).__init__()

                                                self.yang_name = "pbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, ['value', 'unit'], name, value)


                                        class PoliceConfigParameters(Entity):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters, self).__init__()

                                                self.yang_name = "police-config-parameters"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self._children_name_map["average_rate"] = "average-rate"
                                                self._children_yang_names.add("average-rate")

                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self
                                                self._children_name_map["peak_rate"] = "peak-rate"
                                                self._children_yang_names.add("peak-rate")

                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self._children_name_map["conform_burst"] = "conform-burst"
                                                self._children_yang_names.add("conform-burst")

                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self._children_name_map["exceed_burst"] = "exceed-burst"
                                                self._children_yang_names.add("exceed-burst")
                                                self._segment_path = lambda: "police-config-parameters"


                                            class AverageRate(Entity):
                                                """
                                                Average rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                    self.yang_name = "average-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "average-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                            class PeakRate(Entity):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                    self.yang_name = "peak-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "peak-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                            class ConformBurst(Entity):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                    self.yang_name = "conform-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "conform-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                            class ExceedBurst(Entity):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                    self.yang_name = "exceed-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "exceed-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                    class Wfq(Entity):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\: int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq, self).__init__()

                                            self.yang_name = "wfq"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                ('level', YLeaf(YType.uint8, 'level')),
                                            ])
                                            self.profile_id = None
                                            self.committed_weight = None
                                            self.excess_weight = None
                                            self.excess_ratio = None
                                            self.chunk_id = None
                                            self.level = None

                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                            self._children_yang_names.add("parent-bandwidth")

                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self._children_name_map["bandwidth"] = "bandwidth"
                                            self._children_yang_names.add("bandwidth")
                                            self._segment_path = lambda: "wfq"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                        class ParentBandwidth(Entity):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, self).__init__()

                                                self.yang_name = "parent-bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "parent-bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                        class Bandwidth(Entity):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, self).__init__()

                                                self.yang_name = "bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                    class Wred(Entity):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred, self).__init__()

                                            self.yang_name = "wred"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve))])
                                            self._leafs = OrderedDict([
                                                ('type', YLeaf(YType.enumeration, 'type')),
                                                ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                            ])
                                            self.type = None
                                            self.curve_xr = None

                                            self.curve = YList(self)
                                            self._segment_path = lambda: "wred"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred, ['type', 'curve_xr'], name, value)


                                        class Curve(Entity):
                                            """
                                            Curve details
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: absolute_index
                                            
                                            	Absolute Index
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: template_id
                                            
                                            	Template ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: curve_id
                                            
                                            	Curve ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: match
                                            
                                            	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\: str
                                            
                                            .. attribute:: exp_match
                                            
                                            	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\: str
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, self).__init__()

                                                self.yang_name = "curve"
                                                self.yang_parent_name = "wred"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                    ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                    ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                                    ('match', YLeaf(YType.str, 'match')),
                                                    ('exp_match', YLeaf(YType.str, 'exp-match')),
                                                ])
                                                self.absolute_index = None
                                                self.template_id = None
                                                self.curve_id = None
                                                self.match = None
                                                self.exp_match = None

                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self._children_name_map["min_threshold"] = "min-threshold"
                                                self._children_yang_names.add("min-threshold")

                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self
                                                self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                self._children_yang_names.add("min-threshold-user-config")

                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self._children_name_map["max_threshold"] = "max-threshold"
                                                self._children_yang_names.add("max-threshold")

                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                self._children_yang_names.add("max-threshold-user-config")
                                                self._segment_path = lambda: "curve"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, ['absolute_index', 'template_id', 'curve_id', 'match', 'exp_match'], name, value)


                                            class MinThreshold(Entity):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, self).__init__()

                                                    self.yang_name = "min-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                            class MinThresholdUserConfig(Entity):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                    self.yang_name = "min-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                            class MaxThreshold(Entity):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, self).__init__()

                                                    self.yang_name = "max-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                            class MaxThresholdUserConfig(Entity):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                    self.yang_name = "max-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                    class Mark(Entity):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark, self).__init__()

                                            self.yang_name = "mark"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict()

                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self._children_name_map["child_mark"] = "child-mark"
                                            self._children_yang_names.add("child-mark")

                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self._children_name_map["police_conform"] = "police-conform"
                                            self._children_yang_names.add("police-conform")

                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self._children_name_map["police_exceed"] = "police-exceed"
                                            self._children_yang_names.add("police-exceed")

                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                            self.police_violate.parent = self
                                            self._children_name_map["police_violate"] = "police-violate"
                                            self._children_yang_names.add("police-violate")

                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self._children_name_map["parent_mark"] = "parent-mark"
                                            self._children_yang_names.add("parent-mark")

                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                            self._children_yang_names.add("parent-police-conform")

                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                            self._children_yang_names.add("parent-police-exceed")

                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                            self._children_yang_names.add("parent-police-violate")
                                            self._segment_path = lambda: "mark"


                                        class ChildMark(Entity):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, self).__init__()

                                                self.yang_name = "child-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "child-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "child-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceConform(Entity):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, self).__init__()

                                                self.yang_name = "police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceExceed(Entity):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, self).__init__()

                                                self.yang_name = "police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceViolate(Entity):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, self).__init__()

                                                self.yang_name = "police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentMark(Entity):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, self).__init__()

                                                self.yang_name = "parent-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceConform(Entity):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, self).__init__()

                                                self.yang_name = "parent-police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceExceed(Entity):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, self).__init__()

                                                self.yang_name = "parent-police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceViolate(Entity):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, self).__init__()

                                                self.yang_name = "parent-police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Input.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                    class Output(Entity):
                        """
                        QoS policy direction egress
                        
                        .. attribute:: details
                        
                        	QoS policy direction egress
                        	**type**\:  :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output, self).__init__()

                            self.yang_name = "output"
                            self.yang_parent_name = "interface"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_container_classes = OrderedDict([("details", ("details", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details))])
                            self._child_list_classes = OrderedDict([])
                            self._leafs = OrderedDict()

                            self.details = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details()
                            self.details.parent = self
                            self._children_name_map["details"] = "details"
                            self._children_yang_names.add("details")
                            self._segment_path = lambda: "output"


                        class Details(Entity):
                            """
                            QoS policy direction egress
                            
                            .. attribute:: header
                            
                            	QoS policy header
                            	**type**\:  :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header>`
                            
                            .. attribute:: policy
                            
                            	Trident QoS policy details
                            	**type**\:  :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy>`
                            
                            .. attribute:: policy_typhoon
                            
                            	Typhoon QoS policy details
                            	**type**\:  :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details, self).__init__()

                                self.yang_name = "details"
                                self.yang_parent_name = "output"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_container_classes = OrderedDict([("header", ("header", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header)), ("policy", ("policy", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy)), ("policy-typhoon", ("policy_typhoon", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon))])
                                self._child_list_classes = OrderedDict([])
                                self._leafs = OrderedDict()

                                self.header = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header()
                                self.header.parent = self
                                self._children_name_map["header"] = "header"
                                self._children_yang_names.add("header")

                                self.policy = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy()
                                self.policy.parent = self
                                self._children_name_map["policy"] = "policy"
                                self._children_yang_names.add("policy")

                                self.policy_typhoon = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon()
                                self.policy_typhoon.parent = self
                                self._children_name_map["policy_typhoon"] = "policy-typhoon"
                                self._children_yang_names.add("policy-typhoon")
                                self._segment_path = lambda: "details"


                            class Header(Entity):
                                """
                                QoS policy header
                                
                                .. attribute:: interface_parameters
                                
                                	Interface config and programmed parameters
                                	**type**\:  :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters>`
                                
                                .. attribute:: programmed_bandwidth
                                
                                	Bandwidth that was programmed
                                	**type**\:  :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth>`
                                
                                .. attribute:: classes
                                
                                	Number of classes
                                	**type**\: int
                                
                                	**range:** 0..65535
                                
                                .. attribute:: policy_name
                                
                                	Policy name
                                	**type**\: str
                                
                                	**length:** 0..65
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header, self).__init__()

                                    self.yang_name = "header"
                                    self.yang_parent_name = "details"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_container_classes = OrderedDict([("interface-parameters", ("interface_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters)), ("programmed-bandwidth", ("programmed_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth))])
                                    self._child_list_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('classes', YLeaf(YType.uint16, 'classes')),
                                        ('policy_name', YLeaf(YType.str, 'policy-name')),
                                    ])
                                    self.classes = None
                                    self.policy_name = None

                                    self.interface_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters()
                                    self.interface_parameters.parent = self
                                    self._children_name_map["interface_parameters"] = "interface-parameters"
                                    self._children_yang_names.add("interface-parameters")

                                    self.programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth()
                                    self.programmed_bandwidth.parent = self
                                    self._children_name_map["programmed_bandwidth"] = "programmed-bandwidth"
                                    self._children_yang_names.add("programmed-bandwidth")
                                    self._segment_path = lambda: "header"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header, ['classes', 'policy_name'], name, value)


                                class InterfaceParameters(Entity):
                                    """
                                    Interface config and programmed parameters
                                    
                                    .. attribute:: port_config_bandwidth
                                    
                                    	Bandwidth due to port speed change
                                    	**type**\:  :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                    
                                    .. attribute:: ancp_config_bandwidth
                                    
                                    	Bandwidth obtain from IM
                                    	**type**\:  :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                    
                                    .. attribute:: ancp_programmed_bandwidth
                                    
                                    	ANCP bandwidth that was programmed
                                    	**type**\:  :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                    
                                    .. attribute:: port_shaper_rate
                                    
                                    	Bandwidth that was programmed
                                    	**type**\:  :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters, self).__init__()

                                        self.yang_name = "interface-parameters"
                                        self.yang_parent_name = "header"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("port-config-bandwidth", ("port_config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth)), ("ancp-config-bandwidth", ("ancp_config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth)), ("ancp-programmed-bandwidth", ("ancp_programmed_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth)), ("port-shaper-rate", ("port_shaper_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict()

                                        self.port_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                        self.port_config_bandwidth.parent = self
                                        self._children_name_map["port_config_bandwidth"] = "port-config-bandwidth"
                                        self._children_yang_names.add("port-config-bandwidth")

                                        self.ancp_config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                        self.ancp_config_bandwidth.parent = self
                                        self._children_name_map["ancp_config_bandwidth"] = "ancp-config-bandwidth"
                                        self._children_yang_names.add("ancp-config-bandwidth")

                                        self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                        self.ancp_programmed_bandwidth.parent = self
                                        self._children_name_map["ancp_programmed_bandwidth"] = "ancp-programmed-bandwidth"
                                        self._children_yang_names.add("ancp-programmed-bandwidth")

                                        self.port_shaper_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate()
                                        self.port_shaper_rate.parent = self
                                        self._children_name_map["port_shaper_rate"] = "port-shaper-rate"
                                        self._children_yang_names.add("port-shaper-rate")
                                        self._segment_path = lambda: "interface-parameters"


                                    class PortConfigBandwidth(Entity):
                                        """
                                        Bandwidth due to port speed change
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth, self).__init__()

                                            self.yang_name = "port-config-bandwidth"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "port-config-bandwidth"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortConfigBandwidth, ['value', 'unit'], name, value)


                                    class AncpConfigBandwidth(Entity):
                                        """
                                        Bandwidth obtain from IM
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth, self).__init__()

                                            self.yang_name = "ancp-config-bandwidth"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "ancp-config-bandwidth"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpConfigBandwidth, ['value', 'unit'], name, value)


                                    class AncpProgrammedBandwidth(Entity):
                                        """
                                        ANCP bandwidth that was programmed
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, self).__init__()

                                            self.yang_name = "ancp-programmed-bandwidth"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "ancp-programmed-bandwidth"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, ['value', 'unit'], name, value)


                                    class PortShaperRate(Entity):
                                        """
                                        Bandwidth that was programmed
                                        
                                        .. attribute:: value
                                        
                                        	Config value
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: unit
                                        
                                        	Config unit
                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate, self).__init__()

                                            self.yang_name = "port-shaper-rate"
                                            self.yang_parent_name = "interface-parameters"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('value', YLeaf(YType.uint32, 'value')),
                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                            ])
                                            self.value = None
                                            self.unit = None
                                            self._segment_path = lambda: "port-shaper-rate"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.InterfaceParameters.PortShaperRate, ['value', 'unit'], name, value)


                                class ProgrammedBandwidth(Entity):
                                    """
                                    Bandwidth that was programmed
                                    
                                    .. attribute:: value
                                    
                                    	Config value
                                    	**type**\: int
                                    
                                    	**range:** 0..4294967295
                                    
                                    .. attribute:: unit
                                    
                                    	Config unit
                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth, self).__init__()

                                        self.yang_name = "programmed-bandwidth"
                                        self.yang_parent_name = "header"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('value', YLeaf(YType.uint32, 'value')),
                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                        ])
                                        self.value = None
                                        self.unit = None
                                        self._segment_path = lambda: "programmed-bandwidth"

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Header.ProgrammedBandwidth, ['value', 'unit'], name, value)


                            class Policy(Entity):
                                """
                                Trident QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v1
                                
                                	qos show ea st v1
                                	**type**\: list of  		 :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy, self).__init__()

                                    self.yang_name = "policy"
                                    self.yang_parent_name = "details"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_container_classes = OrderedDict([])
                                    self._child_list_classes = OrderedDict([("qos-show-ea-st-v1", ("qos_show_ea_st_v1", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1))])
                                    self._leafs = OrderedDict()

                                    self.qos_show_ea_st_v1 = YList(self)
                                    self._segment_path = lambda: "policy"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy, [], name, value)


                                class QosShowEaStV1(Entity):
                                    """
                                    qos show ea st v1
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape>`
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred>`
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark>`
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\: int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1, self).__init__()

                                        self.yang_name = "qos-show-ea-st-v1"
                                        self.yang_parent_name = "policy"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape)), ("police", ("police", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('class_level', YLeaf(YType.uint8, 'class-level')),
                                            ('class_name', YLeaf(YType.str, 'class-name')),
                                            ('policy_name', YLeaf(YType.str, 'policy-name')),
                                            ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                            ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                        ])
                                        self.class_level = None
                                        self.class_name = None
                                        self.policy_name = None
                                        self.parent_policy_name = None
                                        self.parent_class_name = None

                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue()
                                        self.queue.parent = self
                                        self._children_name_map["queue"] = "queue"
                                        self._children_yang_names.add("queue")

                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                        self._children_yang_names.add("queue-limit-parameters")

                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape()
                                        self.shape.parent = self
                                        self._children_name_map["shape"] = "shape"
                                        self._children_yang_names.add("shape")

                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police()
                                        self.police.parent = self
                                        self._children_name_map["police"] = "police"
                                        self._children_yang_names.add("police")

                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq()
                                        self.wfq.parent = self
                                        self._children_name_map["wfq"] = "wfq"
                                        self._children_yang_names.add("wfq")

                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred()
                                        self.wred.parent = self
                                        self._children_name_map["wred"] = "wred"
                                        self._children_yang_names.add("wred")

                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark()
                                        self.mark.parent = self
                                        self._children_name_map["mark"] = "mark"
                                        self._children_yang_names.add("mark")
                                        self._segment_path = lambda: "qos-show-ea-st-v1"

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                    class Queue(Entity):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\: str
                                        
                                        	**length:** 0..65
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue, self).__init__()

                                            self.yang_name = "queue"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                ('class_name', YLeaf(YType.str, 'class-name')),
                                            ])
                                            self.queue_id = None
                                            self.queue_type = None
                                            self.class_name = None
                                            self._segment_path = lambda: "queue"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                    class QueueLimitParameters(Entity):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters, self).__init__()

                                            self.yang_name = "queue-limit-parameters"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                            ])
                                            self.profile_id = None
                                            self.scaling_profile_id = None

                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self._children_name_map["queue_limit"] = "queue-limit"
                                            self._children_yang_names.add("queue-limit")

                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                            self._children_yang_names.add("config-queue-limit")
                                            self._segment_path = lambda: "queue-limit-parameters"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters, ['profile_id', 'scaling_profile_id'], name, value)


                                        class QueueLimit(Entity):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, self).__init__()

                                                self.yang_name = "queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                        class ConfigQueueLimit(Entity):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                self.yang_name = "config-queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "config-queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                    class Shape(Entity):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cir
                                        
                                        	CIR in kbps
                                        	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                        
                                        .. attribute:: config_bandwidth
                                        
                                        	Config bandwidth
                                        	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS in bytes
                                        	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR in kbps
                                        	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS in bytes
                                        	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Shape profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape, self).__init__()

                                            self.yang_name = "shape"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                            ])
                                            self.profile_id = None

                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir()
                                            self.cir.parent = self
                                            self._children_name_map["cir"] = "cir"
                                            self._children_yang_names.add("cir")

                                            self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                            self.config_bandwidth.parent = self
                                            self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                            self._children_yang_names.add("config-bandwidth")

                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                            self.cbs.parent = self
                                            self._children_name_map["cbs"] = "cbs"
                                            self._children_yang_names.add("cbs")

                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir()
                                            self.pir.parent = self
                                            self._children_name_map["pir"] = "pir"
                                            self._children_yang_names.add("pir")

                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                            self.pbs.parent = self
                                            self._children_name_map["pbs"] = "pbs"
                                            self._children_yang_names.add("pbs")
                                            self._segment_path = lambda: "shape"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape, ['profile_id'], name, value)


                                        class Cir(Entity):
                                            """
                                            CIR in kbps
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir, self).__init__()

                                                self.yang_name = "cir"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cir, ['value', 'unit'], name, value)


                                        class ConfigBandwidth(Entity):
                                            """
                                            Config bandwidth
                                            
                                            .. attribute:: minimum_rate
                                            
                                            	Minimum bandwidth rate
                                            	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth, self).__init__()

                                                self.yang_name = "config-bandwidth"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                self.minimum_rate.parent = self
                                                self._children_name_map["minimum_rate"] = "minimum-rate"
                                                self._children_yang_names.add("minimum-rate")
                                                self._segment_path = lambda: "config-bandwidth"


                                            class MinimumRate(Entity):
                                                """
                                                Minimum bandwidth rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, self).__init__()

                                                    self.yang_name = "minimum-rate"
                                                    self.yang_parent_name = "config-bandwidth"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "minimum-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                        class Cbs(Entity):
                                            """
                                            CBS in bytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs, self).__init__()

                                                self.yang_name = "cbs"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Cbs, ['value', 'unit'], name, value)


                                        class Pir(Entity):
                                            """
                                            PIR in kbps
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir, self).__init__()

                                                self.yang_name = "pir"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pir, ['value', 'unit'], name, value)


                                        class Pbs(Entity):
                                            """
                                            PBS in bytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs, self).__init__()

                                                self.yang_name = "pbs"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Shape.Pbs, ['value', 'unit'], name, value)


                                    class Police(Entity):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir>`
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police, self).__init__()

                                            self.yang_name = "police"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                            ])
                                            self.policer_type = None
                                            self.profile_id = None

                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir()
                                            self.cir.parent = self
                                            self._children_name_map["cir"] = "cir"
                                            self._children_yang_names.add("cir")

                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs()
                                            self.cbs.parent = self
                                            self._children_name_map["cbs"] = "cbs"
                                            self._children_yang_names.add("cbs")

                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir()
                                            self.pir.parent = self
                                            self._children_name_map["pir"] = "pir"
                                            self._children_yang_names.add("pir")

                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs()
                                            self.pbs.parent = self
                                            self._children_name_map["pbs"] = "pbs"
                                            self._children_yang_names.add("pbs")

                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                            self._children_yang_names.add("police-config-parameters")
                                            self._segment_path = lambda: "police"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police, ['policer_type', 'profile_id'], name, value)


                                        class Cir(Entity):
                                            """
                                            CIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir, self).__init__()

                                                self.yang_name = "cir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cir, ['value', 'unit'], name, value)


                                        class Cbs(Entity):
                                            """
                                            CBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs, self).__init__()

                                                self.yang_name = "cbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Cbs, ['value', 'unit'], name, value)


                                        class Pir(Entity):
                                            """
                                            PIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir, self).__init__()

                                                self.yang_name = "pir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pir, ['value', 'unit'], name, value)


                                        class Pbs(Entity):
                                            """
                                            PBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs, self).__init__()

                                                self.yang_name = "pbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.Pbs, ['value', 'unit'], name, value)


                                        class PoliceConfigParameters(Entity):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters, self).__init__()

                                                self.yang_name = "police-config-parameters"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self._children_name_map["average_rate"] = "average-rate"
                                                self._children_yang_names.add("average-rate")

                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self
                                                self._children_name_map["peak_rate"] = "peak-rate"
                                                self._children_yang_names.add("peak-rate")

                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self._children_name_map["conform_burst"] = "conform-burst"
                                                self._children_yang_names.add("conform-burst")

                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self._children_name_map["exceed_burst"] = "exceed-burst"
                                                self._children_yang_names.add("exceed-burst")
                                                self._segment_path = lambda: "police-config-parameters"


                                            class AverageRate(Entity):
                                                """
                                                Average rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                    self.yang_name = "average-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "average-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                            class PeakRate(Entity):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                    self.yang_name = "peak-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "peak-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                            class ConformBurst(Entity):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                    self.yang_name = "conform-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "conform-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                            class ExceedBurst(Entity):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                    self.yang_name = "exceed-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "exceed-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                    class Wfq(Entity):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\: int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq, self).__init__()

                                            self.yang_name = "wfq"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                ('level', YLeaf(YType.uint8, 'level')),
                                            ])
                                            self.profile_id = None
                                            self.committed_weight = None
                                            self.excess_weight = None
                                            self.excess_ratio = None
                                            self.chunk_id = None
                                            self.level = None

                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                            self._children_yang_names.add("parent-bandwidth")

                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self._children_name_map["bandwidth"] = "bandwidth"
                                            self._children_yang_names.add("bandwidth")
                                            self._segment_path = lambda: "wfq"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                        class ParentBandwidth(Entity):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, self).__init__()

                                                self.yang_name = "parent-bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "parent-bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                        class Bandwidth(Entity):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, self).__init__()

                                                self.yang_name = "bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                    class Wred(Entity):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: table_id
                                        
                                        	Table ID
                                        	**type**\: int
                                        
                                        	**range:** 0..255
                                        
                                        .. attribute:: profile_id
                                        
                                        	Profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: scaling_profile_id
                                        
                                        	Scaling profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred, self).__init__()

                                            self.yang_name = "wred"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve))])
                                            self._leafs = OrderedDict([
                                                ('type', YLeaf(YType.enumeration, 'type')),
                                                ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                                ('table_id', YLeaf(YType.uint8, 'table-id')),
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                            ])
                                            self.type = None
                                            self.curve_xr = None
                                            self.table_id = None
                                            self.profile_id = None
                                            self.scaling_profile_id = None

                                            self.curve = YList(self)
                                            self._segment_path = lambda: "wred"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred, ['type', 'curve_xr', 'table_id', 'profile_id', 'scaling_profile_id'], name, value)


                                        class Curve(Entity):
                                            """
                                            Curve details
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: match
                                            
                                            	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\: str
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve, self).__init__()

                                                self.yang_name = "curve"
                                                self.yang_parent_name = "wred"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('match', YLeaf(YType.str, 'match')),
                                                ])
                                                self.match = None

                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self._children_name_map["min_threshold"] = "min-threshold"
                                                self._children_yang_names.add("min-threshold")

                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self
                                                self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                self._children_yang_names.add("min-threshold-user-config")

                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self._children_name_map["max_threshold"] = "max-threshold"
                                                self._children_yang_names.add("max-threshold")

                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                self._children_yang_names.add("max-threshold-user-config")
                                                self._segment_path = lambda: "curve"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve, ['match'], name, value)


                                            class MinThreshold(Entity):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, self).__init__()

                                                    self.yang_name = "min-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                            class MinThresholdUserConfig(Entity):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                    self.yang_name = "min-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                            class MaxThreshold(Entity):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, self).__init__()

                                                    self.yang_name = "max-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                            class MaxThresholdUserConfig(Entity):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                    self.yang_name = "max-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                    class Mark(Entity):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark, self).__init__()

                                            self.yang_name = "mark"
                                            self.yang_parent_name = "qos-show-ea-st-v1"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict()

                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self._children_name_map["child_mark"] = "child-mark"
                                            self._children_yang_names.add("child-mark")

                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self._children_name_map["police_conform"] = "police-conform"
                                            self._children_yang_names.add("police-conform")

                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self._children_name_map["police_exceed"] = "police-exceed"
                                            self._children_yang_names.add("police-exceed")

                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                            self.police_violate.parent = self
                                            self._children_name_map["police_violate"] = "police-violate"
                                            self._children_yang_names.add("police-violate")

                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self._children_name_map["parent_mark"] = "parent-mark"
                                            self._children_yang_names.add("parent-mark")

                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                            self._children_yang_names.add("parent-police-conform")

                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                            self._children_yang_names.add("parent-police-exceed")

                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                            self._children_yang_names.add("parent-police-violate")
                                            self._segment_path = lambda: "mark"


                                        class ChildMark(Entity):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark, self).__init__()

                                                self.yang_name = "child-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "child-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "child-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceConform(Entity):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform, self).__init__()

                                                self.yang_name = "police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceExceed(Entity):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, self).__init__()

                                                self.yang_name = "police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceViolate(Entity):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, self).__init__()

                                                self.yang_name = "police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentMark(Entity):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark, self).__init__()

                                                self.yang_name = "parent-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceConform(Entity):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, self).__init__()

                                                self.yang_name = "parent-police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceExceed(Entity):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, self).__init__()

                                                self.yang_name = "parent-police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceViolate(Entity):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, self).__init__()

                                                self.yang_name = "parent-police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                            class PolicyTyphoon(Entity):
                                """
                                Typhoon QoS policy details
                                
                                .. attribute:: qos_show_ea_st_v2
                                
                                	qos show ea st v2
                                	**type**\: list of  		 :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon, self).__init__()

                                    self.yang_name = "policy-typhoon"
                                    self.yang_parent_name = "details"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = []
                                    self._child_container_classes = OrderedDict([])
                                    self._child_list_classes = OrderedDict([("qos-show-ea-st-v2", ("qos_show_ea_st_v2", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2))])
                                    self._leafs = OrderedDict()

                                    self.qos_show_ea_st_v2 = YList(self)
                                    self._segment_path = lambda: "policy-typhoon"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon, [], name, value)


                                class QosShowEaStV2(Entity):
                                    """
                                    qos show ea st v2
                                    
                                    .. attribute:: queue
                                    
                                    	Queue parameters
                                    	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                    
                                    .. attribute:: queue_limit_parameters
                                    
                                    	Queue limit parameters
                                    	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                    
                                    .. attribute:: shape
                                    
                                    	Shape parameters
                                    	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                    
                                    .. attribute:: police
                                    
                                    	Police parameters
                                    	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                    
                                    .. attribute:: wfq
                                    
                                    	WFQ parameters
                                    	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                    
                                    .. attribute:: wred
                                    
                                    	WRED parameters
                                    	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                    
                                    .. attribute:: mark
                                    
                                    	Mark parameters
                                    	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                    
                                    .. attribute:: class_level
                                    
                                    	Class level
                                    	**type**\: int
                                    
                                    	**range:** 0..255
                                    
                                    .. attribute:: class_name
                                    
                                    	Class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: policy_name
                                    
                                    	Policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_policy_name
                                    
                                    	Parent policy name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    .. attribute:: parent_class_name
                                    
                                    	Parent class name
                                    	**type**\: str
                                    
                                    	**length:** 0..65
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2, self).__init__()

                                        self.yang_name = "qos-show-ea-st-v2"
                                        self.yang_parent_name = "policy-typhoon"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape)), ("police", ("police", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict([
                                            ('class_level', YLeaf(YType.uint8, 'class-level')),
                                            ('class_name', YLeaf(YType.str, 'class-name')),
                                            ('policy_name', YLeaf(YType.str, 'policy-name')),
                                            ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                            ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                        ])
                                        self.class_level = None
                                        self.class_name = None
                                        self.policy_name = None
                                        self.parent_policy_name = None
                                        self.parent_class_name = None

                                        self.queue = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                        self.queue.parent = self
                                        self._children_name_map["queue"] = "queue"
                                        self._children_yang_names.add("queue")

                                        self.queue_limit_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                        self.queue_limit_parameters.parent = self
                                        self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                        self._children_yang_names.add("queue-limit-parameters")

                                        self.shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                        self.shape.parent = self
                                        self._children_name_map["shape"] = "shape"
                                        self._children_yang_names.add("shape")

                                        self.police = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                        self.police.parent = self
                                        self._children_name_map["police"] = "police"
                                        self._children_yang_names.add("police")

                                        self.wfq = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                        self.wfq.parent = self
                                        self._children_name_map["wfq"] = "wfq"
                                        self._children_yang_names.add("wfq")

                                        self.wred = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                        self.wred.parent = self
                                        self._children_name_map["wred"] = "wred"
                                        self._children_yang_names.add("wred")

                                        self.mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                        self.mark.parent = self
                                        self._children_name_map["mark"] = "mark"
                                        self._children_yang_names.add("mark")
                                        self._segment_path = lambda: "qos-show-ea-st-v2"

                                    def __setattr__(self, name, value):
                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                    class Queue(Entity):
                                        """
                                        Queue parameters
                                        
                                        .. attribute:: queue_id
                                        
                                        	Queue ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: queue_type
                                        
                                        	Queue type
                                        	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                        
                                        .. attribute:: class_name
                                        
                                        	Class name
                                        	**type**\: str
                                        
                                        	**length:** 0..65
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue, self).__init__()

                                            self.yang_name = "queue"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                ('class_name', YLeaf(YType.str, 'class-name')),
                                            ])
                                            self.queue_id = None
                                            self.queue_type = None
                                            self.class_name = None
                                            self._segment_path = lambda: "queue"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                    class QueueLimitParameters(Entity):
                                        """
                                        Queue limit parameters
                                        
                                        .. attribute:: queue_limit
                                        
                                        	Queue limit in kbytes
                                        	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                        
                                        .. attribute:: config_queue_limit
                                        
                                        	Config queue limit
                                        	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                        
                                        .. attribute:: absolute_index
                                        
                                        	Absolute Index
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: template_id
                                        
                                        	Template ID
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: curve_id
                                        
                                        	Curve ID
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, self).__init__()

                                            self.yang_name = "queue-limit-parameters"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                            ])
                                            self.absolute_index = None
                                            self.template_id = None
                                            self.curve_id = None

                                            self.queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                            self.queue_limit.parent = self
                                            self._children_name_map["queue_limit"] = "queue-limit"
                                            self._children_yang_names.add("queue-limit")

                                            self.config_queue_limit = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                            self.config_queue_limit.parent = self
                                            self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                            self._children_yang_names.add("config-queue-limit")
                                            self._segment_path = lambda: "queue-limit-parameters"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, ['absolute_index', 'template_id', 'curve_id'], name, value)


                                        class QueueLimit(Entity):
                                            """
                                            Queue limit in kbytes
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, self).__init__()

                                                self.yang_name = "queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                        class ConfigQueueLimit(Entity):
                                            """
                                            Config queue limit
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                self.yang_name = "config-queue-limit"
                                                self.yang_parent_name = "queue-limit-parameters"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "config-queue-limit"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                    class Shape(Entity):
                                        """
                                        Shape parameters
                                        
                                        .. attribute:: cir_shape
                                        
                                        	CIR shaper params
                                        	**type**\:  :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                        
                                        .. attribute:: pir_shape
                                        
                                        	PIR shaper params
                                        	**type**\:  :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                        
                                        .. attribute:: cir_shape_type
                                        
                                        	CIR Shaper type
                                        	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                        
                                        .. attribute:: pir_shape_type
                                        
                                        	PIR Shaper type
                                        	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape, self).__init__()

                                            self.yang_name = "shape"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir-shape", ("cir_shape", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape)), ("pir-shape", ("pir_shape", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('cir_shape_type', YLeaf(YType.enumeration, 'cir-shape-type')),
                                                ('pir_shape_type', YLeaf(YType.enumeration, 'pir-shape-type')),
                                            ])
                                            self.cir_shape_type = None
                                            self.pir_shape_type = None

                                            self.cir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                            self.cir_shape.parent = self
                                            self._children_name_map["cir_shape"] = "cir-shape"
                                            self._children_yang_names.add("cir-shape")

                                            self.pir_shape = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                            self.pir_shape.parent = self
                                            self._children_name_map["pir_shape"] = "pir-shape"
                                            self._children_yang_names.add("pir-shape")
                                            self._segment_path = lambda: "shape"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape, ['cir_shape_type', 'pir_shape_type'], name, value)


                                        class CirShape(Entity):
                                            """
                                            CIR shaper params
                                            
                                            .. attribute:: cir
                                            
                                            	CIR in kbps
                                            	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                            
                                            .. attribute:: config_bandwidth
                                            
                                            	Config bandwidth
                                            	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                            
                                            .. attribute:: cbs
                                            
                                            	CBS in bytes
                                            	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, self).__init__()

                                                self.yang_name = "cir-shape"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                    ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                    ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                ])
                                                self.chunk_id = None
                                                self.profile_id = None
                                                self.scale_factor = None

                                                self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                self.cir.parent = self
                                                self._children_name_map["cir"] = "cir"
                                                self._children_yang_names.add("cir")

                                                self.config_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                self.config_bandwidth.parent = self
                                                self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                                self._children_yang_names.add("config-bandwidth")

                                                self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                self.cbs.parent = self
                                                self._children_name_map["cbs"] = "cbs"
                                                self._children_yang_names.add("cbs")
                                                self._segment_path = lambda: "cir-shape"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                            class Cir(Entity):
                                                """
                                                CIR in kbps
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, self).__init__()

                                                    self.yang_name = "cir"
                                                    self.yang_parent_name = "cir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "cir"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, ['value', 'unit'], name, value)


                                            class ConfigBandwidth(Entity):
                                                """
                                                Config bandwidth
                                                
                                                .. attribute:: minimum_rate
                                                
                                                	Minimum bandwidth rate
                                                	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth, self).__init__()

                                                    self.yang_name = "config-bandwidth"
                                                    self.yang_parent_name = "cir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict()

                                                    self.minimum_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                    self.minimum_rate.parent = self
                                                    self._children_name_map["minimum_rate"] = "minimum-rate"
                                                    self._children_yang_names.add("minimum-rate")
                                                    self._segment_path = lambda: "config-bandwidth"


                                                class MinimumRate(Entity):
                                                    """
                                                    Minimum bandwidth rate
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, self).__init__()

                                                        self.yang_name = "minimum-rate"
                                                        self.yang_parent_name = "config-bandwidth"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "minimum-rate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                            class Cbs(Entity):
                                                """
                                                CBS in bytes
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, self).__init__()

                                                    self.yang_name = "cbs"
                                                    self.yang_parent_name = "cir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "cbs"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, ['value', 'unit'], name, value)


                                        class PirShape(Entity):
                                            """
                                            PIR shaper params
                                            
                                            .. attribute:: pir
                                            
                                            	PIR in kbps
                                            	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                            
                                            .. attribute:: pbs
                                            
                                            	PBS in bytes
                                            	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                            
                                            .. attribute:: chunk_id
                                            
                                            	Shape Chunk ID
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: profile_id
                                            
                                            	Shape profile ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: scale_factor
                                            
                                            	Scale Factor
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, self).__init__()

                                                self.yang_name = "pir-shape"
                                                self.yang_parent_name = "shape"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                    ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                    ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                ])
                                                self.chunk_id = None
                                                self.profile_id = None
                                                self.scale_factor = None

                                                self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                self.pir.parent = self
                                                self._children_name_map["pir"] = "pir"
                                                self._children_yang_names.add("pir")

                                                self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                self.pbs.parent = self
                                                self._children_name_map["pbs"] = "pbs"
                                                self._children_yang_names.add("pbs")
                                                self._segment_path = lambda: "pir-shape"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                            class Pir(Entity):
                                                """
                                                PIR in kbps
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, self).__init__()

                                                    self.yang_name = "pir"
                                                    self.yang_parent_name = "pir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "pir"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, ['value', 'unit'], name, value)


                                            class Pbs(Entity):
                                                """
                                                PBS in bytes
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, self).__init__()

                                                    self.yang_name = "pbs"
                                                    self.yang_parent_name = "pir-shape"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "pbs"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, ['value', 'unit'], name, value)


                                    class Police(Entity):
                                        """
                                        Police parameters
                                        
                                        .. attribute:: cir
                                        
                                        	CIR
                                        	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                        
                                        .. attribute:: cbs
                                        
                                        	CBS
                                        	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                        
                                        .. attribute:: pir
                                        
                                        	PIR
                                        	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                        
                                        .. attribute:: pbs
                                        
                                        	PBS
                                        	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                        
                                        .. attribute:: police_config_parameters
                                        
                                        	Police config parameters
                                        	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                        
                                        .. attribute:: policer_type
                                        
                                        	Policer type
                                        	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	Police profile ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police, self).__init__()

                                            self.yang_name = "police"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                            ])
                                            self.policer_type = None
                                            self.profile_id = None

                                            self.cir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                            self.cir.parent = self
                                            self._children_name_map["cir"] = "cir"
                                            self._children_yang_names.add("cir")

                                            self.cbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                            self.cbs.parent = self
                                            self._children_name_map["cbs"] = "cbs"
                                            self._children_yang_names.add("cbs")

                                            self.pir = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                            self.pir.parent = self
                                            self._children_name_map["pir"] = "pir"
                                            self._children_yang_names.add("pir")

                                            self.pbs = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                            self.pbs.parent = self
                                            self._children_name_map["pbs"] = "pbs"
                                            self._children_yang_names.add("pbs")

                                            self.police_config_parameters = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                            self.police_config_parameters.parent = self
                                            self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                            self._children_yang_names.add("police-config-parameters")
                                            self._segment_path = lambda: "police"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police, ['policer_type', 'profile_id'], name, value)


                                        class Cir(Entity):
                                            """
                                            CIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, self).__init__()

                                                self.yang_name = "cir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, ['value', 'unit'], name, value)


                                        class Cbs(Entity):
                                            """
                                            CBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, self).__init__()

                                                self.yang_name = "cbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "cbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, ['value', 'unit'], name, value)


                                        class Pir(Entity):
                                            """
                                            PIR
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, self).__init__()

                                                self.yang_name = "pir"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pir"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, ['value', 'unit'], name, value)


                                        class Pbs(Entity):
                                            """
                                            PBS
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, self).__init__()

                                                self.yang_name = "pbs"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "pbs"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, ['value', 'unit'], name, value)


                                        class PoliceConfigParameters(Entity):
                                            """
                                            Police config parameters
                                            
                                            .. attribute:: average_rate
                                            
                                            	Average rate
                                            	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                            
                                            .. attribute:: peak_rate
                                            
                                            	Peak rate
                                            	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                            
                                            .. attribute:: conform_burst
                                            
                                            	Conform burst
                                            	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                            
                                            .. attribute:: exceed_burst
                                            
                                            	Exceed burst
                                            	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters, self).__init__()

                                                self.yang_name = "police-config-parameters"
                                                self.yang_parent_name = "police"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.average_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                self.average_rate.parent = self
                                                self._children_name_map["average_rate"] = "average-rate"
                                                self._children_yang_names.add("average-rate")

                                                self.peak_rate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                self.peak_rate.parent = self
                                                self._children_name_map["peak_rate"] = "peak-rate"
                                                self._children_yang_names.add("peak-rate")

                                                self.conform_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                self.conform_burst.parent = self
                                                self._children_name_map["conform_burst"] = "conform-burst"
                                                self._children_yang_names.add("conform-burst")

                                                self.exceed_burst = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                self.exceed_burst.parent = self
                                                self._children_name_map["exceed_burst"] = "exceed-burst"
                                                self._children_yang_names.add("exceed-burst")
                                                self._segment_path = lambda: "police-config-parameters"


                                            class AverageRate(Entity):
                                                """
                                                Average rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                    self.yang_name = "average-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "average-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                            class PeakRate(Entity):
                                                """
                                                Peak rate
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                    self.yang_name = "peak-rate"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "peak-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                            class ConformBurst(Entity):
                                                """
                                                Conform burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                    self.yang_name = "conform-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "conform-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                            class ExceedBurst(Entity):
                                                """
                                                Exceed burst
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                    self.yang_name = "exceed-burst"
                                                    self.yang_parent_name = "police-config-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "exceed-burst"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                    class Wfq(Entity):
                                        """
                                        WFQ parameters
                                        
                                        .. attribute:: parent_bandwidth
                                        
                                        	Parent bandwidth
                                        	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                        
                                        .. attribute:: bandwidth
                                        
                                        	CFG Bandwidth
                                        	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                        
                                        .. attribute:: profile_id
                                        
                                        	WFQ profile
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: committed_weight
                                        
                                        	Committed weight
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: excess_weight
                                        
                                        	Excess weight
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: excess_ratio
                                        
                                        	Parent Excess ratio
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: chunk_id
                                        
                                        	Chunk ID
                                        	**type**\: int
                                        
                                        	**range:** 0..4294967295
                                        
                                        .. attribute:: level
                                        
                                        	Level
                                        	**type**\: int
                                        
                                        	**range:** 0..255
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq, self).__init__()

                                            self.yang_name = "wfq"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                ('level', YLeaf(YType.uint8, 'level')),
                                            ])
                                            self.profile_id = None
                                            self.committed_weight = None
                                            self.excess_weight = None
                                            self.excess_ratio = None
                                            self.chunk_id = None
                                            self.level = None

                                            self.parent_bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                            self.parent_bandwidth.parent = self
                                            self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                            self._children_yang_names.add("parent-bandwidth")

                                            self.bandwidth = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                            self.bandwidth.parent = self
                                            self._children_name_map["bandwidth"] = "bandwidth"
                                            self._children_yang_names.add("bandwidth")
                                            self._segment_path = lambda: "wfq"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                        class ParentBandwidth(Entity):
                                            """
                                            Parent bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, self).__init__()

                                                self.yang_name = "parent-bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "parent-bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                        class Bandwidth(Entity):
                                            """
                                            CFG Bandwidth
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, self).__init__()

                                                self.yang_name = "bandwidth"
                                                self.yang_parent_name = "wfq"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                    class Wred(Entity):
                                        """
                                        WRED parameters
                                        
                                        .. attribute:: type
                                        
                                        	WRED type
                                        	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                        
                                        .. attribute:: curve_xr
                                        
                                        	Number of curves
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: curve
                                        
                                        	Curve details
                                        	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred, self).__init__()

                                            self.yang_name = "wred"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve))])
                                            self._leafs = OrderedDict([
                                                ('type', YLeaf(YType.enumeration, 'type')),
                                                ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                            ])
                                            self.type = None
                                            self.curve_xr = None

                                            self.curve = YList(self)
                                            self._segment_path = lambda: "wred"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred, ['type', 'curve_xr'], name, value)


                                        class Curve(Entity):
                                            """
                                            Curve details
                                            
                                            .. attribute:: min_threshold
                                            
                                            	Minimum threshold
                                            	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                            
                                            .. attribute:: min_threshold_user_config
                                            
                                            	Minimum threshold WRED context
                                            	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                            
                                            .. attribute:: max_threshold
                                            
                                            	Maximum threshold
                                            	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                            
                                            .. attribute:: max_threshold_user_config
                                            
                                            	Maximum threshold WRED context
                                            	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                            
                                            .. attribute:: absolute_index
                                            
                                            	Absolute Index
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: template_id
                                            
                                            	Template ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: curve_id
                                            
                                            	Curve ID
                                            	**type**\: int
                                            
                                            	**range:** 0..65535
                                            
                                            .. attribute:: match
                                            
                                            	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\: str
                                            
                                            .. attribute:: exp_match
                                            
                                            	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                            	**type**\: str
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, self).__init__()

                                                self.yang_name = "curve"
                                                self.yang_parent_name = "wred"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                    ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                    ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                                    ('match', YLeaf(YType.str, 'match')),
                                                    ('exp_match', YLeaf(YType.str, 'exp-match')),
                                                ])
                                                self.absolute_index = None
                                                self.template_id = None
                                                self.curve_id = None
                                                self.match = None
                                                self.exp_match = None

                                                self.min_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                self.min_threshold.parent = self
                                                self._children_name_map["min_threshold"] = "min-threshold"
                                                self._children_yang_names.add("min-threshold")

                                                self.min_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                self.min_threshold_user_config.parent = self
                                                self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                self._children_yang_names.add("min-threshold-user-config")

                                                self.max_threshold = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                self.max_threshold.parent = self
                                                self._children_name_map["max_threshold"] = "max-threshold"
                                                self._children_yang_names.add("max-threshold")

                                                self.max_threshold_user_config = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                self.max_threshold_user_config.parent = self
                                                self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                self._children_yang_names.add("max-threshold-user-config")
                                                self._segment_path = lambda: "curve"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, ['absolute_index', 'template_id', 'curve_id', 'match', 'exp_match'], name, value)


                                            class MinThreshold(Entity):
                                                """
                                                Minimum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, self).__init__()

                                                    self.yang_name = "min-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                            class MinThresholdUserConfig(Entity):
                                                """
                                                Minimum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                    self.yang_name = "min-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "min-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                            class MaxThreshold(Entity):
                                                """
                                                Maximum threshold
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, self).__init__()

                                                    self.yang_name = "max-threshold"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                            class MaxThresholdUserConfig(Entity):
                                                """
                                                Maximum threshold WRED context
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                    self.yang_name = "max-threshold-user-config"
                                                    self.yang_parent_name = "curve"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "max-threshold-user-config"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                    class Mark(Entity):
                                        """
                                        Mark parameters
                                        
                                        .. attribute:: child_mark
                                        
                                        	Child mark only
                                        	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                        
                                        .. attribute:: police_conform
                                        
                                        	Child police conform mark
                                        	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                        
                                        .. attribute:: police_exceed
                                        
                                        	Child police exceed mark
                                        	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                        
                                        .. attribute:: police_violate
                                        
                                        	Child police violate mark
                                        	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                        
                                        .. attribute:: parent_mark
                                        
                                        	Parent mark only
                                        	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                        
                                        .. attribute:: parent_police_conform
                                        
                                        	Parent police conform mark
                                        	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                        
                                        .. attribute:: parent_police_exceed
                                        
                                        	Parent police exceed mark
                                        	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                        
                                        .. attribute:: parent_police_violate
                                        
                                        	Parent police violate mark
                                        	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark, self).__init__()

                                            self.yang_name = "mark"
                                            self.yang_parent_name = "qos-show-ea-st-v2"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict()

                                            self.child_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                            self.child_mark.parent = self
                                            self._children_name_map["child_mark"] = "child-mark"
                                            self._children_yang_names.add("child-mark")

                                            self.police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                            self.police_conform.parent = self
                                            self._children_name_map["police_conform"] = "police-conform"
                                            self._children_yang_names.add("police-conform")

                                            self.police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                            self.police_exceed.parent = self
                                            self._children_name_map["police_exceed"] = "police-exceed"
                                            self._children_yang_names.add("police-exceed")

                                            self.police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                            self.police_violate.parent = self
                                            self._children_name_map["police_violate"] = "police-violate"
                                            self._children_yang_names.add("police-violate")

                                            self.parent_mark = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                            self.parent_mark.parent = self
                                            self._children_name_map["parent_mark"] = "parent-mark"
                                            self._children_yang_names.add("parent-mark")

                                            self.parent_police_conform = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                            self.parent_police_conform.parent = self
                                            self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                            self._children_yang_names.add("parent-police-conform")

                                            self.parent_police_exceed = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                            self.parent_police_exceed.parent = self
                                            self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                            self._children_yang_names.add("parent-police-exceed")

                                            self.parent_police_violate = PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                            self.parent_police_violate.parent = self
                                            self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                            self._children_yang_names.add("parent-police-violate")
                                            self._segment_path = lambda: "mark"


                                        class ChildMark(Entity):
                                            """
                                            Child mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, self).__init__()

                                                self.yang_name = "child-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "child-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "child-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceConform(Entity):
                                            """
                                            Child police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, self).__init__()

                                                self.yang_name = "police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceExceed(Entity):
                                            """
                                            Child police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, self).__init__()

                                                self.yang_name = "police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class PoliceViolate(Entity):
                                            """
                                            Child police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, self).__init__()

                                                self.yang_name = "police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentMark(Entity):
                                            """
                                            Parent mark only
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, self).__init__()

                                                self.yang_name = "parent-mark"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-mark"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-mark"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceConform(Entity):
                                            """
                                            Parent police conform mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, self).__init__()

                                                self.yang_name = "parent-police-conform"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-conform"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-conform"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceExceed(Entity):
                                            """
                                            Parent police exceed mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, self).__init__()

                                                self.yang_name = "parent-police-exceed"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-exceed"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-exceed"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                        class ParentPoliceViolate(Entity):
                                            """
                                            Parent police violate mark
                                            
                                            .. attribute:: action_type
                                            
                                            	Action type
                                            	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                            
                                            .. attribute:: mark_detail
                                            
                                            	Mark value
                                            	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, self).__init__()

                                                self.yang_name = "parent-police-violate"
                                                self.yang_parent_name = "mark"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail))])
                                                self._leafs = OrderedDict([
                                                    ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                ])
                                                self.action_type = None

                                                self.mark_detail = YList(self)
                                                self._segment_path = lambda: "parent-police-violate"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                            class MarkDetail(Entity):
                                                """
                                                Mark value
                                                
                                                .. attribute:: mark_value
                                                
                                                	Mark value
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: action_opcode
                                                
                                                	Action opcode
                                                	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                    self.yang_name = "mark-detail"
                                                    self.yang_parent_name = "parent-police-violate"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                        ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                    ])
                                                    self.mark_value = None
                                                    self.action_opcode = None
                                                    self._segment_path = lambda: "mark-detail"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.Interfaces.Interface.Output.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


            class BundleInterfaces(Entity):
                """
                QoS list of bundle interfaces
                
                .. attribute:: bundle_interface
                
                	QoS interface name
                	**type**\: list of  		 :py:class:`BundleInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface>`
                
                

                """

                _prefix = 'asr9k-qos-oper'
                _revision = '2015-11-09'

                def __init__(self):
                    super(PlatformQos.Nodes.Node.BundleInterfaces, self).__init__()

                    self.yang_name = "bundle-interfaces"
                    self.yang_parent_name = "node"
                    self.is_top_level_class = False
                    self.has_list_ancestor = True
                    self.ylist_key_names = []
                    self._child_container_classes = OrderedDict([])
                    self._child_list_classes = OrderedDict([("bundle-interface", ("bundle_interface", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface))])
                    self._leafs = OrderedDict()

                    self.bundle_interface = YList(self)
                    self._segment_path = lambda: "bundle-interfaces"

                def __setattr__(self, name, value):
                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces, [], name, value)


                class BundleInterface(Entity):
                    """
                    QoS interface name
                    
                    .. attribute:: interface_name  (key)
                    
                    	Bundle interface name
                    	**type**\: str
                    
                    	**pattern:** [a\-zA\-Z0\-9./\-]+
                    
                    .. attribute:: bundle_output
                    
                    	QoS policy direction output
                    	**type**\:  :py:class:`BundleOutput <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput>`
                    
                    .. attribute:: bundle_input
                    
                    	QoS policy direction output
                    	**type**\:  :py:class:`BundleInput <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput>`
                    
                    

                    """

                    _prefix = 'asr9k-qos-oper'
                    _revision = '2015-11-09'

                    def __init__(self):
                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface, self).__init__()

                        self.yang_name = "bundle-interface"
                        self.yang_parent_name = "bundle-interfaces"
                        self.is_top_level_class = False
                        self.has_list_ancestor = True
                        self.ylist_key_names = ['interface_name']
                        self._child_container_classes = OrderedDict([("bundle-output", ("bundle_output", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput)), ("bundle-input", ("bundle_input", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput))])
                        self._child_list_classes = OrderedDict([])
                        self._leafs = OrderedDict([
                            ('interface_name', YLeaf(YType.str, 'interface-name')),
                        ])
                        self.interface_name = None

                        self.bundle_output = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput()
                        self.bundle_output.parent = self
                        self._children_name_map["bundle_output"] = "bundle-output"
                        self._children_yang_names.add("bundle-output")

                        self.bundle_input = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput()
                        self.bundle_input.parent = self
                        self._children_name_map["bundle_input"] = "bundle-input"
                        self._children_yang_names.add("bundle-input")
                        self._segment_path = lambda: "bundle-interface" + "[interface-name='" + str(self.interface_name) + "']"

                    def __setattr__(self, name, value):
                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface, ['interface_name'], name, value)


                    class BundleOutput(Entity):
                        """
                        QoS policy direction output
                        
                        .. attribute:: member_interfaces
                        
                        	QoS list of member interfaces
                        	**type**\:  :py:class:`MemberInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput, self).__init__()

                            self.yang_name = "bundle-output"
                            self.yang_parent_name = "bundle-interface"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_container_classes = OrderedDict([("member-interfaces", ("member_interfaces", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces))])
                            self._child_list_classes = OrderedDict([])
                            self._leafs = OrderedDict()

                            self.member_interfaces = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces()
                            self.member_interfaces.parent = self
                            self._children_name_map["member_interfaces"] = "member-interfaces"
                            self._children_yang_names.add("member-interfaces")
                            self._segment_path = lambda: "bundle-output"


                        class MemberInterfaces(Entity):
                            """
                            QoS list of member interfaces
                            
                            .. attribute:: member_interface
                            
                            	QoS interface name
                            	**type**\: list of  		 :py:class:`MemberInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces, self).__init__()

                                self.yang_name = "member-interfaces"
                                self.yang_parent_name = "bundle-output"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_container_classes = OrderedDict([])
                                self._child_list_classes = OrderedDict([("member-interface", ("member_interface", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface))])
                                self._leafs = OrderedDict()

                                self.member_interface = YList(self)
                                self._segment_path = lambda: "member-interfaces"

                            def __setattr__(self, name, value):
                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces, [], name, value)


                            class MemberInterface(Entity):
                                """
                                QoS interface name
                                
                                .. attribute:: interface_name  (key)
                                
                                	Memeber interface
                                	**type**\: str
                                
                                	**pattern:** [a\-zA\-Z0\-9./\-]+
                                
                                .. attribute:: details
                                
                                	QoS policy direction egress
                                	**type**\:  :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface, self).__init__()

                                    self.yang_name = "member-interface"
                                    self.yang_parent_name = "member-interfaces"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['interface_name']
                                    self._child_container_classes = OrderedDict([("details", ("details", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details))])
                                    self._child_list_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('interface_name', YLeaf(YType.str, 'interface-name')),
                                    ])
                                    self.interface_name = None

                                    self.details = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details()
                                    self.details.parent = self
                                    self._children_name_map["details"] = "details"
                                    self._children_yang_names.add("details")
                                    self._segment_path = lambda: "member-interface" + "[interface-name='" + str(self.interface_name) + "']"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface, ['interface_name'], name, value)


                                class Details(Entity):
                                    """
                                    QoS policy direction egress
                                    
                                    .. attribute:: header
                                    
                                    	QoS policy header
                                    	**type**\:  :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header>`
                                    
                                    .. attribute:: policy
                                    
                                    	Trident QoS policy details
                                    	**type**\:  :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy>`
                                    
                                    .. attribute:: policy_typhoon
                                    
                                    	Typhoon QoS policy details
                                    	**type**\:  :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details, self).__init__()

                                        self.yang_name = "details"
                                        self.yang_parent_name = "member-interface"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("header", ("header", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header)), ("policy", ("policy", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy)), ("policy-typhoon", ("policy_typhoon", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict()

                                        self.header = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header()
                                        self.header.parent = self
                                        self._children_name_map["header"] = "header"
                                        self._children_yang_names.add("header")

                                        self.policy = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy()
                                        self.policy.parent = self
                                        self._children_name_map["policy"] = "policy"
                                        self._children_yang_names.add("policy")

                                        self.policy_typhoon = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon()
                                        self.policy_typhoon.parent = self
                                        self._children_name_map["policy_typhoon"] = "policy-typhoon"
                                        self._children_yang_names.add("policy-typhoon")
                                        self._segment_path = lambda: "details"


                                    class Header(Entity):
                                        """
                                        QoS policy header
                                        
                                        .. attribute:: interface_parameters
                                        
                                        	Interface config and programmed parameters
                                        	**type**\:  :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters>`
                                        
                                        .. attribute:: programmed_bandwidth
                                        
                                        	Bandwidth that was programmed
                                        	**type**\:  :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth>`
                                        
                                        .. attribute:: classes
                                        
                                        	Number of classes
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: policy_name
                                        
                                        	Policy name
                                        	**type**\: str
                                        
                                        	**length:** 0..65
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header, self).__init__()

                                            self.yang_name = "header"
                                            self.yang_parent_name = "details"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("interface-parameters", ("interface_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters)), ("programmed-bandwidth", ("programmed_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('classes', YLeaf(YType.uint16, 'classes')),
                                                ('policy_name', YLeaf(YType.str, 'policy-name')),
                                            ])
                                            self.classes = None
                                            self.policy_name = None

                                            self.interface_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters()
                                            self.interface_parameters.parent = self
                                            self._children_name_map["interface_parameters"] = "interface-parameters"
                                            self._children_yang_names.add("interface-parameters")

                                            self.programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth()
                                            self.programmed_bandwidth.parent = self
                                            self._children_name_map["programmed_bandwidth"] = "programmed-bandwidth"
                                            self._children_yang_names.add("programmed-bandwidth")
                                            self._segment_path = lambda: "header"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header, ['classes', 'policy_name'], name, value)


                                        class InterfaceParameters(Entity):
                                            """
                                            Interface config and programmed parameters
                                            
                                            .. attribute:: port_config_bandwidth
                                            
                                            	Bandwidth due to port speed change
                                            	**type**\:  :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                            
                                            .. attribute:: ancp_config_bandwidth
                                            
                                            	Bandwidth obtain from IM
                                            	**type**\:  :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                            
                                            .. attribute:: ancp_programmed_bandwidth
                                            
                                            	ANCP bandwidth that was programmed
                                            	**type**\:  :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                            
                                            .. attribute:: port_shaper_rate
                                            
                                            	Bandwidth that was programmed
                                            	**type**\:  :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters, self).__init__()

                                                self.yang_name = "interface-parameters"
                                                self.yang_parent_name = "header"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("port-config-bandwidth", ("port_config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth)), ("ancp-config-bandwidth", ("ancp_config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth)), ("ancp-programmed-bandwidth", ("ancp_programmed_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth)), ("port-shaper-rate", ("port_shaper_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.port_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                                self.port_config_bandwidth.parent = self
                                                self._children_name_map["port_config_bandwidth"] = "port-config-bandwidth"
                                                self._children_yang_names.add("port-config-bandwidth")

                                                self.ancp_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                                self.ancp_config_bandwidth.parent = self
                                                self._children_name_map["ancp_config_bandwidth"] = "ancp-config-bandwidth"
                                                self._children_yang_names.add("ancp-config-bandwidth")

                                                self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                                self.ancp_programmed_bandwidth.parent = self
                                                self._children_name_map["ancp_programmed_bandwidth"] = "ancp-programmed-bandwidth"
                                                self._children_yang_names.add("ancp-programmed-bandwidth")

                                                self.port_shaper_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate()
                                                self.port_shaper_rate.parent = self
                                                self._children_name_map["port_shaper_rate"] = "port-shaper-rate"
                                                self._children_yang_names.add("port-shaper-rate")
                                                self._segment_path = lambda: "interface-parameters"


                                            class PortConfigBandwidth(Entity):
                                                """
                                                Bandwidth due to port speed change
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth, self).__init__()

                                                    self.yang_name = "port-config-bandwidth"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "port-config-bandwidth"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth, ['value', 'unit'], name, value)


                                            class AncpConfigBandwidth(Entity):
                                                """
                                                Bandwidth obtain from IM
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth, self).__init__()

                                                    self.yang_name = "ancp-config-bandwidth"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "ancp-config-bandwidth"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth, ['value', 'unit'], name, value)


                                            class AncpProgrammedBandwidth(Entity):
                                                """
                                                ANCP bandwidth that was programmed
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, self).__init__()

                                                    self.yang_name = "ancp-programmed-bandwidth"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "ancp-programmed-bandwidth"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, ['value', 'unit'], name, value)


                                            class PortShaperRate(Entity):
                                                """
                                                Bandwidth that was programmed
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate, self).__init__()

                                                    self.yang_name = "port-shaper-rate"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "port-shaper-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate, ['value', 'unit'], name, value)


                                        class ProgrammedBandwidth(Entity):
                                            """
                                            Bandwidth that was programmed
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth, self).__init__()

                                                self.yang_name = "programmed-bandwidth"
                                                self.yang_parent_name = "header"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "programmed-bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth, ['value', 'unit'], name, value)


                                    class Policy(Entity):
                                        """
                                        Trident QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v1
                                        
                                        	qos show ea st v1
                                        	**type**\: list of  		 :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy, self).__init__()

                                            self.yang_name = "policy"
                                            self.yang_parent_name = "details"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("qos-show-ea-st-v1", ("qos_show_ea_st_v1", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1))])
                                            self._leafs = OrderedDict()

                                            self.qos_show_ea_st_v1 = YList(self)
                                            self._segment_path = lambda: "policy"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy, [], name, value)


                                        class QosShowEaStV1(Entity):
                                            """
                                            qos show ea st v1
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape>`
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred>`
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark>`
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\: int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1, self).__init__()

                                                self.yang_name = "qos-show-ea-st-v1"
                                                self.yang_parent_name = "policy"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape)), ("police", ("police", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('class_level', YLeaf(YType.uint8, 'class-level')),
                                                    ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ('policy_name', YLeaf(YType.str, 'policy-name')),
                                                    ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                                    ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                                ])
                                                self.class_level = None
                                                self.class_name = None
                                                self.policy_name = None
                                                self.parent_policy_name = None
                                                self.parent_class_name = None

                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue()
                                                self.queue.parent = self
                                                self._children_name_map["queue"] = "queue"
                                                self._children_yang_names.add("queue")

                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                                self._children_yang_names.add("queue-limit-parameters")

                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape()
                                                self.shape.parent = self
                                                self._children_name_map["shape"] = "shape"
                                                self._children_yang_names.add("shape")

                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police()
                                                self.police.parent = self
                                                self._children_name_map["police"] = "police"
                                                self._children_yang_names.add("police")

                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq()
                                                self.wfq.parent = self
                                                self._children_name_map["wfq"] = "wfq"
                                                self._children_yang_names.add("wfq")

                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred()
                                                self.wred.parent = self
                                                self._children_name_map["wred"] = "wred"
                                                self._children_yang_names.add("wred")

                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark()
                                                self.mark.parent = self
                                                self._children_name_map["mark"] = "mark"
                                                self._children_yang_names.add("mark")
                                                self._segment_path = lambda: "qos-show-ea-st-v1"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                            class Queue(Entity):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\: str
                                                
                                                	**length:** 0..65
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue, self).__init__()

                                                    self.yang_name = "queue"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                        ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                        ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ])
                                                    self.queue_id = None
                                                    self.queue_type = None
                                                    self.class_name = None
                                                    self._segment_path = lambda: "queue"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                            class QueueLimitParameters(Entity):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters, self).__init__()

                                                    self.yang_name = "queue-limit-parameters"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                                    ])
                                                    self.profile_id = None
                                                    self.scaling_profile_id = None

                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self._children_name_map["queue_limit"] = "queue-limit"
                                                    self._children_yang_names.add("queue-limit")

                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                                    self._children_yang_names.add("config-queue-limit")
                                                    self._segment_path = lambda: "queue-limit-parameters"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters, ['profile_id', 'scaling_profile_id'], name, value)


                                                class QueueLimit(Entity):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, self).__init__()

                                                        self.yang_name = "queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                                class ConfigQueueLimit(Entity):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                        self.yang_name = "config-queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "config-queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                            class Shape(Entity):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cir
                                                
                                                	CIR in kbps
                                                	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                                
                                                .. attribute:: config_bandwidth
                                                
                                                	Config bandwidth
                                                	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS in bytes
                                                	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR in kbps
                                                	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS in bytes
                                                	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Shape profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape, self).__init__()

                                                    self.yang_name = "shape"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                    ])
                                                    self.profile_id = None

                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir()
                                                    self.cir.parent = self
                                                    self._children_name_map["cir"] = "cir"
                                                    self._children_yang_names.add("cir")

                                                    self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                                    self.config_bandwidth.parent = self
                                                    self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                                    self._children_yang_names.add("config-bandwidth")

                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                                    self.cbs.parent = self
                                                    self._children_name_map["cbs"] = "cbs"
                                                    self._children_yang_names.add("cbs")

                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir()
                                                    self.pir.parent = self
                                                    self._children_name_map["pir"] = "pir"
                                                    self._children_yang_names.add("pir")

                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                                    self.pbs.parent = self
                                                    self._children_name_map["pbs"] = "pbs"
                                                    self._children_yang_names.add("pbs")
                                                    self._segment_path = lambda: "shape"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape, ['profile_id'], name, value)


                                                class Cir(Entity):
                                                    """
                                                    CIR in kbps
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir, self).__init__()

                                                        self.yang_name = "cir"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir, ['value', 'unit'], name, value)


                                                class ConfigBandwidth(Entity):
                                                    """
                                                    Config bandwidth
                                                    
                                                    .. attribute:: minimum_rate
                                                    
                                                    	Minimum bandwidth rate
                                                    	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth, self).__init__()

                                                        self.yang_name = "config-bandwidth"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict()

                                                        self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                        self.minimum_rate.parent = self
                                                        self._children_name_map["minimum_rate"] = "minimum-rate"
                                                        self._children_yang_names.add("minimum-rate")
                                                        self._segment_path = lambda: "config-bandwidth"


                                                    class MinimumRate(Entity):
                                                        """
                                                        Minimum bandwidth rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, self).__init__()

                                                            self.yang_name = "minimum-rate"
                                                            self.yang_parent_name = "config-bandwidth"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "minimum-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                                class Cbs(Entity):
                                                    """
                                                    CBS in bytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs, self).__init__()

                                                        self.yang_name = "cbs"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs, ['value', 'unit'], name, value)


                                                class Pir(Entity):
                                                    """
                                                    PIR in kbps
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir, self).__init__()

                                                        self.yang_name = "pir"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir, ['value', 'unit'], name, value)


                                                class Pbs(Entity):
                                                    """
                                                    PBS in bytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs, self).__init__()

                                                        self.yang_name = "pbs"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs, ['value', 'unit'], name, value)


                                            class Police(Entity):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir>`
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police, self).__init__()

                                                    self.yang_name = "police"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                    ])
                                                    self.policer_type = None
                                                    self.profile_id = None

                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir()
                                                    self.cir.parent = self
                                                    self._children_name_map["cir"] = "cir"
                                                    self._children_yang_names.add("cir")

                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self._children_name_map["cbs"] = "cbs"
                                                    self._children_yang_names.add("cbs")

                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir()
                                                    self.pir.parent = self
                                                    self._children_name_map["pir"] = "pir"
                                                    self._children_yang_names.add("pir")

                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self._children_name_map["pbs"] = "pbs"
                                                    self._children_yang_names.add("pbs")

                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                                    self._children_yang_names.add("police-config-parameters")
                                                    self._segment_path = lambda: "police"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police, ['policer_type', 'profile_id'], name, value)


                                                class Cir(Entity):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir, self).__init__()

                                                        self.yang_name = "cir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir, ['value', 'unit'], name, value)


                                                class Cbs(Entity):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs, self).__init__()

                                                        self.yang_name = "cbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs, ['value', 'unit'], name, value)


                                                class Pir(Entity):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir, self).__init__()

                                                        self.yang_name = "pir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir, ['value', 'unit'], name, value)


                                                class Pbs(Entity):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs, self).__init__()

                                                        self.yang_name = "pbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs, ['value', 'unit'], name, value)


                                                class PoliceConfigParameters(Entity):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters, self).__init__()

                                                        self.yang_name = "police-config-parameters"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict()

                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self._children_name_map["average_rate"] = "average-rate"
                                                        self._children_yang_names.add("average-rate")

                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self
                                                        self._children_name_map["peak_rate"] = "peak-rate"
                                                        self._children_yang_names.add("peak-rate")

                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self._children_name_map["conform_burst"] = "conform-burst"
                                                        self._children_yang_names.add("conform-burst")

                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self._children_name_map["exceed_burst"] = "exceed-burst"
                                                        self._children_yang_names.add("exceed-burst")
                                                        self._segment_path = lambda: "police-config-parameters"


                                                    class AverageRate(Entity):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                            self.yang_name = "average-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "average-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                                    class PeakRate(Entity):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                            self.yang_name = "peak-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "peak-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                                    class ConformBurst(Entity):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                            self.yang_name = "conform-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "conform-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                                    class ExceedBurst(Entity):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                            self.yang_name = "exceed-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "exceed-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                            class Wfq(Entity):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq, self).__init__()

                                                    self.yang_name = "wfq"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                        ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                        ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                        ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                        ('level', YLeaf(YType.uint8, 'level')),
                                                    ])
                                                    self.profile_id = None
                                                    self.committed_weight = None
                                                    self.excess_weight = None
                                                    self.excess_ratio = None
                                                    self.chunk_id = None
                                                    self.level = None

                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                                    self._children_yang_names.add("parent-bandwidth")

                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self._children_name_map["bandwidth"] = "bandwidth"
                                                    self._children_yang_names.add("bandwidth")
                                                    self._segment_path = lambda: "wfq"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                                class ParentBandwidth(Entity):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, self).__init__()

                                                        self.yang_name = "parent-bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "parent-bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                                class Bandwidth(Entity):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, self).__init__()

                                                        self.yang_name = "bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                            class Wred(Entity):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: table_id
                                                
                                                	Table ID
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred, self).__init__()

                                                    self.yang_name = "wred"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve))])
                                                    self._leafs = OrderedDict([
                                                        ('type', YLeaf(YType.enumeration, 'type')),
                                                        ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                                        ('table_id', YLeaf(YType.uint8, 'table-id')),
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                                    ])
                                                    self.type = None
                                                    self.curve_xr = None
                                                    self.table_id = None
                                                    self.profile_id = None
                                                    self.scaling_profile_id = None

                                                    self.curve = YList(self)
                                                    self._segment_path = lambda: "wred"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred, ['type', 'curve_xr', 'table_id', 'profile_id', 'scaling_profile_id'], name, value)


                                                class Curve(Entity):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\: str
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve, self).__init__()

                                                        self.yang_name = "curve"
                                                        self.yang_parent_name = "wred"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('match', YLeaf(YType.str, 'match')),
                                                        ])
                                                        self.match = None

                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self._children_name_map["min_threshold"] = "min-threshold"
                                                        self._children_yang_names.add("min-threshold")

                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self
                                                        self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                        self._children_yang_names.add("min-threshold-user-config")

                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self._children_name_map["max_threshold"] = "max-threshold"
                                                        self._children_yang_names.add("max-threshold")

                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                        self._children_yang_names.add("max-threshold-user-config")
                                                        self._segment_path = lambda: "curve"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve, ['match'], name, value)


                                                    class MinThreshold(Entity):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, self).__init__()

                                                            self.yang_name = "min-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                                    class MinThresholdUserConfig(Entity):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                            self.yang_name = "min-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                                    class MaxThreshold(Entity):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, self).__init__()

                                                            self.yang_name = "max-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                                    class MaxThresholdUserConfig(Entity):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                            self.yang_name = "max-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                            class Mark(Entity):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark, self).__init__()

                                                    self.yang_name = "mark"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict()

                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self._children_name_map["child_mark"] = "child-mark"
                                                    self._children_yang_names.add("child-mark")

                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self._children_name_map["police_conform"] = "police-conform"
                                                    self._children_yang_names.add("police-conform")

                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self._children_name_map["police_exceed"] = "police-exceed"
                                                    self._children_yang_names.add("police-exceed")

                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                                    self.police_violate.parent = self
                                                    self._children_name_map["police_violate"] = "police-violate"
                                                    self._children_yang_names.add("police-violate")

                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self._children_name_map["parent_mark"] = "parent-mark"
                                                    self._children_yang_names.add("parent-mark")

                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                                    self._children_yang_names.add("parent-police-conform")

                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                                    self._children_yang_names.add("parent-police-exceed")

                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                                    self._children_yang_names.add("parent-police-violate")
                                                    self._segment_path = lambda: "mark"


                                                class ChildMark(Entity):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark, self).__init__()

                                                        self.yang_name = "child-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "child-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "child-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceConform(Entity):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform, self).__init__()

                                                        self.yang_name = "police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceExceed(Entity):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, self).__init__()

                                                        self.yang_name = "police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceViolate(Entity):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, self).__init__()

                                                        self.yang_name = "police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentMark(Entity):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark, self).__init__()

                                                        self.yang_name = "parent-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceConform(Entity):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, self).__init__()

                                                        self.yang_name = "parent-police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceExceed(Entity):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, self).__init__()

                                                        self.yang_name = "parent-police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceViolate(Entity):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, self).__init__()

                                                        self.yang_name = "parent-police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                    class PolicyTyphoon(Entity):
                                        """
                                        Typhoon QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v2
                                        
                                        	qos show ea st v2
                                        	**type**\: list of  		 :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon, self).__init__()

                                            self.yang_name = "policy-typhoon"
                                            self.yang_parent_name = "details"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("qos-show-ea-st-v2", ("qos_show_ea_st_v2", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2))])
                                            self._leafs = OrderedDict()

                                            self.qos_show_ea_st_v2 = YList(self)
                                            self._segment_path = lambda: "policy-typhoon"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon, [], name, value)


                                        class QosShowEaStV2(Entity):
                                            """
                                            qos show ea st v2
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\: int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2, self).__init__()

                                                self.yang_name = "qos-show-ea-st-v2"
                                                self.yang_parent_name = "policy-typhoon"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape)), ("police", ("police", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('class_level', YLeaf(YType.uint8, 'class-level')),
                                                    ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ('policy_name', YLeaf(YType.str, 'policy-name')),
                                                    ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                                    ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                                ])
                                                self.class_level = None
                                                self.class_name = None
                                                self.policy_name = None
                                                self.parent_policy_name = None
                                                self.parent_class_name = None

                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                                self.queue.parent = self
                                                self._children_name_map["queue"] = "queue"
                                                self._children_yang_names.add("queue")

                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                                self._children_yang_names.add("queue-limit-parameters")

                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                                self.shape.parent = self
                                                self._children_name_map["shape"] = "shape"
                                                self._children_yang_names.add("shape")

                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                                self.police.parent = self
                                                self._children_name_map["police"] = "police"
                                                self._children_yang_names.add("police")

                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                                self.wfq.parent = self
                                                self._children_name_map["wfq"] = "wfq"
                                                self._children_yang_names.add("wfq")

                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                                self.wred.parent = self
                                                self._children_name_map["wred"] = "wred"
                                                self._children_yang_names.add("wred")

                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                                self.mark.parent = self
                                                self._children_name_map["mark"] = "mark"
                                                self._children_yang_names.add("mark")
                                                self._segment_path = lambda: "qos-show-ea-st-v2"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                            class Queue(Entity):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\: str
                                                
                                                	**length:** 0..65
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue, self).__init__()

                                                    self.yang_name = "queue"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                        ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                        ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ])
                                                    self.queue_id = None
                                                    self.queue_type = None
                                                    self.class_name = None
                                                    self._segment_path = lambda: "queue"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                            class QueueLimitParameters(Entity):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: absolute_index
                                                
                                                	Absolute Index
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: template_id
                                                
                                                	Template ID
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: curve_id
                                                
                                                	Curve ID
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, self).__init__()

                                                    self.yang_name = "queue-limit-parameters"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                        ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                        ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                                    ])
                                                    self.absolute_index = None
                                                    self.template_id = None
                                                    self.curve_id = None

                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self._children_name_map["queue_limit"] = "queue-limit"
                                                    self._children_yang_names.add("queue-limit")

                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                                    self._children_yang_names.add("config-queue-limit")
                                                    self._segment_path = lambda: "queue-limit-parameters"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, ['absolute_index', 'template_id', 'curve_id'], name, value)


                                                class QueueLimit(Entity):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, self).__init__()

                                                        self.yang_name = "queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                                class ConfigQueueLimit(Entity):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                        self.yang_name = "config-queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "config-queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                            class Shape(Entity):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cir_shape
                                                
                                                	CIR shaper params
                                                	**type**\:  :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                                
                                                .. attribute:: pir_shape
                                                
                                                	PIR shaper params
                                                	**type**\:  :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                                
                                                .. attribute:: cir_shape_type
                                                
                                                	CIR Shaper type
                                                	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                                
                                                .. attribute:: pir_shape_type
                                                
                                                	PIR Shaper type
                                                	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape, self).__init__()

                                                    self.yang_name = "shape"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir-shape", ("cir_shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape)), ("pir-shape", ("pir_shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('cir_shape_type', YLeaf(YType.enumeration, 'cir-shape-type')),
                                                        ('pir_shape_type', YLeaf(YType.enumeration, 'pir-shape-type')),
                                                    ])
                                                    self.cir_shape_type = None
                                                    self.pir_shape_type = None

                                                    self.cir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                                    self.cir_shape.parent = self
                                                    self._children_name_map["cir_shape"] = "cir-shape"
                                                    self._children_yang_names.add("cir-shape")

                                                    self.pir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                                    self.pir_shape.parent = self
                                                    self._children_name_map["pir_shape"] = "pir-shape"
                                                    self._children_yang_names.add("pir-shape")
                                                    self._segment_path = lambda: "shape"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape, ['cir_shape_type', 'pir_shape_type'], name, value)


                                                class CirShape(Entity):
                                                    """
                                                    CIR shaper params
                                                    
                                                    .. attribute:: cir
                                                    
                                                    	CIR in kbps
                                                    	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                                    
                                                    .. attribute:: config_bandwidth
                                                    
                                                    	Config bandwidth
                                                    	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                                    
                                                    .. attribute:: cbs
                                                    
                                                    	CBS in bytes
                                                    	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, self).__init__()

                                                        self.yang_name = "cir-shape"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                            ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                            ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                        ])
                                                        self.chunk_id = None
                                                        self.profile_id = None
                                                        self.scale_factor = None

                                                        self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                        self.cir.parent = self
                                                        self._children_name_map["cir"] = "cir"
                                                        self._children_yang_names.add("cir")

                                                        self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                        self.config_bandwidth.parent = self
                                                        self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                                        self._children_yang_names.add("config-bandwidth")

                                                        self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                        self.cbs.parent = self
                                                        self._children_name_map["cbs"] = "cbs"
                                                        self._children_yang_names.add("cbs")
                                                        self._segment_path = lambda: "cir-shape"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                                    class Cir(Entity):
                                                        """
                                                        CIR in kbps
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, self).__init__()

                                                            self.yang_name = "cir"
                                                            self.yang_parent_name = "cir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "cir"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, ['value', 'unit'], name, value)


                                                    class ConfigBandwidth(Entity):
                                                        """
                                                        Config bandwidth
                                                        
                                                        .. attribute:: minimum_rate
                                                        
                                                        	Minimum bandwidth rate
                                                        	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth, self).__init__()

                                                            self.yang_name = "config-bandwidth"
                                                            self.yang_parent_name = "cir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate))])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict()

                                                            self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                            self.minimum_rate.parent = self
                                                            self._children_name_map["minimum_rate"] = "minimum-rate"
                                                            self._children_yang_names.add("minimum-rate")
                                                            self._segment_path = lambda: "config-bandwidth"


                                                        class MinimumRate(Entity):
                                                            """
                                                            Minimum bandwidth rate
                                                            
                                                            .. attribute:: value
                                                            
                                                            	Config value
                                                            	**type**\: int
                                                            
                                                            	**range:** 0..4294967295
                                                            
                                                            .. attribute:: unit
                                                            
                                                            	Config unit
                                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                            
                                                            

                                                            """

                                                            _prefix = 'asr9k-qos-oper'
                                                            _revision = '2015-11-09'

                                                            def __init__(self):
                                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, self).__init__()

                                                                self.yang_name = "minimum-rate"
                                                                self.yang_parent_name = "config-bandwidth"
                                                                self.is_top_level_class = False
                                                                self.has_list_ancestor = True
                                                                self.ylist_key_names = []
                                                                self._child_container_classes = OrderedDict([])
                                                                self._child_list_classes = OrderedDict([])
                                                                self._leafs = OrderedDict([
                                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                                ])
                                                                self.value = None
                                                                self.unit = None
                                                                self._segment_path = lambda: "minimum-rate"

                                                            def __setattr__(self, name, value):
                                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                                    class Cbs(Entity):
                                                        """
                                                        CBS in bytes
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, self).__init__()

                                                            self.yang_name = "cbs"
                                                            self.yang_parent_name = "cir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "cbs"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, ['value', 'unit'], name, value)


                                                class PirShape(Entity):
                                                    """
                                                    PIR shaper params
                                                    
                                                    .. attribute:: pir
                                                    
                                                    	PIR in kbps
                                                    	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                                    
                                                    .. attribute:: pbs
                                                    
                                                    	PBS in bytes
                                                    	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, self).__init__()

                                                        self.yang_name = "pir-shape"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                            ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                            ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                        ])
                                                        self.chunk_id = None
                                                        self.profile_id = None
                                                        self.scale_factor = None

                                                        self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                        self.pir.parent = self
                                                        self._children_name_map["pir"] = "pir"
                                                        self._children_yang_names.add("pir")

                                                        self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                        self.pbs.parent = self
                                                        self._children_name_map["pbs"] = "pbs"
                                                        self._children_yang_names.add("pbs")
                                                        self._segment_path = lambda: "pir-shape"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                                    class Pir(Entity):
                                                        """
                                                        PIR in kbps
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, self).__init__()

                                                            self.yang_name = "pir"
                                                            self.yang_parent_name = "pir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "pir"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, ['value', 'unit'], name, value)


                                                    class Pbs(Entity):
                                                        """
                                                        PBS in bytes
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, self).__init__()

                                                            self.yang_name = "pbs"
                                                            self.yang_parent_name = "pir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "pbs"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, ['value', 'unit'], name, value)


                                            class Police(Entity):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police, self).__init__()

                                                    self.yang_name = "police"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                    ])
                                                    self.policer_type = None
                                                    self.profile_id = None

                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                                    self.cir.parent = self
                                                    self._children_name_map["cir"] = "cir"
                                                    self._children_yang_names.add("cir")

                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self._children_name_map["cbs"] = "cbs"
                                                    self._children_yang_names.add("cbs")

                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                                    self.pir.parent = self
                                                    self._children_name_map["pir"] = "pir"
                                                    self._children_yang_names.add("pir")

                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self._children_name_map["pbs"] = "pbs"
                                                    self._children_yang_names.add("pbs")

                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                                    self._children_yang_names.add("police-config-parameters")
                                                    self._segment_path = lambda: "police"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police, ['policer_type', 'profile_id'], name, value)


                                                class Cir(Entity):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, self).__init__()

                                                        self.yang_name = "cir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, ['value', 'unit'], name, value)


                                                class Cbs(Entity):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, self).__init__()

                                                        self.yang_name = "cbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, ['value', 'unit'], name, value)


                                                class Pir(Entity):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, self).__init__()

                                                        self.yang_name = "pir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, ['value', 'unit'], name, value)


                                                class Pbs(Entity):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, self).__init__()

                                                        self.yang_name = "pbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, ['value', 'unit'], name, value)


                                                class PoliceConfigParameters(Entity):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters, self).__init__()

                                                        self.yang_name = "police-config-parameters"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict()

                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self._children_name_map["average_rate"] = "average-rate"
                                                        self._children_yang_names.add("average-rate")

                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self
                                                        self._children_name_map["peak_rate"] = "peak-rate"
                                                        self._children_yang_names.add("peak-rate")

                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self._children_name_map["conform_burst"] = "conform-burst"
                                                        self._children_yang_names.add("conform-burst")

                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self._children_name_map["exceed_burst"] = "exceed-burst"
                                                        self._children_yang_names.add("exceed-burst")
                                                        self._segment_path = lambda: "police-config-parameters"


                                                    class AverageRate(Entity):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                            self.yang_name = "average-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "average-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                                    class PeakRate(Entity):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                            self.yang_name = "peak-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "peak-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                                    class ConformBurst(Entity):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                            self.yang_name = "conform-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "conform-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                                    class ExceedBurst(Entity):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                            self.yang_name = "exceed-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "exceed-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                            class Wfq(Entity):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq, self).__init__()

                                                    self.yang_name = "wfq"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                        ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                        ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                        ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                        ('level', YLeaf(YType.uint8, 'level')),
                                                    ])
                                                    self.profile_id = None
                                                    self.committed_weight = None
                                                    self.excess_weight = None
                                                    self.excess_ratio = None
                                                    self.chunk_id = None
                                                    self.level = None

                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                                    self._children_yang_names.add("parent-bandwidth")

                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self._children_name_map["bandwidth"] = "bandwidth"
                                                    self._children_yang_names.add("bandwidth")
                                                    self._segment_path = lambda: "wfq"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                                class ParentBandwidth(Entity):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, self).__init__()

                                                        self.yang_name = "parent-bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "parent-bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                                class Bandwidth(Entity):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, self).__init__()

                                                        self.yang_name = "bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                            class Wred(Entity):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred, self).__init__()

                                                    self.yang_name = "wred"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve))])
                                                    self._leafs = OrderedDict([
                                                        ('type', YLeaf(YType.enumeration, 'type')),
                                                        ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                                    ])
                                                    self.type = None
                                                    self.curve_xr = None

                                                    self.curve = YList(self)
                                                    self._segment_path = lambda: "wred"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred, ['type', 'curve_xr'], name, value)


                                                class Curve(Entity):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: absolute_index
                                                    
                                                    	Absolute Index
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: template_id
                                                    
                                                    	Template ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: curve_id
                                                    
                                                    	Curve ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\: str
                                                    
                                                    .. attribute:: exp_match
                                                    
                                                    	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\: str
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, self).__init__()

                                                        self.yang_name = "curve"
                                                        self.yang_parent_name = "wred"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                            ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                            ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                                            ('match', YLeaf(YType.str, 'match')),
                                                            ('exp_match', YLeaf(YType.str, 'exp-match')),
                                                        ])
                                                        self.absolute_index = None
                                                        self.template_id = None
                                                        self.curve_id = None
                                                        self.match = None
                                                        self.exp_match = None

                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self._children_name_map["min_threshold"] = "min-threshold"
                                                        self._children_yang_names.add("min-threshold")

                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self
                                                        self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                        self._children_yang_names.add("min-threshold-user-config")

                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self._children_name_map["max_threshold"] = "max-threshold"
                                                        self._children_yang_names.add("max-threshold")

                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                        self._children_yang_names.add("max-threshold-user-config")
                                                        self._segment_path = lambda: "curve"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, ['absolute_index', 'template_id', 'curve_id', 'match', 'exp_match'], name, value)


                                                    class MinThreshold(Entity):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, self).__init__()

                                                            self.yang_name = "min-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                                    class MinThresholdUserConfig(Entity):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                            self.yang_name = "min-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                                    class MaxThreshold(Entity):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, self).__init__()

                                                            self.yang_name = "max-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                                    class MaxThresholdUserConfig(Entity):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                            self.yang_name = "max-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                            class Mark(Entity):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark, self).__init__()

                                                    self.yang_name = "mark"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict()

                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self._children_name_map["child_mark"] = "child-mark"
                                                    self._children_yang_names.add("child-mark")

                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self._children_name_map["police_conform"] = "police-conform"
                                                    self._children_yang_names.add("police-conform")

                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self._children_name_map["police_exceed"] = "police-exceed"
                                                    self._children_yang_names.add("police-exceed")

                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                                    self.police_violate.parent = self
                                                    self._children_name_map["police_violate"] = "police-violate"
                                                    self._children_yang_names.add("police-violate")

                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self._children_name_map["parent_mark"] = "parent-mark"
                                                    self._children_yang_names.add("parent-mark")

                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                                    self._children_yang_names.add("parent-police-conform")

                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                                    self._children_yang_names.add("parent-police-exceed")

                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                                    self._children_yang_names.add("parent-police-violate")
                                                    self._segment_path = lambda: "mark"


                                                class ChildMark(Entity):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, self).__init__()

                                                        self.yang_name = "child-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "child-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "child-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceConform(Entity):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, self).__init__()

                                                        self.yang_name = "police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceExceed(Entity):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, self).__init__()

                                                        self.yang_name = "police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceViolate(Entity):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, self).__init__()

                                                        self.yang_name = "police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentMark(Entity):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, self).__init__()

                                                        self.yang_name = "parent-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceConform(Entity):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, self).__init__()

                                                        self.yang_name = "parent-police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceExceed(Entity):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, self).__init__()

                                                        self.yang_name = "parent-police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceViolate(Entity):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, self).__init__()

                                                        self.yang_name = "parent-police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleOutput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                    class BundleInput(Entity):
                        """
                        QoS policy direction output
                        
                        .. attribute:: member_interfaces
                        
                        	QoS list of member interfaces
                        	**type**\:  :py:class:`MemberInterfaces <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces>`
                        
                        

                        """

                        _prefix = 'asr9k-qos-oper'
                        _revision = '2015-11-09'

                        def __init__(self):
                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput, self).__init__()

                            self.yang_name = "bundle-input"
                            self.yang_parent_name = "bundle-interface"
                            self.is_top_level_class = False
                            self.has_list_ancestor = True
                            self.ylist_key_names = []
                            self._child_container_classes = OrderedDict([("member-interfaces", ("member_interfaces", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces))])
                            self._child_list_classes = OrderedDict([])
                            self._leafs = OrderedDict()

                            self.member_interfaces = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces()
                            self.member_interfaces.parent = self
                            self._children_name_map["member_interfaces"] = "member-interfaces"
                            self._children_yang_names.add("member-interfaces")
                            self._segment_path = lambda: "bundle-input"


                        class MemberInterfaces(Entity):
                            """
                            QoS list of member interfaces
                            
                            .. attribute:: member_interface
                            
                            	QoS interface name
                            	**type**\: list of  		 :py:class:`MemberInterface <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface>`
                            
                            

                            """

                            _prefix = 'asr9k-qos-oper'
                            _revision = '2015-11-09'

                            def __init__(self):
                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces, self).__init__()

                                self.yang_name = "member-interfaces"
                                self.yang_parent_name = "bundle-input"
                                self.is_top_level_class = False
                                self.has_list_ancestor = True
                                self.ylist_key_names = []
                                self._child_container_classes = OrderedDict([])
                                self._child_list_classes = OrderedDict([("member-interface", ("member_interface", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface))])
                                self._leafs = OrderedDict()

                                self.member_interface = YList(self)
                                self._segment_path = lambda: "member-interfaces"

                            def __setattr__(self, name, value):
                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces, [], name, value)


                            class MemberInterface(Entity):
                                """
                                QoS interface name
                                
                                .. attribute:: interface_name  (key)
                                
                                	Memeber interface
                                	**type**\: str
                                
                                	**pattern:** [a\-zA\-Z0\-9./\-]+
                                
                                .. attribute:: details
                                
                                	QoS policy direction egress
                                	**type**\:  :py:class:`Details <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details>`
                                
                                

                                """

                                _prefix = 'asr9k-qos-oper'
                                _revision = '2015-11-09'

                                def __init__(self):
                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface, self).__init__()

                                    self.yang_name = "member-interface"
                                    self.yang_parent_name = "member-interfaces"
                                    self.is_top_level_class = False
                                    self.has_list_ancestor = True
                                    self.ylist_key_names = ['interface_name']
                                    self._child_container_classes = OrderedDict([("details", ("details", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details))])
                                    self._child_list_classes = OrderedDict([])
                                    self._leafs = OrderedDict([
                                        ('interface_name', YLeaf(YType.str, 'interface-name')),
                                    ])
                                    self.interface_name = None

                                    self.details = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details()
                                    self.details.parent = self
                                    self._children_name_map["details"] = "details"
                                    self._children_yang_names.add("details")
                                    self._segment_path = lambda: "member-interface" + "[interface-name='" + str(self.interface_name) + "']"

                                def __setattr__(self, name, value):
                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface, ['interface_name'], name, value)


                                class Details(Entity):
                                    """
                                    QoS policy direction egress
                                    
                                    .. attribute:: header
                                    
                                    	QoS policy header
                                    	**type**\:  :py:class:`Header <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header>`
                                    
                                    .. attribute:: policy
                                    
                                    	Trident QoS policy details
                                    	**type**\:  :py:class:`Policy <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy>`
                                    
                                    .. attribute:: policy_typhoon
                                    
                                    	Typhoon QoS policy details
                                    	**type**\:  :py:class:`PolicyTyphoon <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon>`
                                    
                                    

                                    """

                                    _prefix = 'asr9k-qos-oper'
                                    _revision = '2015-11-09'

                                    def __init__(self):
                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details, self).__init__()

                                        self.yang_name = "details"
                                        self.yang_parent_name = "member-interface"
                                        self.is_top_level_class = False
                                        self.has_list_ancestor = True
                                        self.ylist_key_names = []
                                        self._child_container_classes = OrderedDict([("header", ("header", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header)), ("policy", ("policy", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy)), ("policy-typhoon", ("policy_typhoon", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon))])
                                        self._child_list_classes = OrderedDict([])
                                        self._leafs = OrderedDict()

                                        self.header = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header()
                                        self.header.parent = self
                                        self._children_name_map["header"] = "header"
                                        self._children_yang_names.add("header")

                                        self.policy = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy()
                                        self.policy.parent = self
                                        self._children_name_map["policy"] = "policy"
                                        self._children_yang_names.add("policy")

                                        self.policy_typhoon = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon()
                                        self.policy_typhoon.parent = self
                                        self._children_name_map["policy_typhoon"] = "policy-typhoon"
                                        self._children_yang_names.add("policy-typhoon")
                                        self._segment_path = lambda: "details"


                                    class Header(Entity):
                                        """
                                        QoS policy header
                                        
                                        .. attribute:: interface_parameters
                                        
                                        	Interface config and programmed parameters
                                        	**type**\:  :py:class:`InterfaceParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters>`
                                        
                                        .. attribute:: programmed_bandwidth
                                        
                                        	Bandwidth that was programmed
                                        	**type**\:  :py:class:`ProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth>`
                                        
                                        .. attribute:: classes
                                        
                                        	Number of classes
                                        	**type**\: int
                                        
                                        	**range:** 0..65535
                                        
                                        .. attribute:: policy_name
                                        
                                        	Policy name
                                        	**type**\: str
                                        
                                        	**length:** 0..65
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header, self).__init__()

                                            self.yang_name = "header"
                                            self.yang_parent_name = "details"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([("interface-parameters", ("interface_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters)), ("programmed-bandwidth", ("programmed_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth))])
                                            self._child_list_classes = OrderedDict([])
                                            self._leafs = OrderedDict([
                                                ('classes', YLeaf(YType.uint16, 'classes')),
                                                ('policy_name', YLeaf(YType.str, 'policy-name')),
                                            ])
                                            self.classes = None
                                            self.policy_name = None

                                            self.interface_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters()
                                            self.interface_parameters.parent = self
                                            self._children_name_map["interface_parameters"] = "interface-parameters"
                                            self._children_yang_names.add("interface-parameters")

                                            self.programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth()
                                            self.programmed_bandwidth.parent = self
                                            self._children_name_map["programmed_bandwidth"] = "programmed-bandwidth"
                                            self._children_yang_names.add("programmed-bandwidth")
                                            self._segment_path = lambda: "header"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header, ['classes', 'policy_name'], name, value)


                                        class InterfaceParameters(Entity):
                                            """
                                            Interface config and programmed parameters
                                            
                                            .. attribute:: port_config_bandwidth
                                            
                                            	Bandwidth due to port speed change
                                            	**type**\:  :py:class:`PortConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth>`
                                            
                                            .. attribute:: ancp_config_bandwidth
                                            
                                            	Bandwidth obtain from IM
                                            	**type**\:  :py:class:`AncpConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth>`
                                            
                                            .. attribute:: ancp_programmed_bandwidth
                                            
                                            	ANCP bandwidth that was programmed
                                            	**type**\:  :py:class:`AncpProgrammedBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth>`
                                            
                                            .. attribute:: port_shaper_rate
                                            
                                            	Bandwidth that was programmed
                                            	**type**\:  :py:class:`PortShaperRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters, self).__init__()

                                                self.yang_name = "interface-parameters"
                                                self.yang_parent_name = "header"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("port-config-bandwidth", ("port_config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth)), ("ancp-config-bandwidth", ("ancp_config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth)), ("ancp-programmed-bandwidth", ("ancp_programmed_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth)), ("port-shaper-rate", ("port_shaper_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict()

                                                self.port_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth()
                                                self.port_config_bandwidth.parent = self
                                                self._children_name_map["port_config_bandwidth"] = "port-config-bandwidth"
                                                self._children_yang_names.add("port-config-bandwidth")

                                                self.ancp_config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth()
                                                self.ancp_config_bandwidth.parent = self
                                                self._children_name_map["ancp_config_bandwidth"] = "ancp-config-bandwidth"
                                                self._children_yang_names.add("ancp-config-bandwidth")

                                                self.ancp_programmed_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth()
                                                self.ancp_programmed_bandwidth.parent = self
                                                self._children_name_map["ancp_programmed_bandwidth"] = "ancp-programmed-bandwidth"
                                                self._children_yang_names.add("ancp-programmed-bandwidth")

                                                self.port_shaper_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate()
                                                self.port_shaper_rate.parent = self
                                                self._children_name_map["port_shaper_rate"] = "port-shaper-rate"
                                                self._children_yang_names.add("port-shaper-rate")
                                                self._segment_path = lambda: "interface-parameters"


                                            class PortConfigBandwidth(Entity):
                                                """
                                                Bandwidth due to port speed change
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth, self).__init__()

                                                    self.yang_name = "port-config-bandwidth"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "port-config-bandwidth"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortConfigBandwidth, ['value', 'unit'], name, value)


                                            class AncpConfigBandwidth(Entity):
                                                """
                                                Bandwidth obtain from IM
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth, self).__init__()

                                                    self.yang_name = "ancp-config-bandwidth"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "ancp-config-bandwidth"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpConfigBandwidth, ['value', 'unit'], name, value)


                                            class AncpProgrammedBandwidth(Entity):
                                                """
                                                ANCP bandwidth that was programmed
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, self).__init__()

                                                    self.yang_name = "ancp-programmed-bandwidth"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "ancp-programmed-bandwidth"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.AncpProgrammedBandwidth, ['value', 'unit'], name, value)


                                            class PortShaperRate(Entity):
                                                """
                                                Bandwidth that was programmed
                                                
                                                .. attribute:: value
                                                
                                                	Config value
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: unit
                                                
                                                	Config unit
                                                	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate, self).__init__()

                                                    self.yang_name = "port-shaper-rate"
                                                    self.yang_parent_name = "interface-parameters"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('value', YLeaf(YType.uint32, 'value')),
                                                        ('unit', YLeaf(YType.enumeration, 'unit')),
                                                    ])
                                                    self.value = None
                                                    self.unit = None
                                                    self._segment_path = lambda: "port-shaper-rate"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.InterfaceParameters.PortShaperRate, ['value', 'unit'], name, value)


                                        class ProgrammedBandwidth(Entity):
                                            """
                                            Bandwidth that was programmed
                                            
                                            .. attribute:: value
                                            
                                            	Config value
                                            	**type**\: int
                                            
                                            	**range:** 0..4294967295
                                            
                                            .. attribute:: unit
                                            
                                            	Config unit
                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth, self).__init__()

                                                self.yang_name = "programmed-bandwidth"
                                                self.yang_parent_name = "header"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                ])
                                                self.value = None
                                                self.unit = None
                                                self._segment_path = lambda: "programmed-bandwidth"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Header.ProgrammedBandwidth, ['value', 'unit'], name, value)


                                    class Policy(Entity):
                                        """
                                        Trident QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v1
                                        
                                        	qos show ea st v1
                                        	**type**\: list of  		 :py:class:`QosShowEaStV1 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy, self).__init__()

                                            self.yang_name = "policy"
                                            self.yang_parent_name = "details"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("qos-show-ea-st-v1", ("qos_show_ea_st_v1", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1))])
                                            self._leafs = OrderedDict()

                                            self.qos_show_ea_st_v1 = YList(self)
                                            self._segment_path = lambda: "policy"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy, [], name, value)


                                        class QosShowEaStV1(Entity):
                                            """
                                            qos show ea st v1
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape>`
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred>`
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark>`
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\: int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1, self).__init__()

                                                self.yang_name = "qos-show-ea-st-v1"
                                                self.yang_parent_name = "policy"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape)), ("police", ("police", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('class_level', YLeaf(YType.uint8, 'class-level')),
                                                    ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ('policy_name', YLeaf(YType.str, 'policy-name')),
                                                    ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                                    ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                                ])
                                                self.class_level = None
                                                self.class_name = None
                                                self.policy_name = None
                                                self.parent_policy_name = None
                                                self.parent_class_name = None

                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue()
                                                self.queue.parent = self
                                                self._children_name_map["queue"] = "queue"
                                                self._children_yang_names.add("queue")

                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                                self._children_yang_names.add("queue-limit-parameters")

                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape()
                                                self.shape.parent = self
                                                self._children_name_map["shape"] = "shape"
                                                self._children_yang_names.add("shape")

                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police()
                                                self.police.parent = self
                                                self._children_name_map["police"] = "police"
                                                self._children_yang_names.add("police")

                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq()
                                                self.wfq.parent = self
                                                self._children_name_map["wfq"] = "wfq"
                                                self._children_yang_names.add("wfq")

                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred()
                                                self.wred.parent = self
                                                self._children_name_map["wred"] = "wred"
                                                self._children_yang_names.add("wred")

                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark()
                                                self.mark.parent = self
                                                self._children_name_map["mark"] = "mark"
                                                self._children_yang_names.add("mark")
                                                self._segment_path = lambda: "qos-show-ea-st-v1"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                            class Queue(Entity):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\: str
                                                
                                                	**length:** 0..65
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue, self).__init__()

                                                    self.yang_name = "queue"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                        ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                        ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ])
                                                    self.queue_id = None
                                                    self.queue_type = None
                                                    self.class_name = None
                                                    self._segment_path = lambda: "queue"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                            class QueueLimitParameters(Entity):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters, self).__init__()

                                                    self.yang_name = "queue-limit-parameters"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                                    ])
                                                    self.profile_id = None
                                                    self.scaling_profile_id = None

                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self._children_name_map["queue_limit"] = "queue-limit"
                                                    self._children_yang_names.add("queue-limit")

                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                                    self._children_yang_names.add("config-queue-limit")
                                                    self._segment_path = lambda: "queue-limit-parameters"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters, ['profile_id', 'scaling_profile_id'], name, value)


                                                class QueueLimit(Entity):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, self).__init__()

                                                        self.yang_name = "queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                                class ConfigQueueLimit(Entity):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                        self.yang_name = "config-queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "config-queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                            class Shape(Entity):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cir
                                                
                                                	CIR in kbps
                                                	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir>`
                                                
                                                .. attribute:: config_bandwidth
                                                
                                                	Config bandwidth
                                                	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth>`
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS in bytes
                                                	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR in kbps
                                                	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS in bytes
                                                	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Shape profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape, self).__init__()

                                                    self.yang_name = "shape"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                    ])
                                                    self.profile_id = None

                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir()
                                                    self.cir.parent = self
                                                    self._children_name_map["cir"] = "cir"
                                                    self._children_yang_names.add("cir")

                                                    self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth()
                                                    self.config_bandwidth.parent = self
                                                    self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                                    self._children_yang_names.add("config-bandwidth")

                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs()
                                                    self.cbs.parent = self
                                                    self._children_name_map["cbs"] = "cbs"
                                                    self._children_yang_names.add("cbs")

                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir()
                                                    self.pir.parent = self
                                                    self._children_name_map["pir"] = "pir"
                                                    self._children_yang_names.add("pir")

                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs()
                                                    self.pbs.parent = self
                                                    self._children_name_map["pbs"] = "pbs"
                                                    self._children_yang_names.add("pbs")
                                                    self._segment_path = lambda: "shape"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape, ['profile_id'], name, value)


                                                class Cir(Entity):
                                                    """
                                                    CIR in kbps
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir, self).__init__()

                                                        self.yang_name = "cir"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cir, ['value', 'unit'], name, value)


                                                class ConfigBandwidth(Entity):
                                                    """
                                                    Config bandwidth
                                                    
                                                    .. attribute:: minimum_rate
                                                    
                                                    	Minimum bandwidth rate
                                                    	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth, self).__init__()

                                                        self.yang_name = "config-bandwidth"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict()

                                                        self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate()
                                                        self.minimum_rate.parent = self
                                                        self._children_name_map["minimum_rate"] = "minimum-rate"
                                                        self._children_yang_names.add("minimum-rate")
                                                        self._segment_path = lambda: "config-bandwidth"


                                                    class MinimumRate(Entity):
                                                        """
                                                        Minimum bandwidth rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, self).__init__()

                                                            self.yang_name = "minimum-rate"
                                                            self.yang_parent_name = "config-bandwidth"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "minimum-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                                class Cbs(Entity):
                                                    """
                                                    CBS in bytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs, self).__init__()

                                                        self.yang_name = "cbs"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Cbs, ['value', 'unit'], name, value)


                                                class Pir(Entity):
                                                    """
                                                    PIR in kbps
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir, self).__init__()

                                                        self.yang_name = "pir"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pir, ['value', 'unit'], name, value)


                                                class Pbs(Entity):
                                                    """
                                                    PBS in bytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs, self).__init__()

                                                        self.yang_name = "pbs"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Shape.Pbs, ['value', 'unit'], name, value)


                                            class Police(Entity):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir>`
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police, self).__init__()

                                                    self.yang_name = "police"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                    ])
                                                    self.policer_type = None
                                                    self.profile_id = None

                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir()
                                                    self.cir.parent = self
                                                    self._children_name_map["cir"] = "cir"
                                                    self._children_yang_names.add("cir")

                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self._children_name_map["cbs"] = "cbs"
                                                    self._children_yang_names.add("cbs")

                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir()
                                                    self.pir.parent = self
                                                    self._children_name_map["pir"] = "pir"
                                                    self._children_yang_names.add("pir")

                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self._children_name_map["pbs"] = "pbs"
                                                    self._children_yang_names.add("pbs")

                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                                    self._children_yang_names.add("police-config-parameters")
                                                    self._segment_path = lambda: "police"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police, ['policer_type', 'profile_id'], name, value)


                                                class Cir(Entity):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir, self).__init__()

                                                        self.yang_name = "cir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cir, ['value', 'unit'], name, value)


                                                class Cbs(Entity):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs, self).__init__()

                                                        self.yang_name = "cbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Cbs, ['value', 'unit'], name, value)


                                                class Pir(Entity):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir, self).__init__()

                                                        self.yang_name = "pir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pir, ['value', 'unit'], name, value)


                                                class Pbs(Entity):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs, self).__init__()

                                                        self.yang_name = "pbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.Pbs, ['value', 'unit'], name, value)


                                                class PoliceConfigParameters(Entity):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters, self).__init__()

                                                        self.yang_name = "police-config-parameters"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict()

                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self._children_name_map["average_rate"] = "average-rate"
                                                        self._children_yang_names.add("average-rate")

                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self
                                                        self._children_name_map["peak_rate"] = "peak-rate"
                                                        self._children_yang_names.add("peak-rate")

                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self._children_name_map["conform_burst"] = "conform-burst"
                                                        self._children_yang_names.add("conform-burst")

                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self._children_name_map["exceed_burst"] = "exceed-burst"
                                                        self._children_yang_names.add("exceed-burst")
                                                        self._segment_path = lambda: "police-config-parameters"


                                                    class AverageRate(Entity):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                            self.yang_name = "average-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "average-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                                    class PeakRate(Entity):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                            self.yang_name = "peak-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "peak-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                                    class ConformBurst(Entity):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                            self.yang_name = "conform-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "conform-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                                    class ExceedBurst(Entity):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                            self.yang_name = "exceed-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "exceed-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                            class Wfq(Entity):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq, self).__init__()

                                                    self.yang_name = "wfq"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                        ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                        ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                        ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                        ('level', YLeaf(YType.uint8, 'level')),
                                                    ])
                                                    self.profile_id = None
                                                    self.committed_weight = None
                                                    self.excess_weight = None
                                                    self.excess_ratio = None
                                                    self.chunk_id = None
                                                    self.level = None

                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                                    self._children_yang_names.add("parent-bandwidth")

                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self._children_name_map["bandwidth"] = "bandwidth"
                                                    self._children_yang_names.add("bandwidth")
                                                    self._segment_path = lambda: "wfq"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                                class ParentBandwidth(Entity):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, self).__init__()

                                                        self.yang_name = "parent-bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "parent-bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                                class Bandwidth(Entity):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, self).__init__()

                                                        self.yang_name = "bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                            class Wred(Entity):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: table_id
                                                
                                                	Table ID
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                .. attribute:: profile_id
                                                
                                                	Profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: scaling_profile_id
                                                
                                                	Scaling profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred, self).__init__()

                                                    self.yang_name = "wred"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve))])
                                                    self._leafs = OrderedDict([
                                                        ('type', YLeaf(YType.enumeration, 'type')),
                                                        ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                                        ('table_id', YLeaf(YType.uint8, 'table-id')),
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('scaling_profile_id', YLeaf(YType.uint32, 'scaling-profile-id')),
                                                    ])
                                                    self.type = None
                                                    self.curve_xr = None
                                                    self.table_id = None
                                                    self.profile_id = None
                                                    self.scaling_profile_id = None

                                                    self.curve = YList(self)
                                                    self._segment_path = lambda: "wred"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred, ['type', 'curve_xr', 'table_id', 'profile_id', 'scaling_profile_id'], name, value)


                                                class Curve(Entity):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED precedence match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\: str
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve, self).__init__()

                                                        self.yang_name = "curve"
                                                        self.yang_parent_name = "wred"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('match', YLeaf(YType.str, 'match')),
                                                        ])
                                                        self.match = None

                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self._children_name_map["min_threshold"] = "min-threshold"
                                                        self._children_yang_names.add("min-threshold")

                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self
                                                        self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                        self._children_yang_names.add("min-threshold-user-config")

                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self._children_name_map["max_threshold"] = "max-threshold"
                                                        self._children_yang_names.add("max-threshold")

                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                        self._children_yang_names.add("max-threshold-user-config")
                                                        self._segment_path = lambda: "curve"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve, ['match'], name, value)


                                                    class MinThreshold(Entity):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, self).__init__()

                                                            self.yang_name = "min-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                                    class MinThresholdUserConfig(Entity):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                            self.yang_name = "min-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                                    class MaxThreshold(Entity):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, self).__init__()

                                                            self.yang_name = "max-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                                    class MaxThresholdUserConfig(Entity):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                            self.yang_name = "max-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                            class Mark(Entity):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark, self).__init__()

                                                    self.yang_name = "mark"
                                                    self.yang_parent_name = "qos-show-ea-st-v1"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict()

                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self._children_name_map["child_mark"] = "child-mark"
                                                    self._children_yang_names.add("child-mark")

                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self._children_name_map["police_conform"] = "police-conform"
                                                    self._children_yang_names.add("police-conform")

                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self._children_name_map["police_exceed"] = "police-exceed"
                                                    self._children_yang_names.add("police-exceed")

                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate()
                                                    self.police_violate.parent = self
                                                    self._children_name_map["police_violate"] = "police-violate"
                                                    self._children_yang_names.add("police-violate")

                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self._children_name_map["parent_mark"] = "parent-mark"
                                                    self._children_yang_names.add("parent-mark")

                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                                    self._children_yang_names.add("parent-police-conform")

                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                                    self._children_yang_names.add("parent-police-exceed")

                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                                    self._children_yang_names.add("parent-police-violate")
                                                    self._segment_path = lambda: "mark"


                                                class ChildMark(Entity):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark, self).__init__()

                                                        self.yang_name = "child-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "child-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "child-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceConform(Entity):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform, self).__init__()

                                                        self.yang_name = "police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceExceed(Entity):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, self).__init__()

                                                        self.yang_name = "police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceViolate(Entity):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, self).__init__()

                                                        self.yang_name = "police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentMark(Entity):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark, self).__init__()

                                                        self.yang_name = "parent-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceConform(Entity):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, self).__init__()

                                                        self.yang_name = "parent-police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceExceed(Entity):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, self).__init__()

                                                        self.yang_name = "parent-police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceViolate(Entity):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, self).__init__()

                                                        self.yang_name = "parent-police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.Policy.QosShowEaStV1.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                    class PolicyTyphoon(Entity):
                                        """
                                        Typhoon QoS policy details
                                        
                                        .. attribute:: qos_show_ea_st_v2
                                        
                                        	qos show ea st v2
                                        	**type**\: list of  		 :py:class:`QosShowEaStV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2>`
                                        
                                        

                                        """

                                        _prefix = 'asr9k-qos-oper'
                                        _revision = '2015-11-09'

                                        def __init__(self):
                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon, self).__init__()

                                            self.yang_name = "policy-typhoon"
                                            self.yang_parent_name = "details"
                                            self.is_top_level_class = False
                                            self.has_list_ancestor = True
                                            self.ylist_key_names = []
                                            self._child_container_classes = OrderedDict([])
                                            self._child_list_classes = OrderedDict([("qos-show-ea-st-v2", ("qos_show_ea_st_v2", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2))])
                                            self._leafs = OrderedDict()

                                            self.qos_show_ea_st_v2 = YList(self)
                                            self._segment_path = lambda: "policy-typhoon"

                                        def __setattr__(self, name, value):
                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon, [], name, value)


                                        class QosShowEaStV2(Entity):
                                            """
                                            qos show ea st v2
                                            
                                            .. attribute:: queue
                                            
                                            	Queue parameters
                                            	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue>`
                                            
                                            .. attribute:: queue_limit_parameters
                                            
                                            	Queue limit parameters
                                            	**type**\:  :py:class:`QueueLimitParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters>`
                                            
                                            .. attribute:: shape
                                            
                                            	Shape parameters
                                            	**type**\:  :py:class:`Shape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape>`
                                            
                                            .. attribute:: police
                                            
                                            	Police parameters
                                            	**type**\:  :py:class:`Police <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police>`
                                            
                                            .. attribute:: wfq
                                            
                                            	WFQ parameters
                                            	**type**\:  :py:class:`Wfq <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq>`
                                            
                                            .. attribute:: wred
                                            
                                            	WRED parameters
                                            	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred>`
                                            
                                            .. attribute:: mark
                                            
                                            	Mark parameters
                                            	**type**\:  :py:class:`Mark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark>`
                                            
                                            .. attribute:: class_level
                                            
                                            	Class level
                                            	**type**\: int
                                            
                                            	**range:** 0..255
                                            
                                            .. attribute:: class_name
                                            
                                            	Class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: policy_name
                                            
                                            	Policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_policy_name
                                            
                                            	Parent policy name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            .. attribute:: parent_class_name
                                            
                                            	Parent class name
                                            	**type**\: str
                                            
                                            	**length:** 0..65
                                            
                                            

                                            """

                                            _prefix = 'asr9k-qos-oper'
                                            _revision = '2015-11-09'

                                            def __init__(self):
                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2, self).__init__()

                                                self.yang_name = "qos-show-ea-st-v2"
                                                self.yang_parent_name = "policy-typhoon"
                                                self.is_top_level_class = False
                                                self.has_list_ancestor = True
                                                self.ylist_key_names = []
                                                self._child_container_classes = OrderedDict([("queue", ("queue", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue)), ("queue-limit-parameters", ("queue_limit_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters)), ("shape", ("shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape)), ("police", ("police", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police)), ("wfq", ("wfq", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq)), ("wred", ("wred", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred)), ("mark", ("mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark))])
                                                self._child_list_classes = OrderedDict([])
                                                self._leafs = OrderedDict([
                                                    ('class_level', YLeaf(YType.uint8, 'class-level')),
                                                    ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ('policy_name', YLeaf(YType.str, 'policy-name')),
                                                    ('parent_policy_name', YLeaf(YType.str, 'parent-policy-name')),
                                                    ('parent_class_name', YLeaf(YType.str, 'parent-class-name')),
                                                ])
                                                self.class_level = None
                                                self.class_name = None
                                                self.policy_name = None
                                                self.parent_policy_name = None
                                                self.parent_class_name = None

                                                self.queue = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue()
                                                self.queue.parent = self
                                                self._children_name_map["queue"] = "queue"
                                                self._children_yang_names.add("queue")

                                                self.queue_limit_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters()
                                                self.queue_limit_parameters.parent = self
                                                self._children_name_map["queue_limit_parameters"] = "queue-limit-parameters"
                                                self._children_yang_names.add("queue-limit-parameters")

                                                self.shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape()
                                                self.shape.parent = self
                                                self._children_name_map["shape"] = "shape"
                                                self._children_yang_names.add("shape")

                                                self.police = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police()
                                                self.police.parent = self
                                                self._children_name_map["police"] = "police"
                                                self._children_yang_names.add("police")

                                                self.wfq = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq()
                                                self.wfq.parent = self
                                                self._children_name_map["wfq"] = "wfq"
                                                self._children_yang_names.add("wfq")

                                                self.wred = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred()
                                                self.wred.parent = self
                                                self._children_name_map["wred"] = "wred"
                                                self._children_yang_names.add("wred")

                                                self.mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark()
                                                self.mark.parent = self
                                                self._children_name_map["mark"] = "mark"
                                                self._children_yang_names.add("mark")
                                                self._segment_path = lambda: "qos-show-ea-st-v2"

                                            def __setattr__(self, name, value):
                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2, ['class_level', 'class_name', 'policy_name', 'parent_policy_name', 'parent_class_name'], name, value)


                                            class Queue(Entity):
                                                """
                                                Queue parameters
                                                
                                                .. attribute:: queue_id
                                                
                                                	Queue ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: queue_type
                                                
                                                	Queue type
                                                	**type**\:  :py:class:`Queue <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Queue>`
                                                
                                                .. attribute:: class_name
                                                
                                                	Class name
                                                	**type**\: str
                                                
                                                	**length:** 0..65
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue, self).__init__()

                                                    self.yang_name = "queue"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('queue_id', YLeaf(YType.uint32, 'queue-id')),
                                                        ('queue_type', YLeaf(YType.enumeration, 'queue-type')),
                                                        ('class_name', YLeaf(YType.str, 'class-name')),
                                                    ])
                                                    self.queue_id = None
                                                    self.queue_type = None
                                                    self.class_name = None
                                                    self._segment_path = lambda: "queue"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Queue, ['queue_id', 'queue_type', 'class_name'], name, value)


                                            class QueueLimitParameters(Entity):
                                                """
                                                Queue limit parameters
                                                
                                                .. attribute:: queue_limit
                                                
                                                	Queue limit in kbytes
                                                	**type**\:  :py:class:`QueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit>`
                                                
                                                .. attribute:: config_queue_limit
                                                
                                                	Config queue limit
                                                	**type**\:  :py:class:`ConfigQueueLimit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit>`
                                                
                                                .. attribute:: absolute_index
                                                
                                                	Absolute Index
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: template_id
                                                
                                                	Template ID
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: curve_id
                                                
                                                	Curve ID
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, self).__init__()

                                                    self.yang_name = "queue-limit-parameters"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("queue-limit", ("queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit)), ("config-queue-limit", ("config_queue_limit", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                        ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                        ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                                    ])
                                                    self.absolute_index = None
                                                    self.template_id = None
                                                    self.curve_id = None

                                                    self.queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit()
                                                    self.queue_limit.parent = self
                                                    self._children_name_map["queue_limit"] = "queue-limit"
                                                    self._children_yang_names.add("queue-limit")

                                                    self.config_queue_limit = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit()
                                                    self.config_queue_limit.parent = self
                                                    self._children_name_map["config_queue_limit"] = "config-queue-limit"
                                                    self._children_yang_names.add("config-queue-limit")
                                                    self._segment_path = lambda: "queue-limit-parameters"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters, ['absolute_index', 'template_id', 'curve_id'], name, value)


                                                class QueueLimit(Entity):
                                                    """
                                                    Queue limit in kbytes
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, self).__init__()

                                                        self.yang_name = "queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.QueueLimit, ['value', 'unit'], name, value)


                                                class ConfigQueueLimit(Entity):
                                                    """
                                                    Config queue limit
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, self).__init__()

                                                        self.yang_name = "config-queue-limit"
                                                        self.yang_parent_name = "queue-limit-parameters"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "config-queue-limit"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.QueueLimitParameters.ConfigQueueLimit, ['value', 'unit'], name, value)


                                            class Shape(Entity):
                                                """
                                                Shape parameters
                                                
                                                .. attribute:: cir_shape
                                                
                                                	CIR shaper params
                                                	**type**\:  :py:class:`CirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape>`
                                                
                                                .. attribute:: pir_shape
                                                
                                                	PIR shaper params
                                                	**type**\:  :py:class:`PirShape <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape>`
                                                
                                                .. attribute:: cir_shape_type
                                                
                                                	CIR Shaper type
                                                	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                                
                                                .. attribute:: pir_shape_type
                                                
                                                	PIR Shaper type
                                                	**type**\:  :py:class:`ShapeProfiletypeV2 <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ShapeProfiletypeV2>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape, self).__init__()

                                                    self.yang_name = "shape"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir-shape", ("cir_shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape)), ("pir-shape", ("pir_shape", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('cir_shape_type', YLeaf(YType.enumeration, 'cir-shape-type')),
                                                        ('pir_shape_type', YLeaf(YType.enumeration, 'pir-shape-type')),
                                                    ])
                                                    self.cir_shape_type = None
                                                    self.pir_shape_type = None

                                                    self.cir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape()
                                                    self.cir_shape.parent = self
                                                    self._children_name_map["cir_shape"] = "cir-shape"
                                                    self._children_yang_names.add("cir-shape")

                                                    self.pir_shape = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape()
                                                    self.pir_shape.parent = self
                                                    self._children_name_map["pir_shape"] = "pir-shape"
                                                    self._children_yang_names.add("pir-shape")
                                                    self._segment_path = lambda: "shape"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape, ['cir_shape_type', 'pir_shape_type'], name, value)


                                                class CirShape(Entity):
                                                    """
                                                    CIR shaper params
                                                    
                                                    .. attribute:: cir
                                                    
                                                    	CIR in kbps
                                                    	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir>`
                                                    
                                                    .. attribute:: config_bandwidth
                                                    
                                                    	Config bandwidth
                                                    	**type**\:  :py:class:`ConfigBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth>`
                                                    
                                                    .. attribute:: cbs
                                                    
                                                    	CBS in bytes
                                                    	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs>`
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, self).__init__()

                                                        self.yang_name = "cir-shape"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir)), ("config-bandwidth", ("config_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                            ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                            ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                        ])
                                                        self.chunk_id = None
                                                        self.profile_id = None
                                                        self.scale_factor = None

                                                        self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir()
                                                        self.cir.parent = self
                                                        self._children_name_map["cir"] = "cir"
                                                        self._children_yang_names.add("cir")

                                                        self.config_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth()
                                                        self.config_bandwidth.parent = self
                                                        self._children_name_map["config_bandwidth"] = "config-bandwidth"
                                                        self._children_yang_names.add("config-bandwidth")

                                                        self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs()
                                                        self.cbs.parent = self
                                                        self._children_name_map["cbs"] = "cbs"
                                                        self._children_yang_names.add("cbs")
                                                        self._segment_path = lambda: "cir-shape"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                                    class Cir(Entity):
                                                        """
                                                        CIR in kbps
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, self).__init__()

                                                            self.yang_name = "cir"
                                                            self.yang_parent_name = "cir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "cir"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cir, ['value', 'unit'], name, value)


                                                    class ConfigBandwidth(Entity):
                                                        """
                                                        Config bandwidth
                                                        
                                                        .. attribute:: minimum_rate
                                                        
                                                        	Minimum bandwidth rate
                                                        	**type**\:  :py:class:`MinimumRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth, self).__init__()

                                                            self.yang_name = "config-bandwidth"
                                                            self.yang_parent_name = "cir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([("minimum-rate", ("minimum_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate))])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict()

                                                            self.minimum_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate()
                                                            self.minimum_rate.parent = self
                                                            self._children_name_map["minimum_rate"] = "minimum-rate"
                                                            self._children_yang_names.add("minimum-rate")
                                                            self._segment_path = lambda: "config-bandwidth"


                                                        class MinimumRate(Entity):
                                                            """
                                                            Minimum bandwidth rate
                                                            
                                                            .. attribute:: value
                                                            
                                                            	Config value
                                                            	**type**\: int
                                                            
                                                            	**range:** 0..4294967295
                                                            
                                                            .. attribute:: unit
                                                            
                                                            	Config unit
                                                            	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                            
                                                            

                                                            """

                                                            _prefix = 'asr9k-qos-oper'
                                                            _revision = '2015-11-09'

                                                            def __init__(self):
                                                                super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, self).__init__()

                                                                self.yang_name = "minimum-rate"
                                                                self.yang_parent_name = "config-bandwidth"
                                                                self.is_top_level_class = False
                                                                self.has_list_ancestor = True
                                                                self.ylist_key_names = []
                                                                self._child_container_classes = OrderedDict([])
                                                                self._child_list_classes = OrderedDict([])
                                                                self._leafs = OrderedDict([
                                                                    ('value', YLeaf(YType.uint32, 'value')),
                                                                    ('unit', YLeaf(YType.enumeration, 'unit')),
                                                                ])
                                                                self.value = None
                                                                self.unit = None
                                                                self._segment_path = lambda: "minimum-rate"

                                                            def __setattr__(self, name, value):
                                                                self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.ConfigBandwidth.MinimumRate, ['value', 'unit'], name, value)


                                                    class Cbs(Entity):
                                                        """
                                                        CBS in bytes
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, self).__init__()

                                                            self.yang_name = "cbs"
                                                            self.yang_parent_name = "cir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "cbs"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.CirShape.Cbs, ['value', 'unit'], name, value)


                                                class PirShape(Entity):
                                                    """
                                                    PIR shaper params
                                                    
                                                    .. attribute:: pir
                                                    
                                                    	PIR in kbps
                                                    	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir>`
                                                    
                                                    .. attribute:: pbs
                                                    
                                                    	PBS in bytes
                                                    	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs>`
                                                    
                                                    .. attribute:: chunk_id
                                                    
                                                    	Shape Chunk ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: profile_id
                                                    
                                                    	Shape profile ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: scale_factor
                                                    
                                                    	Scale Factor
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, self).__init__()

                                                        self.yang_name = "pir-shape"
                                                        self.yang_parent_name = "shape"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                            ('profile_id', YLeaf(YType.uint16, 'profile-id')),
                                                            ('scale_factor', YLeaf(YType.uint16, 'scale-factor')),
                                                        ])
                                                        self.chunk_id = None
                                                        self.profile_id = None
                                                        self.scale_factor = None

                                                        self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir()
                                                        self.pir.parent = self
                                                        self._children_name_map["pir"] = "pir"
                                                        self._children_yang_names.add("pir")

                                                        self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs()
                                                        self.pbs.parent = self
                                                        self._children_name_map["pbs"] = "pbs"
                                                        self._children_yang_names.add("pbs")
                                                        self._segment_path = lambda: "pir-shape"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape, ['chunk_id', 'profile_id', 'scale_factor'], name, value)


                                                    class Pir(Entity):
                                                        """
                                                        PIR in kbps
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, self).__init__()

                                                            self.yang_name = "pir"
                                                            self.yang_parent_name = "pir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "pir"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pir, ['value', 'unit'], name, value)


                                                    class Pbs(Entity):
                                                        """
                                                        PBS in bytes
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, self).__init__()

                                                            self.yang_name = "pbs"
                                                            self.yang_parent_name = "pir-shape"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "pbs"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Shape.PirShape.Pbs, ['value', 'unit'], name, value)


                                            class Police(Entity):
                                                """
                                                Police parameters
                                                
                                                .. attribute:: cir
                                                
                                                	CIR
                                                	**type**\:  :py:class:`Cir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir>`
                                                
                                                .. attribute:: cbs
                                                
                                                	CBS
                                                	**type**\:  :py:class:`Cbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs>`
                                                
                                                .. attribute:: pir
                                                
                                                	PIR
                                                	**type**\:  :py:class:`Pir <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir>`
                                                
                                                .. attribute:: pbs
                                                
                                                	PBS
                                                	**type**\:  :py:class:`Pbs <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs>`
                                                
                                                .. attribute:: police_config_parameters
                                                
                                                	Police config parameters
                                                	**type**\:  :py:class:`PoliceConfigParameters <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters>`
                                                
                                                .. attribute:: policer_type
                                                
                                                	Policer type
                                                	**type**\:  :py:class:`TbAlgorithm <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.TbAlgorithm>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	Police profile ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police, self).__init__()

                                                    self.yang_name = "police"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("cir", ("cir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir)), ("cbs", ("cbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs)), ("pir", ("pir", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir)), ("pbs", ("pbs", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs)), ("police-config-parameters", ("police_config_parameters", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('policer_type', YLeaf(YType.enumeration, 'policer-type')),
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                    ])
                                                    self.policer_type = None
                                                    self.profile_id = None

                                                    self.cir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir()
                                                    self.cir.parent = self
                                                    self._children_name_map["cir"] = "cir"
                                                    self._children_yang_names.add("cir")

                                                    self.cbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs()
                                                    self.cbs.parent = self
                                                    self._children_name_map["cbs"] = "cbs"
                                                    self._children_yang_names.add("cbs")

                                                    self.pir = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir()
                                                    self.pir.parent = self
                                                    self._children_name_map["pir"] = "pir"
                                                    self._children_yang_names.add("pir")

                                                    self.pbs = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs()
                                                    self.pbs.parent = self
                                                    self._children_name_map["pbs"] = "pbs"
                                                    self._children_yang_names.add("pbs")

                                                    self.police_config_parameters = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters()
                                                    self.police_config_parameters.parent = self
                                                    self._children_name_map["police_config_parameters"] = "police-config-parameters"
                                                    self._children_yang_names.add("police-config-parameters")
                                                    self._segment_path = lambda: "police"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police, ['policer_type', 'profile_id'], name, value)


                                                class Cir(Entity):
                                                    """
                                                    CIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, self).__init__()

                                                        self.yang_name = "cir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cir, ['value', 'unit'], name, value)


                                                class Cbs(Entity):
                                                    """
                                                    CBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, self).__init__()

                                                        self.yang_name = "cbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "cbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Cbs, ['value', 'unit'], name, value)


                                                class Pir(Entity):
                                                    """
                                                    PIR
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, self).__init__()

                                                        self.yang_name = "pir"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pir"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pir, ['value', 'unit'], name, value)


                                                class Pbs(Entity):
                                                    """
                                                    PBS
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, self).__init__()

                                                        self.yang_name = "pbs"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "pbs"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.Pbs, ['value', 'unit'], name, value)


                                                class PoliceConfigParameters(Entity):
                                                    """
                                                    Police config parameters
                                                    
                                                    .. attribute:: average_rate
                                                    
                                                    	Average rate
                                                    	**type**\:  :py:class:`AverageRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate>`
                                                    
                                                    .. attribute:: peak_rate
                                                    
                                                    	Peak rate
                                                    	**type**\:  :py:class:`PeakRate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate>`
                                                    
                                                    .. attribute:: conform_burst
                                                    
                                                    	Conform burst
                                                    	**type**\:  :py:class:`ConformBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst>`
                                                    
                                                    .. attribute:: exceed_burst
                                                    
                                                    	Exceed burst
                                                    	**type**\:  :py:class:`ExceedBurst <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters, self).__init__()

                                                        self.yang_name = "police-config-parameters"
                                                        self.yang_parent_name = "police"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("average-rate", ("average_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate)), ("peak-rate", ("peak_rate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate)), ("conform-burst", ("conform_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst)), ("exceed-burst", ("exceed_burst", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict()

                                                        self.average_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate()
                                                        self.average_rate.parent = self
                                                        self._children_name_map["average_rate"] = "average-rate"
                                                        self._children_yang_names.add("average-rate")

                                                        self.peak_rate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate()
                                                        self.peak_rate.parent = self
                                                        self._children_name_map["peak_rate"] = "peak-rate"
                                                        self._children_yang_names.add("peak-rate")

                                                        self.conform_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst()
                                                        self.conform_burst.parent = self
                                                        self._children_name_map["conform_burst"] = "conform-burst"
                                                        self._children_yang_names.add("conform-burst")

                                                        self.exceed_burst = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst()
                                                        self.exceed_burst.parent = self
                                                        self._children_name_map["exceed_burst"] = "exceed-burst"
                                                        self._children_yang_names.add("exceed-burst")
                                                        self._segment_path = lambda: "police-config-parameters"


                                                    class AverageRate(Entity):
                                                        """
                                                        Average rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, self).__init__()

                                                            self.yang_name = "average-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "average-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.AverageRate, ['value', 'unit'], name, value)


                                                    class PeakRate(Entity):
                                                        """
                                                        Peak rate
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, self).__init__()

                                                            self.yang_name = "peak-rate"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "peak-rate"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.PeakRate, ['value', 'unit'], name, value)


                                                    class ConformBurst(Entity):
                                                        """
                                                        Conform burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, self).__init__()

                                                            self.yang_name = "conform-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "conform-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ConformBurst, ['value', 'unit'], name, value)


                                                    class ExceedBurst(Entity):
                                                        """
                                                        Exceed burst
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, self).__init__()

                                                            self.yang_name = "exceed-burst"
                                                            self.yang_parent_name = "police-config-parameters"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "exceed-burst"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Police.PoliceConfigParameters.ExceedBurst, ['value', 'unit'], name, value)


                                            class Wfq(Entity):
                                                """
                                                WFQ parameters
                                                
                                                .. attribute:: parent_bandwidth
                                                
                                                	Parent bandwidth
                                                	**type**\:  :py:class:`ParentBandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth>`
                                                
                                                .. attribute:: bandwidth
                                                
                                                	CFG Bandwidth
                                                	**type**\:  :py:class:`Bandwidth <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth>`
                                                
                                                .. attribute:: profile_id
                                                
                                                	WFQ profile
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: committed_weight
                                                
                                                	Committed weight
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: excess_weight
                                                
                                                	Excess weight
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: excess_ratio
                                                
                                                	Parent Excess ratio
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: chunk_id
                                                
                                                	Chunk ID
                                                	**type**\: int
                                                
                                                	**range:** 0..4294967295
                                                
                                                .. attribute:: level
                                                
                                                	Level
                                                	**type**\: int
                                                
                                                	**range:** 0..255
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq, self).__init__()

                                                    self.yang_name = "wfq"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("parent-bandwidth", ("parent_bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth)), ("bandwidth", ("bandwidth", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict([
                                                        ('profile_id', YLeaf(YType.uint32, 'profile-id')),
                                                        ('committed_weight', YLeaf(YType.uint32, 'committed-weight')),
                                                        ('excess_weight', YLeaf(YType.uint16, 'excess-weight')),
                                                        ('excess_ratio', YLeaf(YType.uint16, 'excess-ratio')),
                                                        ('chunk_id', YLeaf(YType.uint32, 'chunk-id')),
                                                        ('level', YLeaf(YType.uint8, 'level')),
                                                    ])
                                                    self.profile_id = None
                                                    self.committed_weight = None
                                                    self.excess_weight = None
                                                    self.excess_ratio = None
                                                    self.chunk_id = None
                                                    self.level = None

                                                    self.parent_bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth()
                                                    self.parent_bandwidth.parent = self
                                                    self._children_name_map["parent_bandwidth"] = "parent-bandwidth"
                                                    self._children_yang_names.add("parent-bandwidth")

                                                    self.bandwidth = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth()
                                                    self.bandwidth.parent = self
                                                    self._children_name_map["bandwidth"] = "bandwidth"
                                                    self._children_yang_names.add("bandwidth")
                                                    self._segment_path = lambda: "wfq"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq, ['profile_id', 'committed_weight', 'excess_weight', 'excess_ratio', 'chunk_id', 'level'], name, value)


                                                class ParentBandwidth(Entity):
                                                    """
                                                    Parent bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, self).__init__()

                                                        self.yang_name = "parent-bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "parent-bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.ParentBandwidth, ['value', 'unit'], name, value)


                                                class Bandwidth(Entity):
                                                    """
                                                    CFG Bandwidth
                                                    
                                                    .. attribute:: value
                                                    
                                                    	Config value
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..4294967295
                                                    
                                                    .. attribute:: unit
                                                    
                                                    	Config unit
                                                    	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, self).__init__()

                                                        self.yang_name = "bandwidth"
                                                        self.yang_parent_name = "wfq"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('value', YLeaf(YType.uint32, 'value')),
                                                            ('unit', YLeaf(YType.enumeration, 'unit')),
                                                        ])
                                                        self.value = None
                                                        self.unit = None
                                                        self._segment_path = lambda: "bandwidth"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wfq.Bandwidth, ['value', 'unit'], name, value)


                                            class Wred(Entity):
                                                """
                                                WRED parameters
                                                
                                                .. attribute:: type
                                                
                                                	WRED type
                                                	**type**\:  :py:class:`Wred <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Wred>`
                                                
                                                .. attribute:: curve_xr
                                                
                                                	Number of curves
                                                	**type**\: int
                                                
                                                	**range:** 0..65535
                                                
                                                .. attribute:: curve
                                                
                                                	Curve details
                                                	**type**\: list of  		 :py:class:`Curve <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred, self).__init__()

                                                    self.yang_name = "wred"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([])
                                                    self._child_list_classes = OrderedDict([("curve", ("curve", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve))])
                                                    self._leafs = OrderedDict([
                                                        ('type', YLeaf(YType.enumeration, 'type')),
                                                        ('curve_xr', YLeaf(YType.uint16, 'curve-xr')),
                                                    ])
                                                    self.type = None
                                                    self.curve_xr = None

                                                    self.curve = YList(self)
                                                    self._segment_path = lambda: "wred"

                                                def __setattr__(self, name, value):
                                                    self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred, ['type', 'curve_xr'], name, value)


                                                class Curve(Entity):
                                                    """
                                                    Curve details
                                                    
                                                    .. attribute:: min_threshold
                                                    
                                                    	Minimum threshold
                                                    	**type**\:  :py:class:`MinThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold>`
                                                    
                                                    .. attribute:: min_threshold_user_config
                                                    
                                                    	Minimum threshold WRED context
                                                    	**type**\:  :py:class:`MinThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig>`
                                                    
                                                    .. attribute:: max_threshold
                                                    
                                                    	Maximum threshold
                                                    	**type**\:  :py:class:`MaxThreshold <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold>`
                                                    
                                                    .. attribute:: max_threshold_user_config
                                                    
                                                    	Maximum threshold WRED context
                                                    	**type**\:  :py:class:`MaxThresholdUserConfig <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig>`
                                                    
                                                    .. attribute:: absolute_index
                                                    
                                                    	Absolute Index
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: template_id
                                                    
                                                    	Template ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: curve_id
                                                    
                                                    	Curve ID
                                                    	**type**\: int
                                                    
                                                    	**range:** 0..65535
                                                    
                                                    .. attribute:: match
                                                    
                                                    	WRED match if precedence start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\: str
                                                    
                                                    .. attribute:: exp_match
                                                    
                                                    	WRED exp match if EXP start value equals to end value Format\: <start\-value> , else range Format\: <start\-value> <end\-value>
                                                    	**type**\: str
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, self).__init__()

                                                        self.yang_name = "curve"
                                                        self.yang_parent_name = "wred"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([("min-threshold", ("min_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold)), ("min-threshold-user-config", ("min_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig)), ("max-threshold", ("max_threshold", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold)), ("max-threshold-user-config", ("max_threshold_user_config", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig))])
                                                        self._child_list_classes = OrderedDict([])
                                                        self._leafs = OrderedDict([
                                                            ('absolute_index', YLeaf(YType.uint16, 'absolute-index')),
                                                            ('template_id', YLeaf(YType.uint16, 'template-id')),
                                                            ('curve_id', YLeaf(YType.uint16, 'curve-id')),
                                                            ('match', YLeaf(YType.str, 'match')),
                                                            ('exp_match', YLeaf(YType.str, 'exp-match')),
                                                        ])
                                                        self.absolute_index = None
                                                        self.template_id = None
                                                        self.curve_id = None
                                                        self.match = None
                                                        self.exp_match = None

                                                        self.min_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold()
                                                        self.min_threshold.parent = self
                                                        self._children_name_map["min_threshold"] = "min-threshold"
                                                        self._children_yang_names.add("min-threshold")

                                                        self.min_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig()
                                                        self.min_threshold_user_config.parent = self
                                                        self._children_name_map["min_threshold_user_config"] = "min-threshold-user-config"
                                                        self._children_yang_names.add("min-threshold-user-config")

                                                        self.max_threshold = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold()
                                                        self.max_threshold.parent = self
                                                        self._children_name_map["max_threshold"] = "max-threshold"
                                                        self._children_yang_names.add("max-threshold")

                                                        self.max_threshold_user_config = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig()
                                                        self.max_threshold_user_config.parent = self
                                                        self._children_name_map["max_threshold_user_config"] = "max-threshold-user-config"
                                                        self._children_yang_names.add("max-threshold-user-config")
                                                        self._segment_path = lambda: "curve"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve, ['absolute_index', 'template_id', 'curve_id', 'match', 'exp_match'], name, value)


                                                    class MinThreshold(Entity):
                                                        """
                                                        Minimum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, self).__init__()

                                                            self.yang_name = "min-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThreshold, ['value', 'unit'], name, value)


                                                    class MinThresholdUserConfig(Entity):
                                                        """
                                                        Minimum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, self).__init__()

                                                            self.yang_name = "min-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "min-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MinThresholdUserConfig, ['value', 'unit'], name, value)


                                                    class MaxThreshold(Entity):
                                                        """
                                                        Maximum threshold
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, self).__init__()

                                                            self.yang_name = "max-threshold"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThreshold, ['value', 'unit'], name, value)


                                                    class MaxThresholdUserConfig(Entity):
                                                        """
                                                        Maximum threshold WRED context
                                                        
                                                        .. attribute:: value
                                                        
                                                        	Config value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..4294967295
                                                        
                                                        .. attribute:: unit
                                                        
                                                        	Config unit
                                                        	**type**\:  :py:class:`QosUnit <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.QosUnit>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, self).__init__()

                                                            self.yang_name = "max-threshold-user-config"
                                                            self.yang_parent_name = "curve"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('value', YLeaf(YType.uint32, 'value')),
                                                                ('unit', YLeaf(YType.enumeration, 'unit')),
                                                            ])
                                                            self.value = None
                                                            self.unit = None
                                                            self._segment_path = lambda: "max-threshold-user-config"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Wred.Curve.MaxThresholdUserConfig, ['value', 'unit'], name, value)


                                            class Mark(Entity):
                                                """
                                                Mark parameters
                                                
                                                .. attribute:: child_mark
                                                
                                                	Child mark only
                                                	**type**\:  :py:class:`ChildMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark>`
                                                
                                                .. attribute:: police_conform
                                                
                                                	Child police conform mark
                                                	**type**\:  :py:class:`PoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform>`
                                                
                                                .. attribute:: police_exceed
                                                
                                                	Child police exceed mark
                                                	**type**\:  :py:class:`PoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed>`
                                                
                                                .. attribute:: police_violate
                                                
                                                	Child police violate mark
                                                	**type**\:  :py:class:`PoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate>`
                                                
                                                .. attribute:: parent_mark
                                                
                                                	Parent mark only
                                                	**type**\:  :py:class:`ParentMark <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark>`
                                                
                                                .. attribute:: parent_police_conform
                                                
                                                	Parent police conform mark
                                                	**type**\:  :py:class:`ParentPoliceConform <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform>`
                                                
                                                .. attribute:: parent_police_exceed
                                                
                                                	Parent police exceed mark
                                                	**type**\:  :py:class:`ParentPoliceExceed <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed>`
                                                
                                                .. attribute:: parent_police_violate
                                                
                                                	Parent police violate mark
                                                	**type**\:  :py:class:`ParentPoliceViolate <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate>`
                                                
                                                

                                                """

                                                _prefix = 'asr9k-qos-oper'
                                                _revision = '2015-11-09'

                                                def __init__(self):
                                                    super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark, self).__init__()

                                                    self.yang_name = "mark"
                                                    self.yang_parent_name = "qos-show-ea-st-v2"
                                                    self.is_top_level_class = False
                                                    self.has_list_ancestor = True
                                                    self.ylist_key_names = []
                                                    self._child_container_classes = OrderedDict([("child-mark", ("child_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark)), ("police-conform", ("police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform)), ("police-exceed", ("police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed)), ("police-violate", ("police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate)), ("parent-mark", ("parent_mark", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark)), ("parent-police-conform", ("parent_police_conform", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform)), ("parent-police-exceed", ("parent_police_exceed", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed)), ("parent-police-violate", ("parent_police_violate", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate))])
                                                    self._child_list_classes = OrderedDict([])
                                                    self._leafs = OrderedDict()

                                                    self.child_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark()
                                                    self.child_mark.parent = self
                                                    self._children_name_map["child_mark"] = "child-mark"
                                                    self._children_yang_names.add("child-mark")

                                                    self.police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform()
                                                    self.police_conform.parent = self
                                                    self._children_name_map["police_conform"] = "police-conform"
                                                    self._children_yang_names.add("police-conform")

                                                    self.police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed()
                                                    self.police_exceed.parent = self
                                                    self._children_name_map["police_exceed"] = "police-exceed"
                                                    self._children_yang_names.add("police-exceed")

                                                    self.police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate()
                                                    self.police_violate.parent = self
                                                    self._children_name_map["police_violate"] = "police-violate"
                                                    self._children_yang_names.add("police-violate")

                                                    self.parent_mark = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark()
                                                    self.parent_mark.parent = self
                                                    self._children_name_map["parent_mark"] = "parent-mark"
                                                    self._children_yang_names.add("parent-mark")

                                                    self.parent_police_conform = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform()
                                                    self.parent_police_conform.parent = self
                                                    self._children_name_map["parent_police_conform"] = "parent-police-conform"
                                                    self._children_yang_names.add("parent-police-conform")

                                                    self.parent_police_exceed = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed()
                                                    self.parent_police_exceed.parent = self
                                                    self._children_name_map["parent_police_exceed"] = "parent-police-exceed"
                                                    self._children_yang_names.add("parent-police-exceed")

                                                    self.parent_police_violate = PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate()
                                                    self.parent_police_violate.parent = self
                                                    self._children_name_map["parent_police_violate"] = "parent-police-violate"
                                                    self._children_yang_names.add("parent-police-violate")
                                                    self._segment_path = lambda: "mark"


                                                class ChildMark(Entity):
                                                    """
                                                    Child mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, self).__init__()

                                                        self.yang_name = "child-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "child-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "child-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ChildMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceConform(Entity):
                                                    """
                                                    Child police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, self).__init__()

                                                        self.yang_name = "police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceExceed(Entity):
                                                    """
                                                    Child police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, self).__init__()

                                                        self.yang_name = "police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class PoliceViolate(Entity):
                                                    """
                                                    Child police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, self).__init__()

                                                        self.yang_name = "police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.PoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentMark(Entity):
                                                    """
                                                    Parent mark only
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, self).__init__()

                                                        self.yang_name = "parent-mark"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-mark"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-mark"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentMark.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceConform(Entity):
                                                    """
                                                    Parent police conform mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, self).__init__()

                                                        self.yang_name = "parent-police-conform"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-conform"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-conform"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceConform.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceExceed(Entity):
                                                    """
                                                    Parent police exceed mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, self).__init__()

                                                        self.yang_name = "parent-police-exceed"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-exceed"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-exceed"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceExceed.MarkDetail, ['mark_value', 'action_opcode'], name, value)


                                                class ParentPoliceViolate(Entity):
                                                    """
                                                    Parent police violate mark
                                                    
                                                    .. attribute:: action_type
                                                    
                                                    	Action type
                                                    	**type**\:  :py:class:`Action <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.Action>`
                                                    
                                                    .. attribute:: mark_detail
                                                    
                                                    	Mark value
                                                    	**type**\: list of  		 :py:class:`MarkDetail <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail>`
                                                    
                                                    

                                                    """

                                                    _prefix = 'asr9k-qos-oper'
                                                    _revision = '2015-11-09'

                                                    def __init__(self):
                                                        super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, self).__init__()

                                                        self.yang_name = "parent-police-violate"
                                                        self.yang_parent_name = "mark"
                                                        self.is_top_level_class = False
                                                        self.has_list_ancestor = True
                                                        self.ylist_key_names = []
                                                        self._child_container_classes = OrderedDict([])
                                                        self._child_list_classes = OrderedDict([("mark-detail", ("mark_detail", PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail))])
                                                        self._leafs = OrderedDict([
                                                            ('action_type', YLeaf(YType.enumeration, 'action-type')),
                                                        ])
                                                        self.action_type = None

                                                        self.mark_detail = YList(self)
                                                        self._segment_path = lambda: "parent-police-violate"

                                                    def __setattr__(self, name, value):
                                                        self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate, ['action_type'], name, value)


                                                    class MarkDetail(Entity):
                                                        """
                                                        Mark value
                                                        
                                                        .. attribute:: mark_value
                                                        
                                                        	Mark value
                                                        	**type**\: int
                                                        
                                                        	**range:** 0..255
                                                        
                                                        .. attribute:: action_opcode
                                                        
                                                        	Action opcode
                                                        	**type**\:  :py:class:`ActionOpcode <ydk.models.cisco_ios_xr.Cisco_IOS_XR_asr9k_qos_oper.ActionOpcode>`
                                                        
                                                        

                                                        """

                                                        _prefix = 'asr9k-qos-oper'
                                                        _revision = '2015-11-09'

                                                        def __init__(self):
                                                            super(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, self).__init__()

                                                            self.yang_name = "mark-detail"
                                                            self.yang_parent_name = "parent-police-violate"
                                                            self.is_top_level_class = False
                                                            self.has_list_ancestor = True
                                                            self.ylist_key_names = []
                                                            self._child_container_classes = OrderedDict([])
                                                            self._child_list_classes = OrderedDict([])
                                                            self._leafs = OrderedDict([
                                                                ('mark_value', YLeaf(YType.uint8, 'mark-value')),
                                                                ('action_opcode', YLeaf(YType.enumeration, 'action-opcode')),
                                                            ])
                                                            self.mark_value = None
                                                            self.action_opcode = None
                                                            self._segment_path = lambda: "mark-detail"

                                                        def __setattr__(self, name, value):
                                                            self._perform_setattr(PlatformQos.Nodes.Node.BundleInterfaces.BundleInterface.BundleInput.MemberInterfaces.MemberInterface.Details.PolicyTyphoon.QosShowEaStV2.Mark.ParentPoliceViolate.MarkDetail, ['mark_value', 'action_opcode'], name, value)

    def clone_ptr(self):
        self._top_entity = PlatformQos()
        return self._top_entity

